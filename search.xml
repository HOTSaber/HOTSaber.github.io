<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>512投屏教程</title>
      <link href="/2025/10/16/303.512%E6%8A%95%E5%B1%8F%E6%95%99%E7%A8%8B/"/>
      <url>/2025/10/16/303.512%E6%8A%95%E5%B1%8F%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="选择投屏模式"><a href="#选择投屏模式" class="headerlink" title="选择投屏模式"></a>选择投屏模式</h1><ul><li>使用<code>windows</code> + <code>p</code>进入投屏模式选择页面，选择<code>复制</code>模式<br><img src="https://cdn.jsdelivr.net/gh/HOTSaber/Imagehosting@main/blogpic/303.512%E6%8A%95%E5%B1%8F%E6%95%99%E7%A8%8B-1.png" alt="303.512投屏教程-1"></li><li>点击<code>更多显示设置</code>进入投影设置页面</li></ul><h1 id="连接屏幕"><a href="#连接屏幕" class="headerlink" title="连接屏幕"></a>连接屏幕</h1><p>点击<code>系统</code>- <code>屏幕</code> - <code>缩放和布局</code> - <code>多显示器</code>下<code>连接到无线显示器</code>的<code>连接</code>选项<br><img src="https://cdn.jsdelivr.net/gh/HOTSaber/Imagehosting@main/blogpic/303.512%E6%8A%95%E5%B1%8F%E6%95%99%E7%A8%8B-2.png" alt="303.512投屏教程-2"><br>选择<code>MiraScreen5G</code>作为显示器，等待连接即可<br><img src="https://cdn.jsdelivr.net/gh/HOTSaber/Imagehosting@main/blogpic/303.512%E6%8A%95%E5%B1%8F%E6%95%99%E7%A8%8B-3.png" alt="303.512投屏教程-3"></p>]]></content>
      
      
      <categories>
          
          <category> 编程与系统配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 共享 </tag>
            
            <tag> 512 </tag>
            
            <tag> 投屏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>财务系统使用指导</title>
      <link href="/2025/10/16/304.%E8%B4%A2%E5%8A%A1%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8%E6%8C%87%E5%AF%BC/"/>
      <url>/2025/10/16/304.%E8%B4%A2%E5%8A%A1%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8%E6%8C%87%E5%AF%BC/</url>
      
        <content type="html"><![CDATA[<hr><ul><li>做报销单前要找老师确认报销要走的项目号</li><li>做报销单前要准备好发票，当年发票在次年6月后就无法报销，以开票日期为准</li><li>火车票下面、发票背面要个人签字，网约车行程单每次出行记录要注明<code>调研</code></li><li>报销单可以提前准备好，不会过期，所以越早准备好报销单越好，老师来了签字即可</li><li>劳务要先将人员信息录入到财务系统中，才可发放劳务</li><li><a href="http://cwc.zjgsu.edu.cn/">财务处综合信息门户</a><strong>需要使用校内网络访问</strong></li><li><a href="https://my.zjgsu.edu.cn/office-hall">我的商大服务大厅</a></li><li>开票信息:<pre class="language-none"><code class="language-none">抬头类型：单位抬头：浙江工商大学税号：123300004700090180单位地址：浙江省杭州市下沙高教园区学正街18号电话号码：0571-28877330开户银行：工行杭州高新支行银行账户：1202 0262 0900 8930 682</code></pre></li></ul><hr><h1 id="开始预约报销及报销单据主要分类"><a href="#开始预约报销及报销单据主要分类" class="headerlink" title="开始预约报销及报销单据主要分类"></a>开始预约报销及报销单据主要分类</h1><h2 id="进入报销预约页面"><a href="#进入报销预约页面" class="headerlink" title="进入报销预约页面"></a>进入报销预约页面</h2><ol><li>使用网页端<code>我的商大</code>进入<a href="https://my.zjgsu.edu.cn/office-hall">我的商大服务大厅</a>，并点击<code>全部</code>并点击<code>点击更多</code><br>  <img src="https://cdn.jsdelivr.net/gh/HOTSaber/Imagehosting@main/blogpic/304.%E8%B4%A2%E5%8A%A1%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8%E6%8C%87%E5%AF%BC-1.png" alt="304.财务系统使用指导-1"></li><li>在顶部搜索栏以关键词<code>报销</code>进行搜索，点击<code>财务网上预约报销</code>中的<code>在线办理</code>进入<code>财务处综合信息门户</code>。</li></ol><ul><li><strong>注意要使用校园内网进行访问</strong><br><img src="https://cdn.jsdelivr.net/gh/HOTSaber/Imagehosting@main/blogpic/304.%E8%B4%A2%E5%8A%A1%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8%E6%8C%87%E5%AF%BC-2.png" alt="304.财务系统使用指导-2"></li></ul><ol start="3"><li>在财务处综合信息门户选择<code>网上预约</code><br><img src="https://cdn.jsdelivr.net/gh/HOTSaber/Imagehosting@main/blogpic/304.%E8%B4%A2%E5%8A%A1%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8%E6%8C%87%E5%AF%BC-3.png" alt="304.财务系统使用指导-3"></li><li>点击<code>申请报销</code>即可进行报销流程<br><img src="https://cdn.jsdelivr.net/gh/HOTSaber/Imagehosting@main/blogpic/304.%E8%B4%A2%E5%8A%A1%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8%E6%8C%87%E5%AF%BC-4.png" alt="304.财务系统使用指导-4"></li></ol><h2 id="报销单基础信息填写与主要分类"><a href="#报销单基础信息填写与主要分类" class="headerlink" title="报销单基础信息填写与主要分类"></a>报销单基础信息填写与主要分类</h2><p>报销主要分为<code>劳务（酬金申报）</code>、<code>差旅（国内旅费业务）</code>、<code>一般报销业务</code>，其中一般报销主要是<code>市内出租车费</code>,<code>版面费</code>,<code>市内交通(地铁)</code>,<code>数据采集(信息技术服务费)</code>等，根据报销需要选择<br><img src="https://cdn.jsdelivr.net/gh/HOTSaber/Imagehosting@main/blogpic/304.%E8%B4%A2%E5%8A%A1%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8%E6%8C%87%E5%AF%BC-5.png" alt="304.财务系统使用指导-5"></p><ul><li>所有加<code>*</code>处都要填写</li><li><strong><code>单项目报销</code>即需要填写的报销项目号，要提前与老师确认好</strong></li><li>项目负责人在<code>项目号</code>填写正确时会自动填充</li><li><code>实际报销人</code>就是自己即可</li><li><code>附件张数</code>就是有多少提交材料，数量填错问题也不大</li><li><code>摘要</code>主要以<code>某人报什么业务</code>为格式</li><li><code>支付方式</code>选<code>混合支付</code></li><li><code>选择已认证发票</code>使用微信小程序，验证发票</li></ul><h2 id="认证与上传发票"><a href="#认证与上传发票" class="headerlink" title="认证与上传发票"></a>认证与上传发票</h2><ul><li>出租车打出的纸制发票不用上传与认证</li></ul><ol><li>点击<code>选择已认证发票</code>右端的箭头进入发票选择页面，点击<code>认证发票</code>进行发票认证与上传<br><img src="https://cdn.jsdelivr.net/gh/HOTSaber/Imagehosting@main/blogpic/304.%E8%B4%A2%E5%8A%A1%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8%E6%8C%87%E5%AF%BC-6.png" alt="304.财务系统使用指导-6"></li><li>依次点击两个<code>点我</code>按钮，会出现两个二维码，使用微信扫第一个二维码，使用小程序扫第二个二维码<br><img src="https://cdn.jsdelivr.net/gh/HOTSaber/Imagehosting@main/blogpic/304.%E8%B4%A2%E5%8A%A1%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8%E6%8C%87%E5%AF%BC-7.png" alt="304.财务系统使用指导-7"></li><li>在微信小程序中点击<code>扫码发票验真</code>扫<code>发票二维码</code>认证发票<br><img src="https://cdn.jsdelivr.net/gh/HOTSaber/Imagehosting@main/blogpic/304.%E8%B4%A2%E5%8A%A1%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8%E6%8C%87%E5%AF%BC-8.png" alt="304.财务系统使用指导-8"><br><strong>主意发票抬头应当是浙江工商大学</strong></li><li>此时点击<code>提交</code>上传已认证发票<br><img src="https://cdn.jsdelivr.net/gh/HOTSaber/Imagehosting@main/blogpic/304.%E8%B4%A2%E5%8A%A1%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8%E6%8C%87%E5%AF%BC-9.png" alt="304.财务系统使用指导-9"></li><li>提交成功后即可在财务系统中看到上传的发票了，点选发票并点击确认<br><img src="https://cdn.jsdelivr.net/gh/HOTSaber/Imagehosting@main/blogpic/304.%E8%B4%A2%E5%8A%A1%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8%E6%8C%87%E5%AF%BC-10.png" alt="304.财务系统使用指导-10"></li><li>此时所有信息填写完毕，也可看到发票数额，可以点击<code>下一步</code>进行后续步骤<br><img src="https://cdn.jsdelivr.net/gh/HOTSaber/Imagehosting@main/blogpic/304.%E8%B4%A2%E5%8A%A1%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8%E6%8C%87%E5%AF%BC-11.png" alt="304.财务系统使用指导-11"></li></ol><h1 id="打车费用报销"><a href="#打车费用报销" class="headerlink" title="打车费用报销"></a>打车费用报销</h1><ul><li>如是滴滴等网约车需要有<code>发票</code>与<code>行程单</code>，<code>行程单</code>中的每一条出行记录在最右侧需要注明<code>调研</code>，注意到火车站的打车一般不予以报销，会算在差旅补贴中</li><li><strong>出租车纸制发票无需认证与上传</strong></li></ul><h2 id="报销金额填写"><a href="#报销金额填写" class="headerlink" title="报销金额填写"></a>报销金额填写</h2><ul><li>在点击<code>下一步</code>后，进入如下界面，选择项目中的对应条目，填写需要报销的金额，并进入下一步<br><img src="https://cdn.jsdelivr.net/gh/HOTSaber/Imagehosting@main/blogpic/304.%E8%B4%A2%E5%8A%A1%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8%E6%8C%87%E5%AF%BC-12.png" alt="304.财务系统使用指导-12"></li></ul><h2 id="支付信息填写"><a href="#支付信息填写" class="headerlink" title="支付信息填写"></a>支付信息填写</h2><ul><li>进行<code>混合支付</code>界面，填写自己的账户信息即可，图中展示了两种填写方式，**<code>任选其一即可</code>**</li><li>注意<code>工号</code>填写自己的<code>身份证号</code>,第二种转卡方式需要额外选取<code>工行</code>与<code>开户银行</code></li><li>最后填写好<code>金额</code>，确保没有<code>未填</code>金额<br><img src="https://cdn.jsdelivr.net/gh/HOTSaber/Imagehosting@main/blogpic/304.%E8%B4%A2%E5%8A%A1%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8%E6%8C%87%E5%AF%BC-13.png" alt="304.财务系统使用指导-13"></li></ul><h2 id="财务预约信息填写"><a href="#财务预约信息填写" class="headerlink" title="财务预约信息填写"></a>财务预约信息填写</h2><ul><li>依次选择<code>日期</code>、<code>校区</code>、然后选择一个可用窗口点击<code>预约</code></li><li>因为时间过期也可正常投递，并不是选哪一天就只能哪一天进行投递，所以建议可以先做好报销单，以免错过老师签字机会<br><img src="https://cdn.jsdelivr.net/gh/HOTSaber/Imagehosting@main/blogpic/304.%E8%B4%A2%E5%8A%A1%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8%E6%8C%87%E5%AF%BC-14.png" alt="304.财务系统使用指导-14"></li></ul><h2 id="打印报销单与签字"><a href="#打印报销单与签字" class="headerlink" title="打印报销单与签字"></a>打印报销单与签字</h2><ul><li>此时进入打印页面，可以点击打印确认单进行打印，或保存为pdf再打印<br><img src="https://cdn.jsdelivr.net/gh/HOTSaber/Imagehosting@main/blogpic/304.%E8%B4%A2%E5%8A%A1%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8%E6%8C%87%E5%AF%BC-15.png" alt="304.财务系统使用指导-15"></li><li>打印出来的报销单中<code>承诺签字</code>与<code>经办人签字</code>都要自己签，<code>项目负责人签字</code>找老师签字<br><img src="https://cdn.jsdelivr.net/gh/HOTSaber/Imagehosting@main/blogpic/304.%E8%B4%A2%E5%8A%A1%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8%E6%8C%87%E5%AF%BC-16.png" alt="304.财务系统使用指导-16"></li></ul><h1 id="差旅报销"><a href="#差旅报销" class="headerlink" title="差旅报销"></a>差旅报销</h1><hr><ul><li>报销基础信息填写要选择<code>国内旅费业务</code></li><li>车票要形成<code>从杭州出发</code>并<code>回到杭州</code>的行程闭环，如<code>杭州</code>-<code>宁波</code>-<code>杭州</code></li><li>差旅需要额外开具<code>出差审批单</code>，有需要可以在群里要</li><li>人员补贴只有当天去当天回可以直接给补贴，如果有过夜，需要提供<code>住宿证明</code>才可发放补贴，没有<code>住宿证明</code>就不发放补贴，只能报销车票费用</li><li>目前<code>高铁票</code>已全面使用电子票，请确保车票已经<code>认证</code>与<code>上传</code></li><li>差旅报销与一般报销的不同在于<code>金额填写</code>上</li></ul><hr><h2 id="差旅金额填写"><a href="#差旅金额填写" class="headerlink" title="差旅金额填写"></a>差旅金额填写</h2><ul><li><code>出差人</code>填写学号，正确填写人名会自动填充</li><li><code>职称</code>学生选择<code>其他人员</code></li><li>省份与出差地点按车票信息填写</li><li><code>起</code>、<code>迄</code>按往反车票时间填写</li><li>车票往反票面价值写在火车一栏</li><li>住宿费如有，需要上传发票，如无，写0</li><li>有住宿发票才可有补贴，无住宿发票<code>是否领取补贴</code>选无<br><img src="https://cdn.jsdelivr.net/gh/HOTSaber/Imagehosting@main/blogpic/304.%E8%B4%A2%E5%8A%A1%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8%E6%8C%87%E5%AF%BC-17.png" alt="304.财务系统使用指导-17"></li><li>后续<code>支付信息填写</code>、<code>财务预约信息填写</code>、<code>签字</code>与前一章节相同</li></ul><h1 id="劳务发放"><a href="#劳务发放" class="headerlink" title="劳务发放"></a>劳务发放</h1><h2 id="人员信息维护"><a href="#人员信息维护" class="headerlink" title="人员信息维护"></a>人员信息维护</h2><ul><li>学生的科研劳务发放是按<code>身份证号</code>按校外人员发放的</li><li>先要将人员信息录入教务系统，需要<code>身份证号</code>与<code>卡号</code></li><li>进入<code>酬金信息维护</code>与<code>酬金校外人员</code>、<code>新增</code>或<code>修改人员信息</code><br><img src="https://cdn.jsdelivr.net/gh/HOTSaber/Imagehosting@main/blogpic/304.%E8%B4%A2%E5%8A%A1%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8%E6%8C%87%E5%AF%BC-18.png" alt="304.财务系统使用指导-18"></li><li>人员必填信息包括<code>姓名</code>、<code>身份证号</code>、<code>手机号</code>、<code>银行卡号</code>等<br><img src="https://cdn.jsdelivr.net/gh/HOTSaber/Imagehosting@main/blogpic/304.%E8%B4%A2%E5%8A%A1%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8%E6%8C%87%E5%AF%BC-19.png" alt="304.财务系统使用指导-19"></li></ul><h2 id="劳务单制作"><a href="#劳务单制作" class="headerlink" title="劳务单制作"></a>劳务单制作</h2><hr><ul><li>报销单业务选择<code>酬金申报</code></li></ul><hr><h1 id="劳务金额填写"><a href="#劳务金额填写" class="headerlink" title="劳务金额填写"></a>劳务金额填写</h1><ul><li><code>人员类别</code>选<code>其他人员</code>，<code>酬金性质</code>选<code>劳务费</code><br><img src="https://cdn.jsdelivr.net/gh/HOTSaber/Imagehosting@main/blogpic/304.%E8%B4%A2%E5%8A%A1%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8%E6%8C%87%E5%AF%BC-20.png" alt="304.财务系统使用指导-20"></li><li>点击<code>单笔录入</code>即可录入发放条目</li><li>在正确输入已存在财务系统的人员<code>身份证</code>号后，其余信息应当会自动补全</li><li>填写发放金额即可<br><img src="https://cdn.jsdelivr.net/gh/HOTSaber/Imagehosting@main/blogpic/304.%E8%B4%A2%E5%8A%A1%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8%E6%8C%87%E5%AF%BC-21.png" alt="304.财务系统使用指导-21"></li><li>后续过程与前置章节相同</li></ul>]]></content>
      
      
      <categories>
          
          <category> 编程与系统配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 报销 </tag>
            
            <tag> 劳务 </tag>
            
            <tag> 差旅 </tag>
            
            <tag> 财务 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>绘图技巧</title>
      <link href="/2025/04/15/205.%E7%BB%98%E5%9B%BE%E6%8A%80%E5%B7%A7/"/>
      <url>/2025/04/15/205.%E7%BB%98%E5%9B%BE%E6%8A%80%E5%B7%A7/</url>
      
        <content type="html"><![CDATA[<hr><p>（正在更新中）</p><h1 id="visio"><a href="#visio" class="headerlink" title="visio"></a>visio</h1><h2 id="开发者模式"><a href="#开发者模式" class="headerlink" title="开发者模式"></a>开发者模式</h2><h2 id="形状与模具"><a href="#形状与模具" class="headerlink" title="形状与模具"></a>形状与模具</h2><h2 id="画布与图层"><a href="#画布与图层" class="headerlink" title="画布与图层"></a>画布与图层</h2><h3 id="默认绘制图层"><a href="#默认绘制图层" class="headerlink" title="默认绘制图层"></a>默认绘制图层</h3><h2 id="指针工具"><a href="#指针工具" class="headerlink" title="指针工具"></a>指针工具</h2><h3 id="默认格式"><a href="#默认格式" class="headerlink" title="默认格式"></a>默认格式</h3><h3 id="链接线与直线不同"><a href="#链接线与直线不同" class="headerlink" title="链接线与直线不同"></a>链接线与直线不同</h3><h2 id="选择、组合、分布、对齐与排列"><a href="#选择、组合、分布、对齐与排列" class="headerlink" title="选择、组合、分布、对齐与排列"></a>选择、组合、分布、对齐与排列</h2><h2 id="视觉帮助"><a href="#视觉帮助" class="headerlink" title="视觉帮助"></a>视觉帮助</h2><h3 id="对齐"><a href="#对齐" class="headerlink" title="对齐"></a>对齐</h3><h3 id="粘附"><a href="#粘附" class="headerlink" title="粘附"></a>粘附</h3><h3 id="连接点"><a href="#连接点" class="headerlink" title="连接点"></a>连接点</h3><h3 id="自动连接"><a href="#自动连接" class="headerlink" title="自动连接"></a>自动连接</h3><h2 id="跨线与连线拆分"><a href="#跨线与连线拆分" class="headerlink" title="跨线与连线拆分"></a>跨线与连线拆分</h2><h1 id="ppt"><a href="#ppt" class="headerlink" title="ppt"></a>ppt</h1>]]></content>
      
      
      <categories>
          
          <category> 文档编辑与管理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> office </tag>
            
            <tag> 绘图 </tag>
            
            <tag> visio </tag>
            
            <tag> ppt </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>云端部署webDAV</title>
      <link href="/2024/12/24/302.%E4%BA%91%E7%AB%AF%E9%83%A8%E7%BD%B2webDAV/"/>
      <url>/2024/12/24/302.%E4%BA%91%E7%AB%AF%E9%83%A8%E7%BD%B2webDAV/</url>
      
        <content type="html"><![CDATA[<hr><p>在Ubuntu 22.04 LTS上部署WebDAV可以通过Apache或Nginx等Web服务器实现。以下是使用Apache部署WebDAV的步骤：</p><hr><h1 id="步骤-1：安装Apache"><a href="#步骤-1：安装Apache" class="headerlink" title="步骤 1：安装Apache"></a>步骤 1：安装Apache</h1><p>首先，确保你的服务器上安装了Apache。如果还没有安装，可以使用以下命令：</p><pre class="language-bash" data-language="bash"><code class="language-bash">sudo apt updatesudo apt install apache2</code></pre><p>##步骤 2：启用WebDAV模块</p><p>接下来，启用Apache的WebDAV模块，与身份验证模块：</p><pre class="language-bash" data-language="bash"><code class="language-bash">sudo a2enmod davsudo a2enmod dav_fssudo a2enmod auth_basic sudo a2enmod authn_file</code></pre><h1 id="步骤-3：创建WebDAV目录"><a href="#步骤-3：创建WebDAV目录" class="headerlink" title="步骤 3：创建WebDAV目录"></a>步骤 3：创建WebDAV目录</h1><p>选择一个目录作为WebDAV的存储位置。例如，我们可以创建一个名为<code>/var/www/webdav</code>的目录：</p><pre class="language-bash" data-language="bash"><code class="language-bash">sudo mkdir &#x2F;var&#x2F;www&#x2F;webdav</code></pre><p>设置适当的权限：</p><pre class="language-bash" data-language="bash"><code class="language-bash">sudo mkdir -p &#x2F;var&#x2F;www&#x2F;webdavsudo chown -R www-data:www-data &#x2F;var&#x2F;www&#x2F;webdavsudo chmod -R 775 &#x2F;var&#x2F;www&#x2F;webdav</code></pre><h1 id="步骤-4：配置WebDAV"><a href="#步骤-4：配置WebDAV" class="headerlink" title="步骤 4：配置WebDAV"></a>步骤 4：配置WebDAV</h1><p>创建一个新的Apache配置文件，或修改现有的配置文件。我们可以创建一个新的配置文件：</p><pre class="language-bash" data-language="bash"><code class="language-bash">sudo nano &#x2F;etc&#x2F;apache2&#x2F;sites-available&#x2F;webdav.conf</code></pre><p>在文件中添加以下内容：</p><pre class="language-apache" data-language="apache"><code class="language-apache">&lt;VirtualHost *:80&gt;    ServerAdmin webmaster@localhost    # 指定 WebDAV 的别名    Alias &#x2F;webdav &#x2F;var&#x2F;www&#x2F;webdav    &lt;Directory &#x2F;var&#x2F;www&#x2F;html&gt;        Options Indexes FollowSymLinks        AllowOverride None        Require all granted                # 启用 WebDAV        Dav On        AuthType Basic        AuthName &quot;WebDAV Restricted Area&quot;        AuthUserFile &#x2F;etc&#x2F;apache2&#x2F;.htpasswd        Require valid-user    &lt;&#x2F;Directory&gt;    ErrorLog $&#123;APACHE_LOG_DIR&#125;&#x2F;error.log    CustomLog $&#123;APACHE_LOG_DIR&#125;&#x2F;access.log combined&lt;&#x2F;VirtualHost&gt;</code></pre><p>编辑结束后使用<code>ctrl+o</code>保存，<code>enter</code>确认保存目录，<code>ctrl+x</code>退出编辑<br>如果有<code>000-default.conf</code>文件存在则：</p><h2 id="确保-webdav-conf-的优先级"><a href="#确保-webdav-conf-的优先级" class="headerlink" title="确保 webdav.conf 的优先级"></a>确保 <code>webdav.conf</code> 的优先级</h2><p>如果您希望保持 <code>webdav.conf</code> 单独配置，确保它被启用并且在 <code>sites-enabled</code> 目录中优先于 <code>000-default.conf</code>。您可以通过调整文件名来实现，例如将 <code>webdav.conf</code> 重命名为 <code>001-webdav.conf</code>，以确保它在 <code>000-default.conf</code> 之前加载。</p><p>或者：</p><h2 id="修改-000-default-conf"><a href="#修改-000-default-conf" class="headerlink" title="修改 000-default.conf"></a>修改 <code>000-default.conf</code></h2><p>如果您希望将 WebDAV 与默认虚拟主机结合，可以在 <code>000-default.conf</code> 中添加 WebDAV 配置：</p><pre class="language-none"><code class="language-none">&lt;VirtualHost *:80&gt;    ServerAdmin webmaster@localhost    DocumentRoot &#x2F;var&#x2F;www&#x2F;webdav    Alias &#x2F;webdav &#x2F;var&#x2F;www&#x2F;webdav    &lt;Directory &#x2F;var&#x2F;www&#x2F;webdav&gt;        Options Indexes MultiViews        AllowOverride None        Require all granted    &lt;&#x2F;Directory&gt;    &lt;Location &#x2F;&gt;        Dav On        AuthType Basic        AuthName &quot;Austin&quot;        AuthUserFile &#x2F;etc&#x2F;apache2&#x2F;webdav.htpasswd        Require valid-user    &lt;&#x2F;Location&gt;    ErrorLog $&#123;APACHE_LOG_DIR&#125;&#x2F;error.log    CustomLog $&#123;APACHE_LOG_DIR&#125;&#x2F;access.log combined&lt;&#x2F;VirtualHost&gt;</code></pre><h1 id="步骤-5：创建用户和密码"><a href="#步骤-5：创建用户和密码" class="headerlink" title="步骤 5：创建用户和密码"></a>步骤 5：创建用户和密码</h1><p>使用<code>htpasswd</code>命令创建一个用户，以便进行身份验证：</p><pre class="language-bash" data-language="bash"><code class="language-bash">sudo apt install apache2-utilssudo htpasswd -c &#x2F;etc&#x2F;apache2&#x2F;webdav.htpasswd Austin</code></pre><p>系统会提示你输入和确认密码。</p><h1 id="步骤-6：启用网站配置"><a href="#步骤-6：启用网站配置" class="headerlink" title="步骤 6：启用网站配置"></a>步骤 6：启用网站配置</h1><p>启用刚刚创建的WebDAV配置，并重新加载Apache：</p><pre class="language-bash" data-language="bash"><code class="language-bash">sudo a2ensite webdav.confsudo systemctl reload apache2</code></pre><h1 id="步骤-7：防火墙设置"><a href="#步骤-7：防火墙设置" class="headerlink" title="步骤 7：防火墙设置"></a>步骤 7：防火墙设置</h1><p>如果你启用了UFW防火墙，确保允许HTTP流量：</p><pre class="language-bash" data-language="bash"><code class="language-bash">sudo ufw allow &#39;Apache&#39;</code></pre><h1 id="步骤-8：测试WebDAV"><a href="#步骤-8：测试WebDAV" class="headerlink" title="步骤 8：测试WebDAV"></a>步骤 8：测试WebDAV</h1><p>现在，你可以通过浏览器或WebDAV客户端访问WebDAV服务。访问<code>http://your_server_ip/webdav</code>，输入你创建的用户名和密码。</p><h1 id="其他注意事项"><a href="#其他注意事项" class="headerlink" title="其他注意事项"></a>其他注意事项</h1><ul><li><strong>HTTPS</strong>：建议在生产环境中使用HTTPS来保护数据传输。可以使用Let’s Encrypt等工具为你的Apache服务器配置SSL证书。</li><li><strong>权限和安全</strong>：根据需要调整文件和目录的权限，确保安全性。</li></ul><p>通过上述步骤，你应该能够在Ubuntu 22.04 LTS上成功部署WebDAV服务。如果遇到问题，可以查看Apache的错误日志以获取更多信息：</p><pre class="language-bash" data-language="bash"><code class="language-bash">sudo tail -f &#x2F;var&#x2F;log&#x2F;apache2&#x2F;error.log</code></pre><h1 id="在windows上配置webdav为共享磁盘"><a href="#在windows上配置webdav为共享磁盘" class="headerlink" title="在windows上配置webdav为共享磁盘"></a>在windows上配置webdav为共享磁盘</h1><hr><p>参考<a href="https://www.cnblogs.com/qianjiashi/p/15704595.html" title="发布于 2021-12-18 11:04">Windows下WebDAV映射网络驱动器若干问题</a>与<a href="https://docs.qnap.com/operating-system/qts/4.5.x/zh-cn/GUID-31D5B05F-F29E-4D61-9758-C8CF839C14FD.html">在 Windows 上使用 WebDAV 装载共享文件夹</a></p><hr><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>发现 <code>Windows</code> 默认只支持 <code>HTTPS</code> 方式的 <code>WebDAV</code> 映射，默认不支持 <code>HTTP</code> 方式的 <code>WebDAV</code> 映射，有没有办法在不安装第三方客户端的情况下，让 <code>Windows</code> 支持 <code>HTTP</code> 方式的 <code>WebDAV</code> 映射呢？上网一查是有的，只不过要改注册表</p><h2 id="具体操作"><a href="#具体操作" class="headerlink" title="具体操作"></a>具体操作</h2><ol><li>改注册表</li></ol><p><code>计算机\HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\WebClient\Parameters</code> 下，把 <code>BasicAuthLevel</code> 的值改为 <code>2</code> ( ‘1’ 默认只支持 HTTPS，’2’ 支持 HTTP 和 HTTPS)</p><ol start="2"><li>重启服务</li></ol><p><code>以管理员身份运行CMD</code></p><pre class="language-dos" data-language="dos"><code class="language-dos">net stop webclient net start webclient</code></pre><p>或者<br>进入<code>控制面板 -&gt; 系统和安全(或系统和维护) -&gt; 管理工具 -&gt; 服务</code>，打开的弹窗中，找到 <code>WebClient</code>，启动之(如果已停止的话)，并且最好设置<code>启动类型</code>为<code>自动</code>。</p><ol start="3"><li>映射网络驱动器</li></ol><p>计算机 –&gt; 右键 –&gt; 映射网络驱动器 –&gt; 填写相应的信息 –&gt; 完成<br>注意启用<code>登录时重新连接</code>以及<code>使用其他凭据连接</code>。</p><p>第二个问题：</p><p>转载自：<a href="https://blog.52nyg.com/2021/06/691">博客链接</a></p><p>WebDav连接上后，结果提示：</p><p>在webdav中复制文件出来会提示此错误:”文件大小超出允许的限制，无法保存”</p><p>这是因为Windows默认限制为50MB文件大小 超出不允许复制</p><p>解决方法：  </p><ol><li>按 Win + R 键  </li><li>在运行窗口输入regedit,按回车  </li><li>在打开的注册表编辑器中进入这个地址：HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\WebClient\Parameters  </li><li>找到FileSizeLimitInBytes，双击打开  </li><li>在打开的设置窗口，选择decimal（十进制）  </li><li>修改限制的大小，比如加个0（默认是50M,即50000000）其实有最大值限制，4294967295~4,095.9MB&#x3D;4GB，也就是32位系统能提供的最大值了</li><li>修改好后，再选择hexadecimal（十六进制）  </li><li>保存，然后重启电脑</li></ol>]]></content>
      
      
      <categories>
          
          <category> 编程与系统配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> Ubuntu </tag>
            
            <tag> webDAV </tag>
            
            <tag> 云服务器 </tag>
            
            <tag> 共享 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>zotero使用教程</title>
      <link href="/2024/12/24/204.office%20zotero%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/"/>
      <url>/2024/12/24/204.office%20zotero%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<hr><p>相关链接:<br><a href="https://www.zotero.org/">Zotero官网</a><br><a href="https://www.zotero.org/download/">Zotero官方下载页面</a><br><a href="https://editor.citationstyles.org/about/">Zotero官方样式编辑网站</a></p><hr><h1 id="安装Zotero"><a href="#安装Zotero" class="headerlink" title="安装Zotero"></a>安装Zotero</h1><p>Zotero包含两个部分，<code>Zotero软件本体</code>与<code>Zotero connecter</code>。两者都可以通过访问<a href="https://www.zotero.org/download/">Zotero官方下载页面</a>进行下载。<br><img src="https://cdn.jsdelivr.net/gh/HOTSaber/Imagehosting@main/blogpic/204.office%20zotero%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B-1.png" alt="204.office zotero使用教程-1"><br><code>Zotero connecter</code>推荐与<code>chrome</code>搭配使用，官网链接会跳转到<code>chrome应用商店</code>，需要<code>科学上网</code>访问。</p><h1 id="配置常用插件"><a href="#配置常用插件" class="headerlink" title="配置常用插件"></a>配置常用插件</h1><p>Zotero插件一搬均为开源插件，普遍公布于<a href="https://github.com/">Github</a>。<br>进入项目后找到<code>Releases</code>版块，即可下载各版本的插件，一般插件文件以<code>.xpi</code>为后缀。<br><img src="https://cdn.jsdelivr.net/gh/HOTSaber/Imagehosting@main/blogpic/204.office%20zotero%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B-2.png" alt="204.office zotero使用教程-2"></p><p>在下载好<code>.xpi</code>插件文件后，在Zotero上打开<code>工具</code>–&gt;<code>插件</code>，打开<code>插件管理器</code>，选择<code>管理插件选项</code>–&gt;<code>Install Plugin From File</code>，选择下载好的<code>.xpi</code>文件，即可完成插件安装<br><img src="https://cdn.jsdelivr.net/gh/HOTSaber/Imagehosting@main/blogpic/204.office%20zotero%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B-3.png" alt="204.office zotero使用教程-3"><br>在<code>编辑</code>–&gt;<code>设置</code>中，可以看到新添插件的具体选项配置，可以通过对应<code>Github项目</code>中的说明文档，进行个性化配置。</p><h2 id="Jasminum"><a href="#Jasminum" class="headerlink" title="Jasminum"></a>Jasminum</h2><p><a href="https://github.com/l0o0/jasminum">jasminum项目链接</a><br>一个简单的 Zotero 中文插件，旨在提升 Zotero 中文用户的使用体验。主要功能有：</p><pre class="language-none"><code class="language-none">1. 中文期刊附件（PDF&#x2F;CAJ）的元数据抓取，支持添加PDF&#x2F;CAJ时自动抓取元数据功能2. 集成 Zotero 中文社区转换器的下载与更新功能3. 为知网学位论文PDF添加章节书签（依赖于PDFtk）4. 更新中文文献引用次数，核心期刊信息5. 合并&#x2F;拆分姓，名，识别文献条目语言，下载知网附件，统一日期格式等</code></pre><h2 id="DOI-manager"><a href="#DOI-manager" class="headerlink" title="DOI manager"></a>DOI manager</h2><p><a href="https://github.com/bwiernik/zotero-shortdoi">DOI manager项目链接</a><br>这个插件能自动帮助你更新文献的DOI信息，DOI是scihub自动下载的必要信息。</p><h2 id="SciPDF"><a href="#SciPDF" class="headerlink" title="SciPDF"></a>SciPDF</h2><p><a href="https://github.com/syt2/zotero-scipdf">SciPDF项目链接</a><br>这是一个用于 Zotero7 的 Sci-Hub 插件。<br>此插件利用了 Zotero 内自带的 <a href="https://www.zotero.org/support/kb/custom_pdf_resolvers">PDF resolvers</a>方案，将 Sci-Hub 的 resolver 自动填入 <code>extensions.zotero.findPDFs.resolvers</code> 字段，以实现在zotero内从sci-hub下载pdf。</p><h2 id="Linter-for-Zotero"><a href="#Linter-for-Zotero" class="headerlink" title="Linter for Zotero"></a>Linter for Zotero</h2><p><a href="https://github.com/northword/zotero-format-metadata">Linter for Zotero项目链接</a></p><p>可以规范化&#x2F;格式化条目的元数据（字段数据）。</p><pre class="language-none"><code class="language-none">1. 快速设置上下标、粗体和斜体2. 重复条目检查当新增条目时，插件自动检查该条目是否与库中已有条目重复，若有重复，则提示用户确认。3. 条目类型检查当添加网页类型条目，且其网址包含学术出版商域名时，提示用户。4.将标题转为“句首大写”Zotero 文档建议将标题存储为“句子式大写”的格式，这将有利于 CSL 对其执行“title case”变换 2。Zotero 7 内置了将标题转为“句子式大写”的功能，预置了一些特例识别，本插件在其基础上，增加了针对化学式等的专有名词识别。5. 期刊及其期刊缩写对于期刊标题，插件将使相同的期刊统一。插件内置了一个包含约 10 万条期刊缩写的数据集（来自 JabRef ），插件将首先在本地数据集里查询期刊缩写；若无则根据 ISSN List of Title Word Abbreviations 推断其缩写（可在首选项中关闭此行为）；若仍没有找到缩写，则以期刊全称代替（可在首选项中关闭此行为）。6. 根据高校名称填写高校所在地7. 根据标识符补全条目的期、卷、页等信息8. 自动填写条目语言插件根据条目的标题判断其语言，并将识别结果填入“语言字段”，这对于 CSL 完成参考文献表双语排版（如 et al 与 等 混排）非常重要。默认的，插件被限制仅识别简体中文和英文，你可以在首选项中关闭语言限制或添加其他常用语言的 ISO 639-1 代码。</code></pre><h2 id="Zotero-PDF-Translate"><a href="#Zotero-PDF-Translate" class="headerlink" title="Zotero PDF Translate"></a>Zotero PDF Translate</h2><p><a href="https://github.com/windingwind/zotero-pdf-translate">Zotero PDF Translate项目链接</a><br>翻译插件,主要功能有：</p><pre class="language-none"><code class="language-none">- 划词翻译（自动&#x2F;手动）- 标题、摘要翻译与源文本&#x2F;翻译结果显示切换- 批注翻译（自动&#x2F;手动）- 支持15+种翻译服务与4+种字典服务- 自定义翻译侧栏UI，支持同时使用多种翻译引擎</code></pre><h2 id="Delete-item-s-with-attachment-s"><a href="#Delete-item-s-with-attachment-s" class="headerlink" title="Delete item(s) with attachment(s)"></a>Delete item(s) with attachment(s)</h2><p><a href="https://github.com/redleafnew/delitemwithatt">Delete item(s) with attachment(s)项目链接</a><br>插件用途</p><pre class="language-none"><code class="language-none">1. 删除条目或分类的同时将链接的附件也一块删除。2. 根据条目标题语言将所选条目语言字段设置为&#96;en-US&#96;或&#96;zh-CN&#96;。3. 将附件导出。</code></pre><h1 id="使用Zotero插入引用"><a href="#使用Zotero插入引用" class="headerlink" title="使用Zotero插入引用"></a>使用Zotero插入引用</h1><h2 id="导入文献"><a href="#导入文献" class="headerlink" title="导入文献"></a>导入文献</h2><h3 id="connecter插件导入"><a href="#connecter插件导入" class="headerlink" title="connecter插件导入"></a><code>connecter</code>插件导入</h3><ul><li>确保<code>Zotero本体软件</code>正运行</li><li>使用安装了<code>Zotero connecter</code>插件的浏览器进入<code>文献搜索网站</code>，如：<a href="https://www.cnki.net/">CNKI</a>,<a href="https://webofscience.clarivate.cn/wos/alldb/basic-search">web of science</a>,<a href="https://scholar.google.com/">google学术</a>，<a href="https://xueshu.baidu.com/">百度学术</a>等。</li><li>如果可以进入文件详情，则<code>connecter</code>插件会抓取页面信息，此时就可以使用<code>connecter</code>插件进行文献导入。<br><img src="https://cdn.jsdelivr.net/gh/HOTSaber/Imagehosting@main/blogpic/204.office%20zotero%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B-4.png" alt="204.office zotero使用教程-4"></li><li>出现以上界面时按<code>回车</code>键即可将文献导入Zotero</li></ul><h3 id="手动导入"><a href="#手动导入" class="headerlink" title="手动导入"></a>手动导入</h3><p>对于有时无法进入详情页的情况，我们可以复制<code>BibTex</code>格式的引用内容，然后手工导入进Zotero。这里我们已谷歌学术为例：<br><img src="https://cdn.jsdelivr.net/gh/HOTSaber/Imagehosting@main/blogpic/204.office%20zotero%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B-5.png" alt="204.office zotero使用教程-5">只<img src="https://cdn.jsdelivr.net/gh/HOTSaber/Imagehosting@main/blogpic/204.office%20zotero%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B-6.png" alt="204.office zotero使用教程-6"><br>只需要<code>ctrl+A</code>全选，然后复制所有内容，进入Zotero下选择相应目录，使用快捷键<code>shift+ctrl+alt+I</code>或<code>文件</code>–&gt;<code>从剪贴板导入</code>即可。<br>但这种导入方法不会自动下载文献原文，需要自己手动添加额外的附件。</p><h2 id="插入引用"><a href="#插入引用" class="headerlink" title="插入引用"></a>插入引用</h2><p>引用分为插入<code>引用标识</code>与插入<code>参考目录</code>即<br><img src="https://cdn.jsdelivr.net/gh/HOTSaber/Imagehosting@main/blogpic/204.office%20zotero%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B-12.png" alt="204.office zotero使用教程-12"></p><h3 id="插入引用标识"><a href="#插入引用标识" class="headerlink" title="插入引用标识"></a>插入引用标识</h3><ul><li>只需要把光标停留在需要插入的位置，然后在<code>Zotero</code>标签下，选择<code>Add/Edit Citation</code>即可，在弹出的窗口中可以直接搜索关键词，也可以进入传统视图在分类中浏览选择文献。<br><img src="https://cdn.jsdelivr.net/gh/HOTSaber/Imagehosting@main/blogpic/204.office%20zotero%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B-13.png" alt="204.office zotero使用教程-13"></li><li><strong>需要注意的是，在第一次插入时，会出现<code>样式选择</code>界面</strong><br><img src="https://cdn.jsdelivr.net/gh/HOTSaber/Imagehosting@main/blogpic/204.office%20zotero%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B-15.png" alt="204.office zotero使用教程-15"><br>我们可以到<a href="https://github.com/zotero-chinese/styles">zotero-chinese&#x2F;styles项目</a>中去找别人已经修改好的文献样式，或者自己在某一样式的基础上进行<a href="http://hotsaber.github.io/2024/12/24/204.office%20zotero%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/#%E6%A0%B7%E5%BC%8F%E7%BC%96%E8%BE%91">样式编辑</a></li><li>此外使用<code>多重来源</code>功能，可以在同一位置插入多篇引文。<br><img src="https://cdn.jsdelivr.net/gh/HOTSaber/Imagehosting@main/blogpic/204.office%20zotero%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B-16.png" alt="204.office zotero使用教程-16"></li></ul><h3 id="插入参考目录"><a href="#插入参考目录" class="headerlink" title="插入参考目录"></a>插入参考目录</h3><p>只需要把光标停留在文档最后，选择<code>Add/Edit Bibliography</code>即可自动插入参考目录。</p><h1 id="Zotero的进阶技巧"><a href="#Zotero的进阶技巧" class="headerlink" title="Zotero的进阶技巧"></a>Zotero的进阶技巧</h1><h2 id="样式编辑"><a href="#样式编辑" class="headerlink" title="样式编辑"></a>样式编辑</h2><p><a href="https://editor.citationstyles.org/about/">Zotero官方样式编辑网站</a><br><a href="https://zhuanlan.zhihu.com/p/663211485">参考博客</a></p><ul><li>进入网站后我们选择<code>Visual editor</code>进入可视化编辑页面。</li><li>在<code>style</code> 菜单中选择<code>load style</code>开加载一个样式模板<br><img src="https://cdn.jsdelivr.net/gh/HOTSaber/Imagehosting@main/blogpic/204.office%20zotero%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B-17.png" alt="204.office zotero使用教程-17"></li><li>Zotero的数据存储位置可以在Zotero<code>编辑--&gt;设置--&gt;高级--&gt;数据存储位置</code>查看，而所有样式都保存在<code>数据存储位置</code>下的<code>styles</code>文件中。</li><li>我们可以选择<code>Example Citations</code>中的一个<code>Citation</code>,进入Advanced选项，使用自己导出的条目(json格式)来充当样例。</li><li>设置首字母大写 - 依次点开MACROS-Macro：author-Names-Name part，设置text-case，默认的是uppercase全大写</li><li>其他的分述如下：<br>  lowercase：全小写<br>  uppercase：全大写<br>  capitalize-first：首字母大写 </li><li>Zotero官方的样式编辑器有一个很好用的功能，只要我们点击对应字段，就可以直接跳转到具体的参数中，不用去机械的记忆那些参数选择的具体路径 - 比如下面点击了标题字段，就可以跳转到标题的参数设置选项中。这个原理其实很简单，每一个字段对应对应的变量，我们鼠标选择的是字段，但Zotero可以把我们转换为对应的变量设置页面。</li><li>修改完之后，进入<code>Style--&gt;save style--&gt;Download Style</code>我们将其下载下来。<br>我们下载的这个样式是在导入的样式基础上进行修改的，里面的名称ID、名称之类标识信息都还没有发生变化。如果直接导入Zotero参考文献样式管理库中，会存在重名的问题。 用文本管理器打开下载的这个样式，参考文献样式相关的信息放在info块中。我们对title和id进行修改，加一些自己特定的标识符，从而与原作者有所区分。<br><img src="https://cdn.jsdelivr.net/gh/HOTSaber/Imagehosting@main/blogpic/204.office%20zotero%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B-18.png" alt="204.office zotero使用教程-18"><br>最后将样式导入到Zotero中即可。</li></ul><h2 id="异地同步与共享协作"><a href="#异地同步与共享协作" class="headerlink" title="异地同步与共享协作"></a>异地同步与共享协作</h2><p>需要注意Zotero的数据同步分为<code>数据同步</code>与<code>文件同步</code>，其中<code>数据同步</code>是指<code>引文数据</code>，<code>文件同步</code>则同步的是<code>附件数据</code>。同账号下的数据同步是通过官方账号实现的，而附件数据就需要官方账号中的存储空间或使用其他方法同步。</p><h3 id="导出法"><a href="#导出法" class="headerlink" title="导出法"></a>导出法</h3><p>这种方法只能导出<code>引文数据</code>，不会保存任何<code>附件数据</code>。</p><ul><li>在想要导出分享的分类上右键，选择导出分类，与导出文件类型。<br><img src="https://cdn.jsdelivr.net/gh/HOTSaber/Imagehosting@main/blogpic/204.office%20zotero%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B-7.png" alt="204.office zotero使用教程-7"></li><li>被分享者，只需要收到导出文件，然后导入即可。</li></ul><h3 id="备份法"><a href="#备份法" class="headerlink" title="备份法"></a>备份法</h3><p>这种方法可以共享<code>全部数据</code>，但可能会导致数据覆盖。</p><ul><li>在<code>编辑</code>–&gt;<code>设置</code>–&gt;<code>高级</code>中，可以看到数据存储位置。<br><img src="https://cdn.jsdelivr.net/gh/HOTSaber/Imagehosting@main/blogpic/204.office%20zotero%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B-8.png" alt="204.office zotero使用教程-8"></li><li>我们可以打开数据文件夹，备份其中内容，替换被共享电脑上的数据。</li></ul><h3 id="云端法"><a href="#云端法" class="headerlink" title="云端法"></a>云端法</h3><p>配置云端应当是异地同步的最好办法。</p><ul><li>云端需<a href="http://hotsaber.github.io/2024/12/24/302.%E4%BA%91%E7%AB%AF%E9%83%A8%E7%BD%B2webDAV/">部署webDAV</a>，webDAV上保存的是<code>附件数据</code></li><li>在<code>编辑--&gt;设置--&gt;同步</code>中的<code>文件同步</code>，设置你部署webDAV的服务器地址与用户密码等信息即可<br><img src="https://cdn.jsdelivr.net/gh/HOTSaber/Imagehosting@main/blogpic/204.office%20zotero%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B-11.png" alt="204.office zotero使用教程-11"></li></ul><h3 id="Zotero群组共享"><a href="#Zotero群组共享" class="headerlink" title="Zotero群组共享"></a>Zotero群组共享</h3><p>Zotero中，用户的文献一般放在我的文库（My Library）中，如果你想和别人<strong>共享文献&#x2F;协同研究</strong>，那么你可以建一个群组（Group Library）。</p><ul><li>通过<code>文件--&gt;新建文献库--&gt;新建群组</code>来新建一个群组<br><img src="https://cdn.jsdelivr.net/gh/HOTSaber/Imagehosting@main/blogpic/204.office%20zotero%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B-9.png" alt="204.office zotero使用教程-9"></li><li>此时会跳转到<a href="https://www.zotero.org/groups/new/">Zotero群组创建页面</a>。<br><img src="https://cdn.jsdelivr.net/gh/HOTSaber/Imagehosting@main/blogpic/204.office%20zotero%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B-10.png" alt="204.office zotero使用教程-10"><br>从上图可以看出群组主要有以下三种类型，它们的特点是：<pre class="language-none"><code class="language-none">1. Public, Open Membership：公开访问，成员公开加入。（不可上传附件）2. Public, Closed Membership：公开访问，成员申请&#x2F;邀请加入。（可上传附件）3. Private Membership：仅群成员可访问群组，成员申请&#x2F;邀请加入。（可上传附件）</code></pre>也就是说，如果想上传附件（比如PDF）到群组，千万不要选择Public, Open Membership，可参考下方提示。<br>新建完毕后，重启Zotero，该群组便自动在侧边栏出现</li></ul><p>此时，你可以把PDF文献拖进去，或者从我的文库中拖动文献到群组，都是可以的。一切就像我的文库中的操作一样，有题录有附件。</p><p><strong>但要注意：Zotero群组中的PDF附件只能通过Zotero官方自带的空间同步，无法通过WebDAV方式同步。</strong></p><p>如何邀请别人进组：在Zotero内双击群组的名称。此时会自动跳转到浏览器，并打开该群组的网页链接。可以将该群组的网页链接发送给团队成员了，团队成员访问该链接就能申请加入了。<strong>申请后需要群组管理员同意才能加入。</strong></p><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><h3 id="无法自动获取知网文献pdf原文"><a href="#无法自动获取知网文献pdf原文" class="headerlink" title="无法自动获取知网文献pdf原文"></a>无法自动获取知网文献<code>pdf</code>原文</h3><ol><li>页面解析设置不是最新<br> 需要安装茉莉花（Jasminum）插件，并更新<code>Translators</code>,在Zotero的<code>设置</code>中，找到<code>高级</code>选项下的<code>更新翻译器</code>。点击<code>更新全部</code>按钮，确保所有的<code>Translators</code>（特别是针对知网的CNKI translator）都是最新版本。这对于确保Zotero能够准确抓取到网页信息至关重要。</li><li>ip被锁，下载pdf原文时需要验证步骤<br> 这时需要登录个人账户，即可绕过验证步骤。此时应当是<code>机构账户</code>和<code>个人账户</code>两个账户<code>同时登录在线</code>。</li></ol><h3 id="zotero无法与word联接"><a href="#zotero无法与word联接" class="headerlink" title="zotero无法与word联接"></a>zotero无法与word联接</h3><p>通常在插入引文时报此错误<br>需要在<code>编辑--&gt;设置--&gt;引用</code>中，找到<code>Microsoft Word</code>,点击<code>重新安装加载项Microsoft word</code>即可。</p>]]></content>
      
      
      <categories>
          
          <category> 文档编辑与管理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> office </tag>
            
            <tag> 格式 </tag>
            
            <tag> zotero </tag>
            
            <tag> chrome </tag>
            
            <tag> 文献管理 </tag>
            
            <tag> 参考文献 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git安装</title>
      <link href="/2024/04/16/301.Git%E5%AE%89%E8%A3%85/"/>
      <url>/2024/04/16/301.Git%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h1 id="下载安装Git"><a href="#下载安装Git" class="headerlink" title="下载安装Git"></a>下载安装Git</h1><ul><li>下载地址：<a href="https://git-scm.com/downloads">https://git-scm.com/downloads</a></li><li>安装教程：<a href="https://www.cnblogs.com/xueweisuoyong/p/11914045.html">https://www.cnblogs.com/xueweisuoyong/p/11914045.html</a></li></ul><h1 id="配置连接GitHub"><a href="#配置连接GitHub" class="headerlink" title="配置连接GitHub"></a>配置连接GitHub</h1><ul><li>需要GitHub账号</li><li>在本地，新建文件夹如&#x3D;&#x3D;MyBlog&#x3D;&#x3D;，并在MyBlog中右键点选&#x3D;&#x3D;gitbash here&#x3D;&#x3D;,输入以下命令<pre class="language-none"><code class="language-none">git config --global user.name &quot;yourname&quot;git config --global user.email &quot;youremail&quot;</code></pre></li><li>可以使用以下命令验证<pre class="language-none"><code class="language-none">git config user.namegit config user.email</code></pre></li><li>生成SSH Keys，一直回车即可<pre class="language-none"><code class="language-none">ssh-keygen -t rsa -C &quot;youremail&quot;</code></pre></li><li>找到<code>.shh</code>文件夹(.ssh文件通常在系统用户文件中)，将公钥（id_rsa.pub中的内容）填写进GitHub账户中</li><li>或使用以下命令查询SSH（可选）<pre class="language-none"><code class="language-none">cat ~&#x2F;.ssh&#x2F;id_rsa.pub</code></pre></li><li>使用<code>ssh -T git@github.com</code>以验证是否成功<br><strong>详细SSH设置请参考<a href="https://blog.csdn.net/qq_36667170/article/details/79094257">Git教程 SSH keys配置</a></strong></li></ul>]]></content>
      
      
      <categories>
          
          <category> 编程与系统配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
            <tag> GitHub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用GitHub搭建图床</title>
      <link href="/2024/04/16/300.%E4%BD%BF%E7%94%A8GitHub%E6%90%AD%E5%BB%BA%E5%9B%BE%E5%BA%8A/"/>
      <url>/2024/04/16/300.%E4%BD%BF%E7%94%A8GitHub%E6%90%AD%E5%BB%BA%E5%9B%BE%E5%BA%8A/</url>
      
        <content type="html"><![CDATA[<hr><p>腾讯云图床请参考<a href="https://hotsaber.github.io/2023/05/20/4.%E6%90%AD%E5%BB%BA%E5%9B%BE%E5%BA%8A/">搭建图床</a></p><hr><h1 id="在GitHub创建一个新仓库，用于存放图片"><a href="#在GitHub创建一个新仓库，用于存放图片" class="headerlink" title="在GitHub创建一个新仓库，用于存放图片"></a>在GitHub创建一个新仓库，用于存放图片</h1><ul><li>填写仓库名称和描述，且仓库必须是public的，否则存储的图片不能正常访问。</li></ul><h1 id="生成一个token，用于picGo访问github"><a href="#生成一个token，用于picGo访问github" class="headerlink" title="生成一个token，用于picGo访问github"></a>生成一个token，用于picGo访问github</h1><ol><li>在<strong>GitHub个人账户</strong>中进入<code>settings</code>–&gt;<code>Developer settings</code>–&gt;<code>Personal access tokens</code>–&gt;<code>token(classic)</code>选择<code>Generate new token</code><br>ps:<strong>不是仓库的settings</strong>，只有token(classic)才有无限期token</li><li>填写<code>Note</code>，选择<code>No expiration</code>,勾选<code>repo</code>，点击<code>Generate token</code><br><strong>ps:生成的token只会在这里显示一次，后续无法查看，记得提前复制</strong></li></ol><h1 id="picgo设置"><a href="#picgo设置" class="headerlink" title="picgo设置"></a>picgo设置</h1><h2 id="下载picgo"><a href="#下载picgo" class="headerlink" title="下载picgo"></a>下载picgo</h2><p>访问 PicGo 的 Github 项目地址并安装PicGo客户端：<a href="https://eryinote.com/go?_=31614169aaaHR0cHM6Ly9naXRodWIuY29tL01vbHVuZXJmaW5uL1BpY0dvL3JlbGVhc2Vz">Releases · Molunerfinn&#x2F;PicGo (github.com)</a></p><h1 id="picgo设置-1"><a href="#picgo设置-1" class="headerlink" title="picgo设置"></a>picgo设置</h1><p><img src="https://cdn.jsdelivr.net/gh/HOTSaber/Imagehosting@main/blogpic/300.%E4%BD%BF%E7%94%A8GitHub%E6%90%AD%E5%BB%BA%E5%9B%BE%E5%BA%8A-1.png" alt="300.使用GitHub搭建图床-1"></p><ol><li>进入<code>图床设置</code>–&gt;<code>GitHub</code></li><li>设定<code>仓库名</code>、<code>分支名</code><ul><li>仓库名为：github用户名&#x2F;第一步新建的仓库名称</li><li>分支名：main【默认为main】</li></ul></li><li>填写<code>token</code></li><li>如果图片是存放在仓库的子文件中的，可以设置<code>存储路径</code>，如<code>image/</code></li><li>设置<code>自定义域名</code><br>这里我们通过jsDelivr实现Github的图床CDN加速<br>可以访问<a href="https://www.jsdelivr.com/?docs=gh">jsDelivr官网</a>查看教程，自定义域名如下：<br> <code>https://&lt;jsDelivr加速域名&gt;/gh/&lt;用户&gt;/&lt;项目&gt;@&lt;版本&gt;  原本github的自定义域名应该是：  </code><a href="https://raw.githubusercontent.com/[username]/[%E4%BB%93%E5%BA%93%E5%90%8D]%60">https://raw.githubusercontent.com/[username]/[仓库名]`</a></li></ol><h1 id="obsidian一键上传"><a href="#obsidian一键上传" class="headerlink" title="obsidian一键上传"></a>obsidian一键上传</h1><p>请参考<a href="https://hotsaber.github.io/2023/07/09/8.obsidian%20%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B/#%E5%9B%BE%E7%89%87%E4%B8%8A%E4%BC%A0%EF%BC%88%E8%BF%9B%E9%98%B6%E5%86%85%E5%AE%B9%EF%BC%89">obsidian入门教程–图片上传进阶内容</a></p><h1 id="GitHub与腾讯云链接互换"><a href="#GitHub与腾讯云链接互换" class="headerlink" title="GitHub与腾讯云链接互换"></a>GitHub与腾讯云链接互换</h1><p>以<a href="https://hotsaber.github.io/2023/07/09/8.obsidian%20%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B/">obsidian 入门教程</a>的图<code>obsidian 入门教程-1</code>为例<br>其jsdelivr链接为：</p><pre class="language-none"><code class="language-none">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;HOTSaber&#x2F;Imagehosting@main&#x2F;blogpic&#x2F;obsidian%20%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B-1.png</code></pre><p>其腾讯云链接为：</p><pre class="language-none"><code class="language-none">https:&#x2F;&#x2F;aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com&#x2F;blogpic&#x2F;obsidian%20%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B-1.png</code></pre><p>可以看到在<code>/blogpic/.....</code>后的内容是完全一样的，只是<code>/blogpic/...</code>前的内容不一样，所以只要图片名保持一置，通过修改图片名前的web地址，我们可以实现在不同的图床间进行切换。<br><strong>前提是两个图床中都有此文件</strong><br>这里我们将<a href="https://hotsaber.github.io/2023/07/09/8.obsidian%20%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B/">obsidian 入门教程</a>中图片编号奇数的设为jsdelivr链接，偶数的设为腾讯云链接，以供参考。</p><hr><p><a href="https://www.jsdelivr.com/?docs=gh">jsdelivr</a>是一个免费的公共CDN（内容分发网络）服务，它允许网站开发者将他们的代码库、JavaScript库、字体和其他资源托管在jsdelivr上，并通过jsdelivr的CDN网络进行快速分发。使用jsdelivr可以有效地减少用户下载资源的时间，提高网页加载速度，同时减轻原始服务器的负载。<br>jsdelivr支持多种类型的文件托管，包括JavaScript、CSS、字体、图片等。开发者可以将自己的文件上传到jsdelivr，并获取一个指向这些文件的URL。然后，他们可以在自己的网站中引用这些URL，jsdelivr会自动处理文件的缓存、分发和版本控制。</p><hr>]]></content>
      
      
      <categories>
          
          <category> 编程与系统配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
            <tag> GitHub </tag>
            
            <tag> 图床 </tag>
            
            <tag> PicGo </tag>
            
            <tag> Obsidian </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用docker多开neo4j</title>
      <link href="/2024/04/13/112.%E4%BD%BF%E7%94%A8docker%E5%A4%9A%E5%BC%80neo4j/"/>
      <url>/2024/04/13/112.%E4%BD%BF%E7%94%A8docker%E5%A4%9A%E5%BC%80neo4j/</url>
      
        <content type="html"><![CDATA[<hr><p>docker安装请见:<a href="">docker安装教程</a></p><hr><h1 id="使用docker新建neo4j实例"><a href="#使用docker新建neo4j实例" class="headerlink" title="使用docker新建neo4j实例"></a>使用docker新建neo4j实例</h1><h2 id="下载neo4j的docker镜像"><a href="#下载neo4j的docker镜像" class="headerlink" title="下载neo4j的docker镜像"></a>下载neo4j的docker镜像</h2><pre class="language-none"><code class="language-none">docker pull neo4j:latest</code></pre><h2 id="构建新实例"><a href="#构建新实例" class="headerlink" title="构建新实例"></a>构建新实例</h2><pre class="language-bash" data-language="bash"><code class="language-bash">docker run \    --name neo4j-instance2 \    -p7475:7474 -p7688:7687 \    -d \    -v $HOME&#x2F;neo4j2&#x2F;data:&#x2F;data \    -v $HOME&#x2F;neo4j2&#x2F;logs:&#x2F;logs \    -v $HOME&#x2F;neo4j2&#x2F;import:&#x2F;import \    -v $HOME&#x2F;neo4j2&#x2F;plugins:&#x2F;plugins \    --env NEO4J_AUTH&#x3D;neo4j&#x2F;88888888 \    neo4j:latest</code></pre><h2 id="代码注释"><a href="#代码注释" class="headerlink" title="代码注释"></a>代码注释</h2><pre class="language-none"><code class="language-none">docker run \                   # 命令用于在 Docker 容器中运行一个新的应用实例。    --name neo4j-instance2 \    # 设置容器的名称为 neo4j-instance2，这个名字用于在后续命令中引用容器。    -p7475:7474 \               # 将容器内部使用的 7475 【ip:7475访问web端，后面7474不用改动】端口映射到宿主机的 7475 端口。7474 是 Neo4j 默认的Web接口端口。    -p7688:7687 \               # 将容器内部使用的 7687  【ip:7688 访问数据库端，后面7687 不用改动】端口映射到宿主机的 7688 端口。7687 是 Neo4j 默认的Bolt协议端口，用于数据库连接。    -d \                        # 让容器在后台运行（detached mode）。    -v $HOME&#x2F;neo4j2&#x2F;data:&#x2F;data \ # 将宿主机上的 &#96;$HOME&#x2F;neo4j2&#x2F;data&#96; 目录挂载到容器内的 &#96;&#x2F;data&#96; 目录。这是 Neo4j 数据存储的位置。    -v $HOME&#x2F;neo4j2&#x2F;logs:&#x2F;logs \ # 将宿主机上的 &#96;$HOME&#x2F;neo4j2&#x2F;logs&#96; 目录挂载到容器内的 &#96;&#x2F;logs&#96; 目录。这是 Neo4j 日志文件的存放位置。    -v $HOME&#x2F;neo4j2&#x2F;import:&#x2F;import \ # 将宿主机上的 &#96;$HOME&#x2F;neo4j2&#x2F;import&#96; 目录挂载到容器内的 &#96;&#x2F;import&#96; 目录。可以用来存放要导入到 Neo4j 的数据文件。    -v $HOME&#x2F;neo4j2&#x2F;plugins:&#x2F;plugins \ # 将宿主机上的 &#96;$HOME&#x2F;neo4j2&#x2F;plugins&#96; 目录挂载到容器内的 &#96;&#x2F;plugins&#96; 目录。用于存放 Neo4j 使用的插件。    --env NEO4J_AUTH&#x3D;neo4j&#x2F;【12345678】 \ # 设置环境变量 &#96;NEO4J_AUTH&#96;，用于定义 Neo4j 的默认用户名（neo4j）和密码（test）【密码至少8位】。这是首次访问数据库时需要的认证信息。    neo4j:latest                 # 指定使用哪个镜像运行容器，此处使用的是标记为 latest 的 neo4j 官方镜像。</code></pre><h1 id="docker命令"><a href="#docker命令" class="headerlink" title="docker命令"></a>docker命令</h1><pre class="language-bash" data-language="bash"><code class="language-bash">#neo4j-instance2修改为自己实例的名字docker restart neo4j-instance2 #这条命令会停止并再次启动 &#96;neo4j-instance2&#96; 容器。docker stop neo4j-instance2 #使用此命令可以安全地停止 &#96;neo4j-instance2&#96; 容器。docker start neo4j-instance2 #如果容器已经停止，使用这个命令可以再次启动它docker stats neo4j-instance2 #这个命令提供 &#96;neo4j-instance2&#96; 容器的实时资源使用情况，如 CPU、内存使用、网络 I&#x2F;O、磁盘 I&#x2F;O 等。docker logs neo4j-instance2 #这个命令将显示 &#96;neo4j-instance2&#96; 容器的控制台输出，这通常包括应用程序和服务的日志消息。这对于调试或了解容器内部发生了什么非常有用。docker inspect neo4j-instance2 #这个命令将显示 &#96;neo4j-instance2&#96; 容器的详细配置和状态信息，如网络配置、挂载卷、环境变量等。docker ps #这个命令将列出所有当前运行中的容器。它显示的信息包括容器的 ID、使用的镜像、启动命令、多久前创建、状态、端口等。</code></pre>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> linux </tag>
            
            <tag> neo4j </tag>
            
            <tag> 图数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>modelscope使用教程</title>
      <link href="/2024/03/25/110.modelscope%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/"/>
      <url>/2024/03/25/110.modelscope%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="1-访问modelscope官网，搜索想要下载的模型"><a href="#1-访问modelscope官网，搜索想要下载的模型" class="headerlink" title="1.访问modelscope官网，搜索想要下载的模型"></a>1.访问modelscope官网，搜索想要下载的模型</h1><p><a href="https://modelscope.cn/">modelscope官网</a></p><h1 id="2-使用SDK或git方式下载模型"><a href="#2-使用SDK或git方式下载模型" class="headerlink" title="2.使用SDK或git方式下载模型"></a>2.使用SDK或git方式下载模型</h1><h2 id="SDK下载"><a href="#SDK下载" class="headerlink" title="SDK下载"></a>SDK下载</h2><pre class="language-text" data-language="text"><code class="language-text">#新建并进入一个.py文件touch download_llama.pyvim download_llama.py#模型下载，复制代码到上述文件from modelscope import snapshot_download model_dir &#x3D; snapshot_download(&#39;skyline2006&#x2F;llama-7b&#39;)#推出编辑模式，然后运行此脚本python download_llama.py</code></pre><h2 id="Git下载"><a href="#Git下载" class="headerlink" title="Git下载"></a>Git下载</h2><p>git下载很简单，直接在当前路径文件夹下运行以下命令即可</p><pre class="language-text" data-language="text"><code class="language-text">git clone https:&#x2F;&#x2F;www.modelscope.cn&#x2F;skyline2006&#x2F;llama-7b.git</code></pre><h1 id="3-下载路径和注意事项"><a href="#3-下载路径和注意事项" class="headerlink" title="3.下载路径和注意事项"></a>3.下载路径和注意事项</h1><p>用SDK方法下载后，下载位置并不是在当前路径下，而是在默认的.&#x2F;root&#x2F;.cache&#x2F;modelscope&#x2F;hub下</p><h1 id="4-环境配置-ModelScope-Library安装"><a href="#4-环境配置-ModelScope-Library安装" class="headerlink" title="4.环境配置(ModelScope Library安装)"></a>4.环境配置(ModelScope Library安装)</h1><p><a href="https://modelscope.cn/docs/%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85">官方文档</a></p><h2 id="1-核心框架"><a href="#1-核心框架" class="headerlink" title="1. 核心框架"></a>1. 核心框架</h2><p>ModelScope Libarary由<strong>核心框架</strong>，以及不同<strong>领域模型</strong>的<strong>对接组件</strong>组成。如果只需要ModelScope模型和数据集访问等基础能力，可以只安装ModelScope的核心框架：</p><p><code>pip install modelscope</code></p><h2 id="2-对接组件"><a href="#2-对接组件" class="headerlink" title="2. 对接组件"></a>2. 对接组件</h2><p>但如果需要进一步具体使用ModelScope平台上承载的，包括多模态，NLP，CV，语音等不同领域的模型，来进行模型推理以及模型训练、微调等能力，则需要安装各个领域上不同的依赖。</p><p>如仅需体验<code>多模态</code>领域的模型，可执行如下命令安装领域依赖：</p><p><code>pip install &quot;modelscope[multi-modal]&quot;</code> </p><p>如仅需体验<code>NLP</code>领域模型，可执行如下命令安装领域依赖（因部分依赖由ModelScope独立host，所以需要使用”-f”参数）：</p><p><code>pip install &quot;modelscope[nlp]&quot; -f https://modelscope.oss-cn-beijing.aliyuncs.com/releases/repo.html</code></p><p>如果使用miniconda环境，需要提前安装setuptools_scm。</p><p>如仅需体验<code>CV</code>领域模型，可执行如下命令安装领域依赖（因部分依赖由ModelScope独立host，所以需要使用”-f”参数）：</p><p><code>pip install &quot;modelscope[cv]&quot; -f https://modelscope.oss-cn-beijing.aliyuncs.com/releases/repo.html</code></p><p>如仅需体验<code>语音</code>领域模型，可执行如下命令安装领域依赖（因部分依赖由ModelScope独立host，所以需要使用”-f”参数）：</p><p><code>pip install &quot;modelscope[audio]&quot; -f https://modelscope.oss-cn-beijing.aliyuncs.com/releases/repo.html</code></p><p><strong>注意：当前大部分语音模型需要在Linux环境上使用，并且推荐使用python3.8。</strong></p><p>如仅需体验<code>科学计算</code>领域模型，请执行如下命令：</p><p><code>pip install &quot;modelscope[science]&quot; -f https://modelscope.oss-cn-beijing.aliyuncs.com/releases/repo.html</code></p><p><strong>注</strong>：</p><ol><li>如果您已经安装过ModelScope，但是需要升级使用新版发布的Library，可以使用</li></ol><p><code>pip install modelscope --upgrade</code></p><p>来升级到最新版本。也可以通过指定特定版本号来选择选择某一版本。</p>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> modelscope </tag>
            
            <tag> 环境 </tag>
            
            <tag> 深度学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux安装教程</title>
      <link href="/2024/03/20/111.linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/"/>
      <url>/2024/03/20/111.linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<hr><p>参考原文<a href="https://blog.csdn.net/u012514113/article/details/131269056"># 安装Ubuntu系统详细教程</a><br>安装之前，查看一下自己电脑的BIOS系统的类型，使用快捷键win + R  输入<code>msinfo32</code></p><hr><h1 id="制作启动盘"><a href="#制作启动盘" class="headerlink" title="制作启动盘"></a>制作启动盘</h1><ol><li><p>使用 rufus工具制作启动盘，下载地址：<a href="https://rufus.en.softonic.com/" title="Rufus">Rufus</a></p></li><li><p>下载Ubuntu iso镜像   下载地址： <a href="http://mirrors.aliyun.com/ubuntu-releases/" title="ubuntu-releases">ubuntu-releases</a></p></li><li><p>准备好一个至少8G的U盘制作启动盘</p></li><li><p>注意分区类型设为GPT<br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/111.linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B-1.png" alt="111.linux安装教程-1"></p></li></ol><h1 id="电脑BIOS设置"><a href="#电脑BIOS设置" class="headerlink" title="电脑BIOS设置"></a>电脑BIOS设置</h1><hr><p>本项根据主板型号不同，BIOS界面选项可能有所不同，主要设置都集中在Startup(启动)项中</p><hr><ol><li>进入BIOS-startup设置<code>UEFI/Legacy Boot</code>为<code>UEFI Only</code></li><li>进入BIOS-security设置<code>Secure Boot</code>为<code>Disable</code>（很重要，如不设置，可能导致装完nvidia显卡驱动后无限重启 ，有的电脑没有，可以略过此设置选项）</li><li>设置USB启动为<code>enable</code></li><li>进入BIOS-startup-Boot设置，将USB设备调为第一顺位</li></ol><h1 id="安装linux"><a href="#安装linux" class="headerlink" title="安装linux"></a>安装linux</h1><ul><li>使用USB系统盘启动后，可以使用Install Ubuntu进行安装<br>  这里会有一个坑，Ubuntu启动时卡在logo页面，无法继续安装步骤，问题原因是显卡驱动与Ubuntu系统不兼容，解决方法：<br>  移动到 Install Ubuntu 此项上，然后输入e（edit模式），进入到编辑模式界面找到  <pre class="language-none"><code class="language-none">quiet splash ---</code></pre>  去掉后面的 splash 后面的 —               修改成如下  <pre class="language-none"><code class="language-none">quiet splash nouveau.modeset&#x3D;0</code></pre></li><li>然后F10重启，重新安装<br>  根据具体情况尝试修改：  <a href="https://itsfoss.com/fix-ubuntu-freezing/" title="Fixing Ubuntu Freezing at Boot Time">Fixing Ubuntu Freezing at Boot Time</a></li><li>也可尝试使用<code>Ubuntu(safe graphics)</code></li><li>在用户配置用户名和密码时，Use Active Directory不需要选择</li></ul><h1 id="双系统切换-略过"><a href="#双系统切换-略过" class="headerlink" title="双系统切换(略过)"></a>双系统切换(略过)</h1><p>此时Ubuntu系统安装完成后，接下来就是设置双系统（window 和 Ubuntu ）切换</p><p>进入BIOS设置 ,把 UEFI&#x2F;Legacy Boot  模式 设置成 Both<br>以后每次开机重启，进入Boot Menu然后通过 上下键选择你想要进入的系统即可。</p><h1 id="安装后续操作"><a href="#安装后续操作" class="headerlink" title="安装后续操作"></a>安装后续操作</h1><p>重启后重新进入<code>UEFI Firmware Settings</code>找到Secure boot，改为disabled（略过）</p><h2 id="1-更新系统"><a href="#1-更新系统" class="headerlink" title="1.更新系统"></a>1.更新系统</h2><pre class="language-none"><code class="language-none">#更新系统sudo apt update &amp;&amp; sudo apt upgrade -y#更新软件源sudo apt-get update &amp;&amp; sudo apt-get upgrade#安装解压缩与必备工具sudo apt install zipsudo apt install build-essential#安装网络工具sudo apt install net-tools#安装systemctlsudo apt install systemd</code></pre><h2 id="2-配置SSH"><a href="#2-配置SSH" class="headerlink" title="2.配置SSH"></a>2.配置SSH</h2><ol><li>安装ssh服务<pre class="language-bash" data-language="bash"><code class="language-bash">sudo apt autoremove --purge openssh-server -y &amp;&amp; sudo apt install openssh-server -y</code></pre></li><li>编辑文件<code>vim /etc/ssh/sshd_config</code>, 修改端口等参数，并开启需要的功能</li></ol><pre class="language-bash" data-language="bash"><code class="language-bash"># 端口自定 Port 22 # 密码验证PasswordAuthentication yes # 允许免密访问PubkeyAuthentication yesAuthorizedKeysFile.ssh&#x2F;authorized_keys .ssh&#x2F;authorized_keys2#是否允许管理员账户远程访问PermitRootLogin yes</code></pre><p><em><strong>重启服务<code>sudo service ssh --full-restart</code><br>生成key, <code>ssh-keygen -t rsa</code>一路回车</strong></em><br>3. 使用<code>systemctl enable ssh</code>命令配置SSH自启动，其他systemctl命令如下：</p><pre class="language-bash" data-language="bash"><code class="language-bash">systemctl daemon-reload  systemctl start ssh #启动frpssystemctl enable ssh #打开自启动systemctl disable ssh #关闭自启动systemctl restart ssh #重启进程systemctl stop ssh #停止进程systemctl status ssh #查看进程日志</code></pre><ol start="4"><li>配置免密访问</li></ol><ul><li>使用<code>su root</code>切换root账户</li><li>使用以下命令新建并修改authorized_keys文件<pre class="language-bash" data-language="bash"><code class="language-bash">mkdir -p ~&#x2F;.ssh #新建.ssh文件夹cd &#x2F;root&#x2F;.sshtouch authorized_keys #新建authorized_keys文件vim authorized_keys #修改文件内容，添加相应公钥，用:wq保存退出即可</code></pre></li></ul><h1 id="其他配置"><a href="#其他配置" class="headerlink" title="其他配置"></a>其他配置</h1><ol><li>内网穿透请见<a href="https://hotsaber.github.io/2023/10/10/13.%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/">内网穿透</a></li><li>环境配置请见<a href="https://hotsaber.github.io/2023/11/16/14.windows%E5%AE%89%E8%A3%85linux/#linux%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE">windows安装linux-linux环境配置</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> SSH </tag>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker教程</title>
      <link href="/2023/12/12/107.docker%E6%95%99%E7%A8%8B/"/>
      <url>/2023/12/12/107.docker%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<hr><p>详情请参考<a href="https://docker.easydoc.net/doc/81170005/cCewZWoN/lTKfePfP#nav_6">docker快速入门</a>与<a href="https://docs.docker.com/engine/install/ubuntu/">官方文档</a></p><hr><h1 id="使用-apt-存储库安装"><a href="#使用-apt-存储库安装" class="headerlink" title="使用 apt 存储库安装"></a><a href="https://docs.docker.com/engine/install/ubuntu/#install-using-the-repository">使用 apt 存储库安装</a></h1><p>在新主机上首次安装 Docker Engine 之前，需要设置 Docker 存储库。之后，您可以从存储库安装和更新 Docker。</p><ol><li><p>设置 Docker 的 <code>apt</code> 存储库</p> <pre class="language-bash" data-language="bash"><code class="language-bash"># Add Docker&#39;s official GPG key:sudo apt-get updatesudo apt-get install ca-certificates curl gnupgsudo install -m 0755 -d &#x2F;etc&#x2F;apt&#x2F;keyringscurl -fsSL https:&#x2F;&#x2F;download.docker.com&#x2F;linux&#x2F;ubuntu&#x2F;gpg | sudo gpg --dearmor -o &#x2F;etc&#x2F;apt&#x2F;keyrings&#x2F;docker.gpgsudo chmod a+r &#x2F;etc&#x2F;apt&#x2F;keyrings&#x2F;docker.gpg# Add the repository to Apt sources:echo \  &quot;deb [arch&#x3D;$(dpkg --print-architecture) signed-by&#x3D;&#x2F;etc&#x2F;apt&#x2F;keyrings&#x2F;docker.gpg] https:&#x2F;&#x2F;download.docker.com&#x2F;linux&#x2F;ubuntu \  $(. &#x2F;etc&#x2F;os-release &amp;&amp; echo &quot;$VERSION_CODENAME&quot;) stable&quot; | \  sudo tee &#x2F;etc&#x2F;apt&#x2F;sources.list.d&#x2F;docker.list &gt; &#x2F;dev&#x2F;nullsudo apt-get update</code></pre><blockquote><p>Note<br>如果您使用 Ubuntu 衍生发行版，例如 Linux Mint，您可能需要 <code>UBUNTU_CODENAME</code> 使用 <code>VERSION_CODENAME</code>. </p></blockquote></li><li><h2 id="安装-Docker-软件包-要安装最新版本，请运行："><a href="#安装-Docker-软件包-要安装最新版本，请运行：" class="headerlink" title="安装 Docker 软件包 要安装最新版本，请运行： "></a><strong>安装 Docker 软件包</strong><br> 要安装最新版本，请运行：<br><pre class="language-bash" data-language="bash"><code class="language-bash">sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin</code></pre> </h2></li><li><p>通过运行镜像来验证Docker Engine安装是否成功 <code>hello-world</code> 。</p> <pre class="language-bash" data-language="bash"><code class="language-bash">sudo docker run hello-world</code></pre><p> 此命令下载测试映像并在容器中运行它。当容器运行时，它会打印一条确认消息并退出。<br>您现在已经成功安装并启动了 Docker Engine。</p></li></ol><h1 id="升级Docker引擎"><a href="#升级Docker引擎" class="headerlink" title="升级Docker引擎"></a><a href="https://docs.docker.com/engine/install/ubuntu/#upgrade-docker-engine">升级Docker引擎</a></h1><p>要升级Docker Engine，请按照 <a href="https://docs.docker.com/engine/install/ubuntu/#install-using-the-repository">安装说明</a>的步骤2进行操作，选择要安装的版本。</p><h1 id="启用docker镜像加速"><a href="#启用docker镜像加速" class="headerlink" title="启用docker镜像加速"></a>启用docker镜像加速</h1><h2 id="启用国内镜像加速器"><a href="#启用国内镜像加速器" class="headerlink" title="启用国内镜像加速器"></a><strong>启用国内镜像加速器</strong></h2><p>• <strong>编辑 Docker 配置文件</strong><br>  在 <code>/etc/docker/daemon.json</code> 中添加国内镜像源（如阿里云、腾讯云）：<br>  <pre class="language-json" data-language="json"><code class="language-json">&#123;  &quot;registry-mirrors&quot;: [    &quot;https:&#x2F;&#x2F;docker.m.daocloud.io&quot;,    &quot;https:&#x2F;&#x2F;hub-mirror.c.163.com&quot;,&quot;https:&#x2F;&#x2F;mirror.ccs.tencentyun.com&quot;,&quot;https:&#x2F;&#x2F;registry.docker-cn.com&quot;  ]&#125;</code></pre><br>  • 重启 Docker 服务生效：<br>    <pre class="language-none"><code class="language-none">&#96;&#96;&#96;bashsudo systemctl daemon-reload    sudo systemctl restart docker</code></pre></p><p>• <strong>验证加速器状态</strong><br>  <pre class="language-bash" data-language="bash"><code class="language-bash">docker info | grep &quot;Registry Mirrors&quot;# 应显示配置的镜像地址</code></pre></p><h2 id="手动拉取镜像"><a href="#手动拉取镜像" class="headerlink" title="手动拉取镜像"></a><strong>手动拉取镜像</strong></h2><p>• <strong>针对关键服务镜像单独拉取</strong><br>  例如拉取 Redis 镜像：<br>  <pre class="language-bash" data-language="bash"><code class="language-bash">docker pull redis:latest# 若失败可尝试更换标签（如 alpine 版本）</code></pre></p><p>• <strong>使用代理服务器</strong>（适用于企业内网）<br>  在 Docker 配置或环境变量中设置代理：<br>  <pre class="language-bash" data-language="bash"><code class="language-bash">export HTTP_PROXY&#x3D;&quot;http:&#x2F;&#x2F;proxy_ip:port&quot;export HTTPS_PROXY&#x3D;&quot;http:&#x2F;&#x2F;proxy_ip:port&quot;docker compose up -d</code></pre></p><h2 id="其他优化措施"><a href="#其他优化措施" class="headerlink" title="其他优化措施"></a><strong>其他优化措施</strong></h2><p>• <strong>调整 Docker 客户端超时时间</strong><br>  修改 Docker 配置文件 <code>/etc/docker/daemon.json</code>：<br>  <pre class="language-json" data-language="json"><code class="language-json">&#123;  &quot;max-concurrent-downloads&quot;: 3,  &quot;max-download-attempts&quot;: 5&#125;</code></pre></p><p>• <strong>清理本地缓存后重试</strong><br>  <pre class="language-bash" data-language="bash"><code class="language-bash">docker system prune -a  # 清理无效镜像和缓存docker compose up -d</code></pre></p><hr><h2 id="关联问题排查"><a href="#关联问题排查" class="headerlink" title="关联问题排查"></a><strong>关联问题排查</strong></h2><table><thead><tr><th>现象</th><th>排查方向</th><th>参考方案</th></tr></thead><tbody><tr><td>部分服务镜像拉取成功</td><td>Docker Hub 限流</td><td>等待 1 小时后重试</td></tr><tr><td>仅特定镜像失败</td><td>镜像标签兼容性问题</td><td>检查 compose 文件版本</td></tr><tr><td>报错 “TLS handshake timeout”</td><td>系统时间不同步</td><td>同步时间：<code>ntpdate pool.ntp.org</code></td></tr></tbody></table><hr><h2 id="操作验证"><a href="#操作验证" class="headerlink" title="操作验证"></a><strong>操作验证</strong></h2><p>完成上述步骤后，执行以下命令验证：</p><pre class="language-bash" data-language="bash"><code class="language-bash">docker compose up -d --no-build  # 跳过构建直接启动docker compose logs -f web       # 监控关键服务日志</code></pre><p>若仍存在问题，可提供以下信息进一步排查：</p><pre class="language-bash" data-language="bash"><code class="language-bash">docker info         # Docker 系统配置docker network ls   # 网络状态iptables -L -n     # 防火墙规则</code></pre><hr>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/12/08/()/"/>
      <url>/2023/12/08/()/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>nccl实现多GPU交互</title>
      <link href="/2023/12/04/108.nccl%E5%AE%9E%E7%8E%B0%E5%A4%9AGPU%E4%BA%A4%E4%BA%92/"/>
      <url>/2023/12/04/108.nccl%E5%AE%9E%E7%8E%B0%E5%A4%9AGPU%E4%BA%A4%E4%BA%92/</url>
      
        <content type="html"><![CDATA[<hr><p><a href="https://docs.nvidia.com/deeplearning/nccl/install-guide/index.html">官方教程</a>与<a href="https://developer.nvidia.com/nccl">官网下载</a></p><hr><h1 id="下载与安装"><a href="#下载与安装" class="headerlink" title="下载与安装"></a>下载与安装</h1><p>前往<a href="https://developer.nvidia.com/nccl/nccl-legacy-downloads">官网</a>选择相应cuda版本进行安装<br>如cuda11.6的安装指令如下</p><h4 id="Network-installers-x86"><a href="#Network-installers-x86" class="headerlink" title="Network installers (x86)"></a>Network installers (x86)</h4><p>If not already done, make sure you install the network repository:</p><pre class="language-none"><code class="language-none">Network Installer for Ubuntu20.04- $ wget https:&#x2F;&#x2F;developer.download.nvidia.com&#x2F;compute&#x2F;cuda&#x2F;repos&#x2F;ubuntu2004&#x2F;x86_64&#x2F;cuda-keyring_1.0-1_all.deb- $ sudo dpkg -i cuda-keyring_1.0-1_all.deb- $ sudo apt-get updateNetwork Installer for Ubuntu18.04- $ wget https:&#x2F;&#x2F;developer.download.nvidia.com&#x2F;compute&#x2F;cuda&#x2F;repos&#x2F;ubuntu1804&#x2F;x86_64&#x2F;cuda-keyring_1.0-1_all.deb- $ sudo dpkg -i cuda-keyring_1.0-1_all.deb- $ sudo apt-get updateNetwork Installer for RedHat&#x2F;CentOS 8- $ sudo dnf config-manager --add-repo https:&#x2F;&#x2F;developer.download.nvidia.com&#x2F;compute&#x2F;cuda&#x2F;repos&#x2F;rhel8&#x2F;x86_64&#x2F;cuda-rhel8.repoNetwork Installer for RedHat&#x2F;CentOS 7- $ sudo yum-config-manager --add-repo https:&#x2F;&#x2F;developer.download.nvidia.com&#x2F;compute&#x2F;cuda&#x2F;repos&#x2F;rhel7&#x2F;x86_64&#x2F;cuda-rhel7.repo</code></pre><p>then run the following command to installer NCCL:<br>For Ubuntu:<code>sudo apt install libnccl2=2.12.12-1+cuda11.6 libnccl-dev=2.12.12-1+cuda11.6</code><br>For RHEL&#x2F;Centos: <code>sudo yum install libnccl-2.12.12-1+cuda11.6 libnccl-devel-2.12.12-1+cuda11.6 libnccl-static-2.12.12-1+cuda11.6</code></p>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nccl </tag>
            
            <tag> GPU </tag>
            
            <tag> paddle </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>样式管理</title>
      <link href="/2023/12/01/201.office%E9%80%9A%E8%BF%87%E6%A0%B7%E5%BC%8F%E7%AE%A1%E7%90%86%E6%A0%BC%E5%BC%8F/"/>
      <url>/2023/12/01/201.office%E9%80%9A%E8%BF%87%E6%A0%B7%E5%BC%8F%E7%AE%A1%E7%90%86%E6%A0%BC%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<hr><p>使用<strong>样式管理</strong>office格式的原因：</p><ul><li>是office底层机制，后续很多进阶操作都要基于样式</li><li>对于<strong>学术写作</strong>来说，写作有<strong>固定格式</strong>与套路，所涉及的格式就有几种，样式管理只设置一次即可一直受用</li><li>文章不可能一次成文，要不断反复修改，基于样式的格式管理便于修改</li><li>样式管理尤其适用于<strong>大体量文本</strong>的编辑与修改</li><li>在熟悉样式管理的操作逻辑后，操作更加便捷、简单、不容易出错</li><li>别问，问就是哪里要改点哪里</li></ul><hr><h1 id="学术写作文章结构"><a href="#学术写作文章结构" class="headerlink" title="学术写作文章结构"></a>学术写作文章结构</h1><p>在学术写作中，我们的主要任务是撰写一篇<strong>论文</strong>、<strong>技术报告</strong>或者是<strong>项目申报书</strong>，这样一篇文章往往动辄百十来页，但都有一个统一的<strong>格式规范</strong>。</p><p>以一篇<strong>毕业论文</strong>为例，其<strong>大体构成</strong>包括：封面、摘要、摘要关键词、英文摘要、英文关键词、目录、图目录、各级标题（章标题、二、三级标题等）、正文、图、表、公式、题注、参考文献、附录、致谢等，每一部分都有固定格式。</p><p>我们所期望的是<strong>只设置一次格式</strong>，以后调整相应内容就可以直接套用我们预设好的格式，这就是我们所说的样式。</p><p>我们就是通过套用不同的样式，告诉word当前的内容是属于文章的哪个部分，也是通过样式，我们把文章分割成了不同的部分进行管理。</p><h1 id="office格式原理"><a href="#office格式原理" class="headerlink" title="office格式原理"></a>office格式原理</h1><p>office中所有格式设置全部是基于样式的，也就是说我们每一次修改，如果已有样式库中没有此格式，那么word就会自动生成一个新的样式。</p><p>例如当我们单独修改了部分正文内容后，word会自动生成一个新的样式<br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/201.office%E9%80%9A%E8%BF%87%E6%A0%B7%E5%BC%8F%E7%AE%A1%E7%90%86%E6%A0%BC%E5%BC%8F-2.png" alt="201.office通过样式管理格式-2"><br>此时样式<code>加粗</code>就为样式<code>正文</code>的一个子样式</p><p>平时这些样式是默认不显示的，可以在<code>样式窗格选项</code>中显示所有样式<br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/201.office%E9%80%9A%E8%BF%87%E6%A0%B7%E5%BC%8F%E7%AE%A1%E7%90%86%E6%A0%BC%E5%BC%8F-3.png" alt="201.office通过样式管理格式-3"></p><p>这就是为什么有的文档的样式看起来十分混乱<br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/201.office%E9%80%9A%E8%BF%87%E6%A0%B7%E5%BC%8F%E7%AE%A1%E7%90%86%E6%A0%BC%E5%BC%8F-4.png" alt="201.office通过样式管理格式-4"></p><h2 id="样式类型"><a href="#样式类型" class="headerlink" title="样式类型"></a>样式类型</h2><pre class="language-none"><code class="language-none">1. 字符样式包含字符的格式，包括字体，间距，特殊格式和边框底纹等。2. 段落样式包含字符和段落的格式，包括字体，制表符，段间距等。3. 表格样式包含表格格式，包括表格边框，底纹，字体等。4. 列表样式包含项目符号，编号或多级编号等样式，包括编号的字体和制表符等。</code></pre><h2 id="格式继承"><a href="#格式继承" class="headerlink" title="格式继承"></a>格式继承</h2><h3 id="字符样式继承"><a href="#字符样式继承" class="headerlink" title="字符样式继承"></a>字符样式继承</h3><p>即字体大小、颜色、加粗与否，当设定过后在<strong>光标选中区域中</strong>以及<strong>光标后</strong>新键入内容都会继承字符样式，且软硬回车也会继承字符样式。</p><h3 id="段落样式继承"><a href="#段落样式继承" class="headerlink" title="段落样式继承"></a>段落样式继承</h3><p>硬回车后根据样式中的<code>后续段落样式</code>设置，确定后续内容样式<br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/201.office%E9%80%9A%E8%BF%87%E6%A0%B7%E5%BC%8F%E7%AE%A1%E7%90%86%E6%A0%BC%E5%BC%8F-5.png" alt="201.office通过样式管理格式-5"></p><p>软回车视为当前段落，使用当前段落样式。</p><h1 id="格式污染"><a href="#格式污染" class="headerlink" title="格式污染"></a>格式污染</h1><h2 id="样式污染"><a href="#样式污染" class="headerlink" title="样式污染"></a>样式污染</h2><h3 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h3><p>格式污染主要是说，在经过<strong>其他软件</strong>编辑或<code>ctrl+C</code>、<code>ctrl+V</code>的过程中，样式库中的样式已经变的杂乱无章，无法再使用样式对文章整体格式进行管理了。</p><p>当我们复制其他来源的内容时，很容易带进奇奇怪怪的样式<br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/201.office%E9%80%9A%E8%BF%87%E6%A0%B7%E5%BC%8F%E7%AE%A1%E7%90%86%E6%A0%BC%E5%BC%8F-6.png" alt="201.office通过样式管理格式-6"><br>在多次复制后，有用样式很容易被淹没在各种垃圾样式中。</p><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p>在<code>word选项-高级-剪切、复制和粘贴</code>中，设置默认粘贴为<code>合并格式</code><br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/201.office%E9%80%9A%E8%BF%87%E6%A0%B7%E5%BC%8F%E7%AE%A1%E7%90%86%E6%A0%BC%E5%BC%8F-7.png" alt="201.office通过样式管理格式-7"></p><h2 id="样式的父子关系"><a href="#样式的父子关系" class="headerlink" title="样式的父子关系"></a>样式的父子关系</h2><p>还有的同学会遇到<strong>修改一个样式，所有格式都乱了</strong>的情况。</p><p>这是因为样式间有<code>样式基准</code>关系<br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/201.office%E9%80%9A%E8%BF%87%E6%A0%B7%E5%BC%8F%E7%AE%A1%E7%90%86%E6%A0%BC%E5%BC%8F-8.png" alt="201.office通过样式管理格式-8"><br>像图中这种情况，一但修改<code>正文</code>样式，所有以<code>正文</code>为<code>样式基准</code>的样式都会联动发生改变。</p><p><strong>所以要将<code>样式基准</code>设置为<code>无</code>，新建样式时也要设置为无</strong>，以防止修改样式时发生连锁反应。</p><h1 id="样式的显示与快速选用"><a href="#样式的显示与快速选用" class="headerlink" title="样式的显示与快速选用"></a>样式的显示与快速选用</h1><h2 id="显示自己想要的样式"><a href="#显示自己想要的样式" class="headerlink" title="显示自己想要的样式"></a>显示自己想要的样式</h2><p>在默认样式窗格中往往样式不全，实际上默认的样式已经很全了，只是软件默认隐藏了一些。</p><p>在<code>样式窗格</code>中进入<code>样式管理</code>的<code>推荐</code>标签页，显示我们想要用的样式<br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/201.office%E9%80%9A%E8%BF%87%E6%A0%B7%E5%BC%8F%E7%AE%A1%E7%90%86%E6%A0%BC%E5%BC%8F-10.png" alt="201.office通过样式管理格式-10"></p><h2 id="调整样式顺序"><a href="#调整样式顺序" class="headerlink" title="调整样式顺序"></a>调整样式顺序</h2><p>同样在<code>样式窗格</code>中<code>样式管理</code>的<code>推荐</code>标签页，使用<code>指定值</code>、<code>上移</code>等，调整样式的先后顺序，便于使用<br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/201.office%E9%80%9A%E8%BF%87%E6%A0%B7%E5%BC%8F%E7%AE%A1%E7%90%86%E6%A0%BC%E5%BC%8F-11.png" alt="201.office通过样式管理格式-11"></p><p>快速访问窗格中的顺序也会相应变动，可以把常用样式前移，以方便点选<br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/201.office%E9%80%9A%E8%BF%87%E6%A0%B7%E5%BC%8F%E7%AE%A1%E7%90%86%E6%A0%BC%E5%BC%8F-12.png" alt="201.office通过样式管理格式-12"></p><h1 id="基于多级列表的多级标题自动编号"><a href="#基于多级列表的多级标题自动编号" class="headerlink" title="基于多级列表的多级标题自动编号"></a>基于多级列表的多级标题自动编号</h1><p>使用<code>段落-多级列表-定义新的列表样式</code>，新建一个<code>多级列表样式</code>以供后续调整<br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/201.office%E9%80%9A%E8%BF%87%E6%A0%B7%E5%BC%8F%E7%AE%A1%E7%90%86%E6%A0%BC%E5%BC%8F-14.png" alt="201.office通过样式管理格式-14"></p><p>在修改界面中点击右下角的<code>格式</code>-<code>编号</code>进入编号界面<br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/201.office%E9%80%9A%E8%BF%87%E6%A0%B7%E5%BC%8F%E7%AE%A1%E7%90%86%E6%A0%BC%E5%BC%8F-16.png" alt="201.office通过样式管理格式-16"></p><p>在编号界面点击左下角的<code>更多</code>，展开详细设置</p><ol><li>在<code>输入编号的格式</code>中定义编号构成<ul><li>手打部分为不变部分</li><li>标灰部分为自动排号部分，<br>  <code>包含的级别编号来自</code>为空时，插入的数字为本级编号，会自动排序<br>  <code>包含的级别编号来自</code>上层级别时，插入的数字为上级编号，继承于所在上层级别编号</li></ul></li><li>在<code>位置</code>中调整编号缩进与对齐方式，这里推荐<code>设置所有级别</code><strong>全部</strong><code>设置为0</code>,缩进后续由<code>样式</code>统一调整</li><li><code>编号之后</code>推荐设置为<code>空格</code>，这样生成的目录更加美观</li><li>设置<code>将级别链接到样式</code>，连接相应编号到对应级别标题</li><li>最后，将所有级别的编号都进行设置，并链接到相应标题<br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/201.office%E9%80%9A%E8%BF%87%E6%A0%B7%E5%BC%8F%E7%AE%A1%E7%90%86%E6%A0%BC%E5%BC%8F-17.png" alt="201.office通过样式管理格式-17"></li></ol><p>此时在快速窗格中应该也有预览了<br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/201.office%E9%80%9A%E8%BF%87%E6%A0%B7%E5%BC%8F%E7%AE%A1%E7%90%86%E6%A0%BC%E5%BC%8F-18.png" alt="201.office通过样式管理格式-18"></p><h1 id="样式模板的自建"><a href="#样式模板的自建" class="headerlink" title="样式模板的自建"></a>样式模板的自建</h1><p>目前为止，我所遇到的样式模板大体可以分为两类，<code>注释模板</code>与<code>样式模板</code>。</p><p>我们学校的毕业论文要求就为<code>注释模板</code>，也就是格式要求都<strong>仅</strong>以文字描述的方式标出，这种需要手动新建。</p><p>但要注意<strong>光标位置</strong>，光标所在位置就是<code>新建样式</code>的<code>样式基准</code>。</p><p>同样我们可以使用此特性，对有样例的样式要求可以快速生成样式。</p><h2 id="快速生成样式（有样例的注释模板）"><a href="#快速生成样式（有样例的注释模板）" class="headerlink" title="快速生成样式（有样例的注释模板）"></a>快速生成样式（有样例的注释模板）</h2><p>对于有<code>样例</code>，但无<code>样式</code>的模板，可以将光标停留在相应内容上，点<code>新建样式</code><br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/201.office%E9%80%9A%E8%BF%87%E6%A0%B7%E5%BC%8F%E7%AE%A1%E7%90%86%E6%A0%BC%E5%BC%8F-13.png" alt="201.office通过样式管理格式-13"></p><p>此时所有<code>字体</code>、<code>段落</code>设置都与光标所在处相同，只要设置<code>样式基准</code>为<code>无</code>、<code>后续段落样式</code>为<code>正文</code>即可。</p><p>后续使用样式导出，将样式导入到我们需要编辑格式的文件中去。</p><h2 id="导入、导出样式（样式模板）"><a href="#导入、导出样式（样式模板）" class="headerlink" title="导入、导出样式（样式模板）"></a>导入、导出样式（样式模板）</h2><p>进入<code>管理样式</code>窗口，点击左下角的<code>导入/导出</code>，<br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/201.office%E9%80%9A%E8%BF%87%E6%A0%B7%E5%BC%8F%E7%AE%A1%E7%90%86%E6%A0%BC%E5%BC%8F-20.png" alt="201.office通过样式管理格式-20"></p><p>点击<code>关闭文件</code>后，可以使用<code>打开文件</code>选取导出与导入文件(在选取文件时如果不显示word文档，请设置文件类型为<code>所有文件</code>)，左侧为模板文件，右侧为需要编辑的文件<br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/201.office%E9%80%9A%E8%BF%87%E6%A0%B7%E5%BC%8F%E7%AE%A1%E7%90%86%E6%A0%BC%E5%BC%8F-21.png" alt="201.office通过样式管理格式-21"></p><p>模板文件可以是我们自己建立的模板，也可以是期刊提供的模板。</p><p>在导入样式后，使用样式排序，将要使用的样式提前，便于取用。</p><h1 id="进阶操作"><a href="#进阶操作" class="headerlink" title="进阶操作"></a>进阶操作</h1><h2 id="插入题注"><a href="#插入题注" class="headerlink" title="插入题注"></a>插入题注</h2><p>使用<code>引用-插入题注</code>插入图标题与表标题，图标题在下，表标题在上，需要新建标签（图或表即可）<br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/201.office%E9%80%9A%E8%BF%87%E6%A0%B7%E5%BC%8F%E7%AE%A1%E7%90%86%E6%A0%BC%E5%BC%8F-22.png" alt="201.office通过样式管理格式-22"></p><p>编号选项中点选<code>包含章节号</code>，此项必须基于<strong>成功设置</strong><code>多级列表</code><br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/201.office%E9%80%9A%E8%BF%87%E6%A0%B7%E5%BC%8F%E7%AE%A1%E7%90%86%E6%A0%BC%E5%BC%8F-24.png" alt="201.office通过样式管理格式-24"></p><p>最后在编号后手打图、表名即可。</p><h2 id="自生成目录"><a href="#自生成目录" class="headerlink" title="自生成目录"></a>自生成目录</h2><p>使用<code>引用-目录</code>自动生成目录，要求各级标题<code>大纲级别</code>设定正确。</p><p>可以使用<code>视图-显示-导航窗格</code>打开导航窗格预览，导航窗格中的内容，即为目录内容，<strong>注意任何空格、标号错误等</strong></p><h2 id="图目录"><a href="#图目录" class="headerlink" title="图目录"></a>图目录</h2><p>使用<code>引用-插入表目录</code>插入图、表目录，此项要求图、表<code>题注</code>正确插入。</p><h2 id="章节批量管理"><a href="#章节批量管理" class="headerlink" title="章节批量管理"></a>章节批量管理</h2><p>此项需要正确设置<code>标题样式</code>、<code>多级列表</code>、<code>题注</code>等，涉及到参考文献需要<code>zotero</code>支持，可以实现所有编号自修正。</p><p>使用<code>视图-显示-导航窗格</code>打开导航窗格，在导航窗格中直接拖拽任意章或节，可以实现章节互换。</p><p>右键可以删除任意章节。</p><h2 id="特殊格式与高级替换"><a href="#特殊格式与高级替换" class="headerlink" title="特殊格式与高级替换"></a>特殊格式与高级替换</h2><p>在<code>查找与替换</code>窗口中，点左下角更多，进入详细设置，使用特殊格式进行模糊搜索与字符搜索<br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/201.office%E9%80%9A%E8%BF%87%E6%A0%B7%E5%BC%8F%E7%AE%A1%E7%90%86%E6%A0%BC%E5%BC%8F-25.png" alt="201.office通过样式管理格式-25"></p><p>详细操作（略）</p><h2 id="基于样式替换"><a href="#基于样式替换" class="headerlink" title="基于样式替换"></a>基于样式替换</h2><p>在<code>查找与替换</code>窗口中点选<code>格式-样式</code>选中目标样式，划定查找与替换范围<br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/201.office%E9%80%9A%E8%BF%87%E6%A0%B7%E5%BC%8F%E7%AE%A1%E7%90%86%E6%A0%BC%E5%BC%8F-26.png" alt="201.office通过样式管理格式-26"></p><p>详细操作（略）</p>]]></content>
      
      
      <categories>
          
          <category> 文档编辑与管理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> office </tag>
            
            <tag> 样式管理 </tag>
            
            <tag> 格式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>多cuda版本并存</title>
      <link href="/2023/11/30/16.%E5%8D%87%E7%BA%A7cuda/"/>
      <url>/2023/11/30/16.%E5%8D%87%E7%BA%A7cuda/</url>
      
        <content type="html"><![CDATA[<h1 id="多cuda版本并存"><a href="#多cuda版本并存" class="headerlink" title="多cuda版本并存"></a>多cuda版本并存</h1><p>详见<a href="https://blog.csdn.net/qq_44850917/article/details/134170999">链接</a>与<a href="https://blog.csdn.net/m0_46093829/article/details/128073309">链接</a>以及<a href="https://blog.csdn.net/weixin_46307478/article/details/128972918">Linux环境变量配置方法与加载顺序</a></p><h2 id="修改cuda软链接切换版本"><a href="#修改cuda软链接切换版本" class="headerlink" title="修改cuda软链接切换版本"></a>修改cuda软链接切换版本</h2><p>在Linux中，<code>/usr/local/</code>目录通常用于存放手动安装的软件。对于CUDA来说，它可能包括<code>cuda</code>这个软链接（快捷方式）来指向具体的CUDA安装目录。如果你想修改这个软链接指向的文件，你可以使用<code>ln</code>命令来重新创建这个软链接。</p><p>首先，你需要知道新的CUDA安装目录的路径。假设新的CUDA安装目录是<code>/usr/local/cuda-11.2</code>（这只是一个例子，实际的路径可能会不同）。</p><p>然后，你可以使用以下命令来删除旧的软链接并创建一个新的软链接：</p><pre class="language-bash" data-language="bash"><code class="language-bash">sudo rm &#x2F;usr&#x2F;local&#x2F;cudasudo ln -s &#x2F;usr&#x2F;local&#x2F;cuda-11.2 &#x2F;usr&#x2F;local&#x2F;cuda</code></pre><p>这里，<code>rm</code>命令用于删除旧的软链接，<code>ln -s</code>命令用于创建一个新的软链接。<code>-s</code>选项告诉<code>ln</code>命令创建一个符号链接（也就是软链接）。</p><p>请注意，使用<code>sudo</code>是因为<code>/usr/local/</code>目录通常需要管理员权限才能修改。</p><p>另外，修改CUDA软链接后，你可能还需要更新你的环境变量，以确保系统可以找到正确的CUDA路径。这通常涉及到编辑<code>~/.bashrc</code>、<code>~/.bash_profile</code>或<code>/etc/profile</code>文件，并在其中添加或更新以下行：</p><pre class="language-bash" data-language="bash"><code class="language-bash">export PATH&#x3D;&#x2F;usr&#x2F;local&#x2F;cuda&#x2F;bin:$PATHexport LD_LIBRARY_PATH&#x3D;&#x2F;usr&#x2F;local&#x2F;cuda&#x2F;lib64:$LD_LIBRARY_PATH</code></pre><p>然后，你需要运行<code>source ~/.bashrc</code>（或你编辑的相应文件）来使更改生效。</p><h2 id="Linux环境变量配置方法一：export-PATH"><a href="#Linux环境变量配置方法一：export-PATH" class="headerlink" title="Linux环境变量配置方法一：export PATH"></a>Linux环境变量配置方法一：<code>export PATH</code></h2><p>使用<code>export</code>命令直接修改<code>PATH</code>的值。</p><p>例如，配置MySQL进入环境变量的方法:</p><pre class="language-bash" data-language="bash"><code class="language-bash">export PATH&#x3D;&#x2F;home&#x2F;uusama&#x2F;mysql&#x2F;bin:$PATH# 或者把PATH放在前面export PATH&#x3D;$PATH:&#x2F;home&#x2F;uusama&#x2F;mysql&#x2F;bin</code></pre><p>注意事项：</p><ul><li>生效时间：立即生效</li><li>生效期限：当前终端有效，窗口关闭后无效</li><li>生效范围：仅对当前用户有效</li><li>配置的环境变量中不要忘了加上原来的配置，即<code>$PATH</code>部分，避免覆盖原来配置【具体表现为，把原来的PATH看作一个目录，与新增加的环境变量用冒号 : 隔开；原来的PATH看作一个目录($PATH)，与新增加的环境变量用冒号 : 隔开；原来的PATH看作一个目录，与新增加的环境变量用冒号:隔开；原来的PATH可以放在前面，也可以放在后面】</li></ul><h2 id="Linux环境变量配置方法二：vim-bashrc"><a href="#Linux环境变量配置方法二：vim-bashrc" class="headerlink" title="Linux环境变量配置方法二：vim ~/.bashrc"></a>Linux环境变量配置方法二：<code>vim ~/.bashrc</code></h2><p>通过修改用户目录下的<code>~/.bashrc</code>文件进行配置：</p><pre class="language-bash" data-language="bash"><code class="language-bash">vim ~&#x2F;.bashrc# 在最后一行加上export PATH&#x3D;$PATH:&#x2F;home&#x2F;uusama&#x2F;mysql&#x2F;bin</code></pre><p>注意事项：</p><ul><li>生效时间：使用相同的用户打开新的终端时生效，或者手动<code>source ~/.bashrc</code>生效</li><li>生效期限：永久有效</li><li>生效范围：仅对当前用户有效</li><li>如果有后续的环境变量加载文件覆盖了<code>PATH</code>定义，则可能不生效</li></ul><h1 id="安装cudnn"><a href="#安装cudnn" class="headerlink" title="安装cudnn"></a>安装cudnn</h1><h2 id="windows"><a href="#windows" class="headerlink" title="windows"></a>windows</h2><p>CUDA需要配合cudnn才能正常工作，将cudnn的四个文件（夹），复制到CUDA的安装路径即可，即CUDA文件夹。<br>往系统环境变量中的 path 添加如下路径（<strong>根据自己的路径进行修改</strong>）</p><pre class="language-none"><code class="language-none">C:\Program Files\NVIDIA\CUDA\binC:\Program Files\NVIDIA\CUDA\includeC:\Program Files\NVIDIA\CUDA\libC:\Program Files\NVIDIA\CUDA\libnvvp</code></pre><p>检验：</p><p>配置完成后，我们可以验证是否配置成功，主要使用CUDA内置的<code>deviceQuery.exe</code> 和 <code>bandwidthTest.exe</code>：<br>首先win+R启动cmd，cd到<strong>安装目录</strong>下的 <code>…\extras\demo_suite</code>,然后分别执行<code>.\bandwidthTest.exe</code>和<code>.\deviceQuery.exe</code>,应该得到下图.</p><pre class="language-none"><code class="language-none">cd C:\Program Files\NVIDIA\CUDA\extras\demo_suite .\bandwidthTest.exe .\deviceQuery.exe</code></pre><h2 id="linux"><a href="#linux" class="headerlink" title="linux"></a>linux</h2><p><a href="https://docs.nvidia.com/deeplearning/cudnn/install-guide/index.html">官方教程</a>与<a href="https://blog.csdn.net/JianJuly/article/details/102793103">CSDN参考</a><br>安装linus解压工具</p><pre class="language-none"><code class="language-none">sudo apt-get install zlib1g</code></pre><p>打开<a href="https://developer.nvidia.com/rdp/cudnn-archive">下载链接</a>，选择相应的版本并下载。选择方法可参考<a href="%5Bhttps://blog.csdn.net/MumuziD/article/details/118760650%5D(https://blog.csdn.net/MumuziD/article/details/118760650)">链接</a>，，建议直接选择<code>cuDNN Library for Linux (x86_64)</code><br>进入cudnn压缩包所在的文件夹，解压文件</p><pre class="language-none"><code class="language-none">tar -xvf [$文件名]</code></pre><p>将文件拷贝到相应cuda目录下</p><pre class="language-none"><code class="language-none">sudo cp cudnn-*-archive&#x2F;include&#x2F;cudnn*.h &#x2F;usr&#x2F;local&#x2F;cuda&#x2F;include sudo cp -P cudnn-*-archive&#x2F;lib&#x2F;libcudnn* &#x2F;usr&#x2F;local&#x2F;cuda&#x2F;lib64 sudo chmod a+r &#x2F;usr&#x2F;local&#x2F;cuda&#x2F;include&#x2F;cudnn*.h &#x2F;usr&#x2F;local&#x2F;cuda&#x2F;lib64&#x2F;libcudnn*</code></pre><p>查看cudnn版本</p><pre class="language-none"><code class="language-none">cat &#x2F;usr&#x2F;local&#x2F;cuda&#x2F;include&#x2F;cudnn_version.h | grep CUDNN_MAJOR -A 2</code></pre><p>出现如下的信息，则为配置成功</p><pre class="language-bash" data-language="bash"><code class="language-bash">#define CUDNN_MAJOR 8#define CUDNN_MINOR 4#define CUDNN_PATCHLEVEL 0--#define CUDNN_VERSION (CUDNN_MAJOR * 1000 + CUDNN_MINOR * 100 + CUDNN_PATCHLEVEL)#endif &#x2F;* CUDNN_VERSION_H *&#x2F;</code></pre><h1 id="cuda卸载"><a href="#cuda卸载" class="headerlink" title="cuda卸载"></a>cuda卸载</h1><h2 id="linux-1"><a href="#linux-1" class="headerlink" title="linux"></a>linux</h2><p>详见<a href="https://blog.csdn.net/ziqibit/article/details/129935737">链接</a>与<a href="https://zhuanlan.zhihu.com/p/648709952">链接</a><br>如果需要换不同的版本，建议多版本并存，这里先不涉及，如果要彻底卸载，根据以下操作<br>权限不够前面加sudo，我这里用root进行安装</p><h3 id="方案一"><a href="#方案一" class="headerlink" title="方案一"></a>方案一</h3><ol><li>准备删除cuda<br><code>apt-get remove cuda</code></li><li>自动卸载<br><code>apt autoremove</code></li><li>删除其它的cuda<br>&#96;apt autoremove cuda*</li><li>删除下载安装包（也可以不删除）<br><code>rm /usr/local/my_cuda/cuda-repo-ubuntu2204-12-1-local_12.1.0-530.30.02-1_amd64.deb</code></li><li>查找包相关<br><code>dpkg -l |grep cuda</code></li><li>手动删除相关的包。否则再安装别的版本会失败<br><code>dpkg -P cuda-repo-ubuntu2204-12-1-local cuda-toolkit-12-1-config-common cuda-toolkit-12-config-common cuda-toolkit-config-common cuda-visual-tools-12-1</code><br>名字使用第5步中的</li></ol><h3 id="方案二"><a href="#方案二" class="headerlink" title="方案二"></a>方案二</h3><p>进入下面这个目录：</p><pre class="language-bash" data-language="bash"><code class="language-bash">cd &#x2F;usr&#x2F;local&#x2F;cuda-10.0&#x2F;bin</code></pre><p>在这个目录中，可以找到卸载程序，名为：<code>uninstall_cuda_10.0.pl</code></p><p>这里需要注意，如果版本大于10.0，则卸载程序的名字为：<code>cuda-uninstaller</code></p><p>执行卸载命令：</p><pre class="language-bash" data-language="bash"><code class="language-bash"># version &lt;&#x3D; 10.0sudo .&#x2F;uninstall_cuda_10.0.pl  # 10.0可替换为自己的版本号# version &gt; 10.0sudo .&#x2F;cuda-uninstaller</code></pre><p>如果完成卸载后，当前目录（&#x2F;usr&#x2F;local&#x2F;cuda-10.0）没有被删除，则证明还存在当时安装cuDNN时留下的文件</p><p>删除cuDNN（若没有安装Cudnn，可忽略此步骤）：</p><pre class="language-bash" data-language="bash"><code class="language-bash">sudo rm -rf &#x2F;usr&#x2F;local&#x2F;cuda-10.0  # 10.0可替换为自己的版本号</code></pre><p>综上，就彻底删掉了Cuda相关的文件</p><h2 id="windows-1"><a href="#windows-1" class="headerlink" title="windows"></a>windows</h2><ul><li>进入控制面板，将如下所示打勾的NVIDIA GeForce Experience，NVIDIA PhysX 系统软件，NVIDIA 图形驱动程序的保留，其他的NVIDIA标识全部双击卸载。</li><li>然后打开杀毒软件进行垃圾清理，将注册表删除即可；或者WIN+R 输入regedit，点击确定进入注册表编辑器，然后打开<code>HKEY-LOCAL-MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall</code>文件夹删掉NVIDIA的注册表。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> PATH </tag>
            
            <tag> cuda </tag>
            
            <tag> nvcc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用screen在SSH断开后保持程序运行</title>
      <link href="/2023/11/28/15.%20%E4%BD%BF%E7%94%A8screen%E5%9C%A8SSH%E6%96%AD%E5%BC%80%E5%90%8E%E4%BF%9D%E6%8C%81%E7%A8%8B%E5%BA%8F%E8%BF%90%E8%A1%8C/"/>
      <url>/2023/11/28/15.%20%E4%BD%BF%E7%94%A8screen%E5%9C%A8SSH%E6%96%AD%E5%BC%80%E5%90%8E%E4%BF%9D%E6%8C%81%E7%A8%8B%E5%BA%8F%E8%BF%90%E8%A1%8C/</url>
      
        <content type="html"><![CDATA[<hr><ul><li>本方案基于linux，采用screen保证程序在ssh断开后还能运行，且再次打开screen还可以看到运行记录</li><li>使用<code>nohup</code>也可，但要记住PID号</li></ul><hr><h1 id="安装screen工具（略过）"><a href="#安装screen工具（略过）" class="headerlink" title="安装screen工具（略过）"></a>安装screen工具（略过）</h1><pre class="language-none"><code class="language-none">sudo  apt-get  install screen</code></pre><h1 id="创建screen窗口"><a href="#创建screen窗口" class="headerlink" title="创建screen窗口"></a>创建screen窗口</h1><pre class="language-none"><code class="language-none">screen -S [$Name]</code></pre><p>此时会进入新的窗口，照常敲命令即可<br>同时按<strong>Ctrl</strong>+<strong>a</strong>+<strong>d</strong>键，就可以退出SSH登录，但不会影响screen程序的运行</p><h1 id="列出screen窗口名单"><a href="#列出screen窗口名单" class="headerlink" title="列出screen窗口名单"></a>列出screen窗口名单</h1><pre class="language-none"><code class="language-none">screen -ls</code></pre><h1 id="打开已有窗口"><a href="#打开已有窗口" class="headerlink" title="打开已有窗口"></a>打开已有窗口</h1><p>需要继续工作时，登录实例，然后执行如下命令，恢复会话即可</p><pre class="language-none"><code class="language-none">screen -r -d [$name]</code></pre><h1 id="关闭窗口"><a href="#关闭窗口" class="headerlink" title="关闭窗口"></a>关闭窗口</h1><pre class="language-none"><code class="language-none"># 如果在窗口中 exit# 如果不在窗口中（即窗口无法连接了） screen -X -S id(窗口id) quit</code></pre><h1 id="使用滚轮配置问题（略过）"><a href="#使用滚轮配置问题（略过）" class="headerlink" title="使用滚轮配置问题（略过）"></a>使用滚轮配置问题（略过）</h1><p>编辑一个文件</p><pre class="language-bash" data-language="bash"><code class="language-bash">vim ~&#x2F;.screenrc</code></pre><p>不用vim，用其他的编辑器也行，没有的话要创建这个文件，然后在里面输入以下内容</p><pre class="language-bash" data-language="bash"><code class="language-bash">termcapinfo xterm* ti@:te@</code></pre><p>之后随便打开任意一个screen创建的会话，就可以发现能够使用鼠标滚轮了</p>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> SSH </tag>
            
            <tag> 远程访问 </tag>
            
            <tag> xshell </tag>
            
            <tag> xftp </tag>
            
            <tag> screen </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>windows安装linux子系统</title>
      <link href="/2023/11/16/14.windows%E5%AE%89%E8%A3%85linux/"/>
      <url>/2023/11/16/14.windows%E5%AE%89%E8%A3%85linux/</url>
      
        <content type="html"><![CDATA[<h1 id="windows安装linux"><a href="#windows安装linux" class="headerlink" title="windows安装linux"></a>windows安装linux</h1><ul><li>详情可见<strong>官方文档</strong>：<a href="https://learn.microsoft.com/zh-cn/windows/wsl/install">如何使用 WSL 在 Windows 上安装 Linux</a>与<a href="https://learn.microsoft.com/zh-cn/windows/wsl/setup/environment#set-up-your-linux-username-and-password">设置 WSL 开发环境</a></li></ul><p>如果使用 <code>wsl --install -d Ubuntu</code> 安装 Ubuntu WSL 分发版失败，您可以尝试以下方法来解决问题：</p><ol><li><p><strong>检查系统要求</strong>：确保您的系统满足运行WSL的要求。WSL要求运行的Windows版本为Windows 10或更高版本，并且需要启用虚拟化功能。您可以在BIOS或UEFI设置中启用虚拟化。</p></li><li><p><strong>更新Windows</strong>：确保您的Windows操作系统已经更新到最新版本。有时，安装WSL之前需要安装操作系统更新。</p></li><li><p><strong>启用WSL功能</strong>：在 PowerShell 终端或命令提示符（CMD）中以管理员身份运行以下命令来启用WSL功能：</p><pre class="language-none"><code class="language-none">powershellCopy codedism.exe &#x2F;online &#x2F;enable-feature &#x2F;featurename:Microsoft-Windows-Subsystem-Linux &#x2F;all &#x2F;norestart</code></pre></li><li><p><strong>启用虚拟机平台功能</strong>：运行以下命令以启用虚拟机平台功能：</p><pre class="language-none"><code class="language-none">powershellCopy codedism.exe &#x2F;online &#x2F;enable-feature &#x2F;featurename:VirtualMachinePlatform &#x2F;all &#x2F;norestart</code></pre></li><li><p><strong>安装WSL 2运行时</strong>：根据您的Windows版本，可能需要手动安装WSL 2运行时。您可以在<a href="https://docs.microsoft.com/en-us/windows/wsl/install">Microsoft的官方文档</a>中找到适用于您版本的安装指南。</p></li><li><p><strong>重启计算机</strong>：完成上述步骤后，重新启动您的计算机，以确保所有更改生效。</p></li><li><p><strong>尝试安装Ubuntu</strong>：最后，再次运行 <code>wsl --install -d Ubuntu</code> 来尝试安装Ubuntu WSL 分发版。</p></li><li><p>使用<code>wsl --status</code>, <code>wsl -l</code>查看linux版本</p></li><li><p>使用<code>wsl --shutdown</code>来虚拟关机</p></li></ol><p>安装完后报错：WslRegisterDistribution failed with error: 0x800701bc<br>Error: 0x800701bc WSL 2 <a href="https://aka.ms/wsl2kernel">https://aka.ms/wsl2kernel</a><br>请参考：<a href="https://blog.csdn.net/qq_35812205/article/details/131363270">解决无法打开Microsoft store和WslRegisterDistribution failed with error: 0x800701bc问题_山顶夕景的博客-CSDN博客</a></p><p>更新wsl后安装成功<br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/windows%E5%AE%89%E8%A3%85linux-2.png" alt="windows安装linux-2"></p><h1 id="在pycharm中使用linux终端"><a href="#在pycharm中使用linux终端" class="headerlink" title="在pycharm中使用linux终端"></a>在pycharm中使用linux终端</h1><p><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/windows%E5%AE%89%E8%A3%85linux-1.png" alt="windows安装linux-1"><br>点击扩展，选择Ubuntu</p><p>cd到preprocess.sh所在的文件夹下，输入对应的命令即可</p><h1 id="Xshell-连接wsl"><a href="#Xshell-连接wsl" class="headerlink" title="Xshell 连接wsl"></a>Xshell 连接wsl</h1><h2 id="服务器本地配置"><a href="#服务器本地配置" class="headerlink" title="服务器本地配置"></a>服务器本地配置</h2><p>点击左下角的windows按钮, 在最近添加中点击刚安装的系统图标, 会有个初始化的过程, 之后输入用户名和密码, 就完成了.<br>通过<code>sudo apt update &amp;&amp; sudo apt upgrade -y</code>更新系统<br>通过<code>sudo apt-get update &amp;&amp; sudo apt-get upgrade</code>更新软件源<br>安装ssh服务<code>sudo apt autoremove --purge openssh-server -y &amp;&amp; sudo apt install openssh-server -y</code><br>编辑文件<code>vim /etc/ssh/sshd_config</code>, Windows和子系统共用端口, 修改端口</p><pre class="language-none"><code class="language-none"># 端口 Port 2222 UsePrivilegeSeparation no # 密码验证 PasswordAuthentication yes # 允许登陆的用户 AllowUsers name</code></pre><p><em><strong>重启服务<code>sudo service ssh --full-restart</code><br>生成key, <code>ssh-keygen -t rsa</code>一路回车.</strong></em></p><h2 id="连接"><a href="#连接" class="headerlink" title="连接"></a>连接</h2><p>在xshell中使用Alt + N创建新的连接会话, 主机改为127.0.0.1, 端口改为自己设置的端口.<br>点击左侧的用户身份验证, 方法使用Password, 用户名和密码为Ubuntu用户名密码, 点击连接.</p><h2 id="开机自启"><a href="#开机自启" class="headerlink" title="开机自启"></a>开机自启</h2><h2 id="方案一"><a href="#方案一" class="headerlink" title="方案一"></a>方案一</h2><p>Bash窗口不能关闭, 如果关闭了, 那么相当于系统关机.<br>可以使用windows自带的定时任务计划上添加开机启动Ubuntu ssh服务的任务。<br>搜索任务计划程序, 操作 –&gt; 创建基本任务<br>配置：<br>触发器: 当计算机启动时<br>操作: 启动程序<br>程序或脚本: C:\Windows\System32\bash.exe<br>参数为: -c \“sudo &#x2F;usr&#x2F;sbin&#x2F;sshd -D\”<br>选择<code>当单击“完成”是, 打开此任务属性的对话框</code>按钮，点击完成，打开属性页<br>在属性页选择”使用最高权限运行”，避免错误。</p><h2 id="方案二"><a href="#方案二" class="headerlink" title="方案二"></a>方案二</h2><ul><li>详情请见：<a href="https://blog.csdn.net/q4616756/article/details/131842814">Win11将WSL做SSH服务器</a><br>为linux添加ssh自启动<pre class="language-none"><code class="language-none">sudo apt install systemd #安装systemdsudo systemctl enable ssh #使用systemd实现ssh自启动</code></pre>使用<code>sudo service ssh status</code>查看ssh运行状态</li></ul><h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><pre class="language-none"><code class="language-none">sudo vi &#x2F;etc&#x2F;ssh&#x2F;sshd_config</code></pre><p>将下面三项设置成：</p><ul><li>Port 222</li><li>PermitRootLogin Yes</li><li>PasswordAuthentication Yes<pre class="language-none"><code class="language-none">sudo vim &#x2F;etc&#x2F;hosts.allow</code></pre>添加一行：sshd:ALL<br><strong>然后重启ssh服务：</strong><pre class="language-none"><code class="language-none">sudo service ssh --full-restart</code></pre>windows powershell命令:<pre class="language-none"><code class="language-none">Restart-Service sshd</code></pre></li></ul><p>在<code>C:/users/Appdata/Roaming/Microsoft/Windows/开始菜单/程序/startup</code>中，新建vbs文件，内容如下：</p><pre class="language-none"><code class="language-none">CreateObject(&quot;Wscript.Shell&quot;).run &quot;wsl -d Ubuntu -u root -e &#x2F;etc&#x2F;init.d&#x2F;ssh start&quot;,vbhidewscript.sleep 1000 * 10Set Shell&#x3D;CreateObject(&quot;Shell.Application&quot;)Shell.ShellExecute &quot;cmd.exe&quot;,&quot;&#x2F;c netsh interface portproxy add v4tov4 listenaddress&#x3D;0.0.0.0 listenport&#x3D;22 connectaddress&#x3D;wslhost connectport&#x3D;22&quot;,&quot;C:\Windows\System32\&quot;,&quot;runas&quot;,0</code></pre><p><strong>这里只用第一行即可</strong><br>其中第一行负责启动wsl同时开启ssh服务，vbhide可以使得启动的wsl在后台进行，不显示终端。</p><p>第二行需要进行一定的延时，其中10就是十秒，可以根据自己的机器情况进行修改，估计5秒就够了。延时是因为代码的运行很快，接下来就会运行cmd进行端口映射，但是当已经运行完netsh的时候wsl可能还没有启动，导致端口映射依然是上次关机时候的wsl的ip，所以需要延时几秒钟再执行。</p><p>第三、四行就是执行nesth的命令，将connectaddress后的ip地址用域名wslhost替换，‘runas’参数以管理员身份运行cmd，后面的参数0表示隐藏窗口后台执行。</p><p>但是，众所周知，每次以管理员身份执行cmd的时候，都会弹框让用户确定“是”，“否”。需要进一步隐藏。打开设置，在左上角搜索框搜索管理员，选择更改用户账户控制设置，然后拉到底</p><p>（可选）可额外添加docker自启动内容如下:</p><pre class="language-none"><code class="language-none">Set ws &#x3D; WScript.CreateObject(&quot;WScript.Shell&quot;)        ws.run &quot;wsl -d Ubuntu -u root &#x2F;etc&#x2F;init.wsl&quot;</code></pre><p>其中‘Ubuntu’为WSL2子系统的名字</p><h3 id="frp端口映射"><a href="#frp端口映射" class="headerlink" title="frp端口映射"></a>frp端口映射</h3><p>在<code>frpc.ini</code>中加入以下内容</p><pre class="language-none"><code class="language-none">[ssh2]type &#x3D; tcplocal_ip &#x3D; 127.0.0.1local_port &#x3D; 222remote_port &#x3D; 2222</code></pre><p>再在云端服务器添加相应端口安全规则即可，详见<a href="https://hotsaber.github.io/2023/10/10/13.%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/">内网穿透</a></p><h1 id="在wsl（子系统）中访问windows文件"><a href="#在wsl（子系统）中访问windows文件" class="headerlink" title="在wsl（子系统）中访问windows文件"></a>在wsl（子系统）中访问windows文件</h1><p><strong>只需要访问<code>mnt</code>文件即可</strong><br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/windows%E5%AE%89%E8%A3%85linux-3.png" alt="windows安装linux-3"><br>如图所示，在<code>mnt</code>文件中我们能看到windows系统C盘与D盘</p><h1 id="配置免密访问"><a href="#配置免密访问" class="headerlink" title="配置免密访问"></a>配置免密访问</h1><p>使用<code>ssh-keygen</code>在linux端生成公私钥对<br>在<code>/root/.ssh</code>下，新建<code>authorized_keys</code>文件，将pubkey复制进<code>authorized_keys</code>文件中，以回车相隔<br>在windows系统中，重启服务器</p><h1 id="windows如何使用FEMNIST数据集"><a href="#windows如何使用FEMNIST数据集" class="headerlink" title="windows如何使用FEMNIST数据集"></a>windows如何使用FEMNIST数据集</h1><p>项目代码：<a href="https://github.com/SMILELab-FL/FedLab-benchmarks/blob/master/fedlab_benchmarks/leaf/README_zh_cn.md">FedLab-benchmarks&#x2F;fedlab_benchmarks&#x2F;leaf&#x2F;README_zh_cn.md at master ·SMILELab-FL&#x2F;FedLab-benchmarks (github.com)</a></p><p>下载到本地后，你会发现需要linux系统来运行</p><h1 id="linux环境配置"><a href="#linux环境配置" class="headerlink" title="linux环境配置"></a>linux环境配置</h1><h2 id="安装解压工具与必备工具"><a href="#安装解压工具与必备工具" class="headerlink" title="安装解压工具与必备工具"></a>安装解压工具与必备工具</h2><pre class="language-none"><code class="language-none">sudo apt install zipsudo apt install build-essential</code></pre><h2 id="安装nvidia-tools"><a href="#安装nvidia-tools" class="headerlink" title="安装nvidia tools"></a>安装nvidia tools</h2><pre class="language-none"><code class="language-none">apt install nvidia-cuda-toolkit</code></pre><p>此项安装已包含cuda（疑似，待验证doge）</p><h2 id="安装python"><a href="#安装python" class="headerlink" title="安装python"></a>安装python</h2><ul><li>在跟<a href="https://www.bilibili.com/video/BV18p4y1h7Dr/?spm_id_from=333.999.0.0&vd_source=73162f668fdc494f53422288195ecea3">李沐课程</a>配置linux上的深度学习环境时，遇到python安装报错问题<pre class="language-none"><code class="language-none">E: Package &#39;python3.8&#39; has no installation candidate</code></pre>或<pre class="language-none"><code class="language-none">sudo apt install python-3.8 E: Unable to locate package python-3.8</code></pre></li><li>这里发现之前的源没有找到对应的python，这里添加新的，详见<a href="https://blog.csdn.net/qq_56895581/article/details/134131807">python3.8相关环境安装</a>：<pre class="language-none"><code class="language-none">sudo apt-get install software-properties-common</code></pre>或运行以下代码升级，详见<a href="https://blog.csdn.net/m0_69742286/article/details/133749645">帖子</a><pre class="language-none"><code class="language-none">sudo apt updatesudo apt install software-properties-common sudo add-apt-repository ppa:deadsnakes&#x2F;ppa </code></pre></li><li>再运行<code>sudo apt-get install python3.8</code>即可</li></ul><h2 id="安装conda"><a href="#安装conda" class="headerlink" title="安装conda"></a>安装conda</h2><ul><li>使用以下命令，或是自行下载将安装包拷贝进linux服务器<pre class="language-none"><code class="language-none">wget https:&#x2F;&#x2F;repo.anaconda.com&#x2F;archive&#x2F;Anaconda3-2023.09-0-Linux-x86_64.sh</code></pre>url可访问<a href="https://www.anaconda.com/download#downloads">anaconda官网</a>，找到安装包下载地址获得<br>使用<code>bash 文件名</code>安装，如<code>bash Anaconda3-2023.09-0-Linux-x86_64.sh</code></li><li>安装后提示<pre class="language-none"><code class="language-none">installation finished.Do you wish to update your shell profile to automatically initialize conda?This will activate conda on startup and change the command prompt when activated.If you&#39;d prefer that conda&#39;s base environment not be activated on startup,   run the following command when conda is activated:conda config --set auto_activate_base false #使用此命令控制base环境自启You can undo this by running &#96;conda init --reverse $SHELL&#96;? [yes|no]</code></pre></li><li>如无设置base环境自启动，可使用以下命令激活base环境<pre class="language-none"><code class="language-none">source activate</code></pre></li></ul><h2 id="安装cuda"><a href="#安装cuda" class="headerlink" title="安装cuda"></a>安装cuda</h2><p>访问<a href="https://developer.nvidia.com/cuda-toolkit-archive">cuda官网</a>，按服务器系统配置选择安装环境，按提示步骤安装即可<br>本教程使用以下安装代码：</p><pre class="language-none"><code class="language-none">wget https:&#x2F;&#x2F;developer.download.nvidia.com&#x2F;compute&#x2F;cuda&#x2F;12.3.1&#x2F;local_installers&#x2F;cuda_12.3.1_545.23.08_linux.runsudo sh cuda_12.3.1_545.23.08_linux.run</code></pre><p>如提示driver未安装，可换用以下命令：</p><pre class="language-none"><code class="language-none">sudo sh cuda_12.3.1_545.23.08_linux.run --silent --driver</code></pre><p>使用<code>nvcc -V</code>查看nvidia信息<br>使用以下命令启用linux中的<code>nvidia-smi</code>命令</p><pre class="language-none"><code class="language-none">cp &#x2F;usr&#x2F;lib&#x2F;wsl&#x2F;lib&#x2F;nvidia-smi &#x2F;usr&#x2F;bin&#x2F;nvidia-smichmod ogu+x &#x2F;usr&#x2F;bin&#x2F;nvidia-smi</code></pre><p>deb文件安装方式请参考<a href="https://docs.nvidia.com/deeplearning/cudnn/installation/linux.html#ubuntu-debian-local-installation">官方文档</a><br>更新你的环境变量，以确保系统可以找到正确的CUDA路径。这通常涉及到编辑<code>~/.bashrc</code>、<code>~/.bash_profile</code>或<code>/etc/profile</code>文件，并在其中添加或更新以下行：</p><p>bash</p><pre class="language-bash" data-language="bash"><code class="language-bash">export PATH&#x3D;&#x2F;usr&#x2F;local&#x2F;cuda&#x2F;bin:$PATHexport LD_LIBRARY_PATH&#x3D;&#x2F;usr&#x2F;local&#x2F;cuda&#x2F;lib64:$LD_LIBRARY_PATH</code></pre><p>然后，你需要运行<code>source ~/.bashrc</code>（或你编辑的相应文件）来使更改生效。</p><h2 id="安装cudnn"><a href="#安装cudnn" class="headerlink" title="安装cudnn"></a>安装cudnn</h2><h3 id="windows"><a href="#windows" class="headerlink" title="windows"></a>windows</h3><p>CUDA需要配合cudnn才能正常工作，将cudnn的四个文件（夹），复制到CUDA的安装路径即可，即CUDA文件夹。<br>往系统环境变量中的 path 添加如下路径（<strong>根据自己的路径进行修改</strong>）</p><pre class="language-none"><code class="language-none">C:\Program Files\NVIDIA\CUDA\binC:\Program Files\NVIDIA\CUDA\includeC:\Program Files\NVIDIA\CUDA\libC:\Program Files\NVIDIA\CUDA\libnvvp</code></pre><p>检验：</p><p>配置完成后，我们可以验证是否配置成功，主要使用CUDA内置的<code>deviceQuery.exe</code> 和 <code>bandwidthTest.exe</code>：<br>首先win+R启动cmd，cd到<strong>安装目录</strong>下的 <code>…\extras\demo_suite</code>,然后分别执行<code>.\bandwidthTest.exe</code>和<code>.\deviceQuery.exe</code>,应该得到下图.</p><pre class="language-none"><code class="language-none">cd C:\Program Files\NVIDIA\CUDA\extras\demo_suite .\bandwidthTest.exe .\deviceQuery.exe</code></pre><h3 id="linux"><a href="#linux" class="headerlink" title="linux"></a>linux</h3><p><a href="https://docs.nvidia.com/deeplearning/cudnn/install-guide/index.html">官方教程</a>与<a href="https://gist.github.com/denguir/b21aa66ae7fb1089655dd9de8351a202">Github参考</a><br>安装linus解压工具</p><pre class="language-none"><code class="language-none">sudo apt-get install zlib1g</code></pre><p>打开<a href="https://developer.nvidia.com/rdp/cudnn-archive">下载链接</a>，选择相应的版本并下载。选择方法可参考<a href="%5Bhttps://blog.csdn.net/MumuziD/article/details/118760650%5D(https://blog.csdn.net/MumuziD/article/details/118760650)">链接</a>，，建议直接选择<code>cuDNN Library for Linux (x86_64)</code><br>进入cudnn压缩包所在的文件夹，解压文件</p><pre class="language-none"><code class="language-none">tar -xvf [$文件名]</code></pre><p>将文件拷贝到相应cuda目录下</p><pre class="language-none"><code class="language-none">sudo cp cudnn-*-archive&#x2F;include&#x2F;cudnn*.h &#x2F;usr&#x2F;local&#x2F;cuda&#x2F;include sudo cp -P cudnn-*-archive&#x2F;lib&#x2F;libcudnn* &#x2F;usr&#x2F;local&#x2F;cuda&#x2F;lib64 sudo chmod a+r &#x2F;usr&#x2F;local&#x2F;cuda&#x2F;include&#x2F;cudnn*.h &#x2F;usr&#x2F;local&#x2F;cuda&#x2F;lib64&#x2F;libcudnn*</code></pre><p>查看cudnn版本</p><pre class="language-none"><code class="language-none">cat &#x2F;usr&#x2F;local&#x2F;cuda&#x2F;include&#x2F;cudnn_version.h | grep CUDNN_MAJOR -A 2</code></pre><p>出现如下的信息，则为配置成功</p><pre class="language-bash" data-language="bash"><code class="language-bash">#define CUDNN_MAJOR 8#define CUDNN_MINOR 4#define CUDNN_PATCHLEVEL 0--#define CUDNN_VERSION (CUDNN_MAJOR * 1000 + CUDNN_MINOR * 100 + CUDNN_PATCHLEVEL)#endif &#x2F;* CUDNN_VERSION_H *&#x2F;</code></pre><p>或使用deb文件本地安装：</p><pre class="language-bash" data-language="bash"><code class="language-bash">sudo apt install .&#x2F;&lt;filename.deb&gt;sudo cp &#x2F;var&#x2F;cudnn-&lt;something&gt;.gpg &#x2F;usr&#x2F;share&#x2F;keyrings&#x2F;</code></pre><p>My cuDNN version is 8, adapt the following to your version:</p><pre class="language-bash" data-language="bash"><code class="language-bash">sudo apt updatesudo apt install libcudnn8sudo apt install libcudnn8-devsudo apt install libcudnn8-samples</code></pre><h2 id="配置conda虚拟环境"><a href="#配置conda虚拟环境" class="headerlink" title="配置conda虚拟环境"></a>配置conda虚拟环境</h2><ul><li>在安装完成anaconda后，使用<code>bash</code>进入anaconda命令行</li><li>使用<code>conda create --name 名字 python=3.8</code>新建一个虚拟环境</li><li>使用<code>conda env list</code>查看虚拟环境列表</li><li>使用<code>conda activate 名字</code>进入一个虚拟环境</li><li>安装相应包，使用镜像加速<pre class="language-none"><code class="language-none">pip install jupyter d2l torch torchvision -i https:&#x2F;&#x2F;pypi.tuna.tsinghua.edu.cn&#x2F;simple</code></pre></li><li>其他包就和在本地命令行安装一样，但<strong>安装包过大的话，建议采用离线安装。可以用移动硬盘到现教407线下拷贝</strong><br><strong>PS</strong>:<strong>pytorch</strong>安装与离线安装请见<a href="https://hotsaber.github.io/2023/09/28/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0-1%20%E6%9C%AC%E5%9C%B0%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2/">深度学习：本地环境部署</a>中的<code>安装Pytorch</code>-<code>本地安装</code></li></ul>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> SSH </tag>
            
            <tag> 远程访问 </tag>
            
            <tag> 多终端 </tag>
            
            <tag> xshell </tag>
            
            <tag> xftp </tag>
            
            <tag> 云 </tag>
            
            <tag> frp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>内网穿透</title>
      <link href="/2023/10/10/13.%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/"/>
      <url>/2023/10/10/13.%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/</url>
      
        <content type="html"><![CDATA[<hr><p>1.用于在公开网络环境访问特定局域网环境下的节点<br>2.需要有一个具有公网IP的服务器作为中转节点，可参考<a href="https://account.aliyun.com/">阿里云</a>、<a href="https://cloud.tencent.com/">腾讯云</a>，这里我们选用腾讯云服务器<br>3.需要使用<code>frp</code>，详情可见<a href="https://github.com/fatedier/frp">Github项目</a><br>4.可以使用<code>xshell</code>、<code>xftp</code>进行远程管理，软件下载见<a href="https://www.xshell.com/zh/free-for-home-school/">官网</a><strong>下载免费的教育版即可</strong><br>5.原参考教程可见<a href="https://www.bilibili.com/video/BV13L411w7XU/?spm_id_from=333.999.top_right_bar_window_history.content.click&vd_source=73162f668fdc494f53422288195ecea3">中之的视频</a></p><hr><h1 id="配置frp文件"><a href="#配置frp文件" class="headerlink" title="配置frp文件"></a>配置frp文件</h1><ul><li>分别下载frp客户端<code>frpc</code>与frp服务端<code>frps</code>, windows 64位下载 <code>windows_amd64</code>，linux下载<code>linux_amd64</code></li><li><strong>客户端即局域网中需要穿透到外网的节点，服务端即为作为中转的云服务器</strong></li></ul><h2 id="本地配置"><a href="#本地配置" class="headerlink" title="本地配置"></a>本地配置</h2><p>可以先在本地上把配置⽂件编辑好，再上传到Windows PC和Linux</p><ul><li>配置服务端文件<code>frpc.ini</code>：<pre class="language-none"><code class="language-none">[common]bind_port &#x3D; 7000vhost_http_port &#x3D; 8080</code></pre></li><li>其中<code>bind_port</code>是SSH用端口，<code>vhost_http_port</code>是用来映射Jupyter notebook的端口，完整的参数可以参考<code>frps_full.ini</code> ，这⾥不作展开；</li><li>配置客户端文件<code>frpc.ini</code>:<pre class="language-none"><code class="language-none">[common]server_addr &#x3D; [cloud_ip]server_port &#x3D; 7000[ssh]type &#x3D; tcplocal_ip &#x3D; 127.0.0.1local_port &#x3D; 22remote_port &#x3D; 6000[web]type &#x3D; httplocal_port &#x3D; 8888custom_domains &#x3D; [cloud_ip]</code></pre></li><li>主要修改了<code>server_addr</code>为我们的云服务器IP, 并配置了两个映射规则，分别是SSH与web，用于SSH远程访问与映射jupyter notebook。</li><li>将frp分别上传到服务器和客户端（可以把没⽤的⽂件删掉，服务端只保留<code>frps</code>相关的文件，客户端只保留<code>frpc</code>相关的文件）</li></ul><h1 id="中转服务端设置"><a href="#中转服务端设置" class="headerlink" title="中转服务端设置"></a>中转服务端设置</h1><ul><li>在服务器防火墙开启配置文件中的端口<br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/13.%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F-2.png" alt="13.内网穿透-2"><br>不确定协议类型可以两个都加上</li></ul><h1 id="启动frp进程"><a href="#启动frp进程" class="headerlink" title="启动frp进程"></a>启动frp进程</h1><p>先使用命令符加载进frp文件侠下</p><ul><li>服务端<pre class="language-none"><code class="language-none">.&#x2F;frps -c .&#x2F;frps.ini</code></pre><strong>出现权限问题可使用<code>chmod 777 ./frps</code>提升<code>frps</code>文件权限</strong></li><li>客户端<pre class="language-none"><code class="language-none">frpc -c frpc.ini</code></pre> linux 命令：<pre class="language-none"><code class="language-none">ls #列出当前目录的所有文件和子目录名称CD #用于更改当前工作目录 cd ..为返回上一级pwd #用于显示当前所在的工作目录的全路径名称</code></pre>windows 命令：<pre class="language-none"><code class="language-none">dir #列出当前目录的所有文件和子目录名称CD #用于更改当前工作目录 cd ..为返回上一级</code></pre></li><li>在其他电脑上使用ssh测试：<br>windows命令行：<pre class="language-none"><code class="language-none">ssh username@cloud_ip -p portnumber</code></pre>mac命令行：<pre class="language-none"><code class="language-none">ssh -p portnumber username@cloud_ip</code></pre>xshell：<pre class="language-none"><code class="language-none">ssh username@cloud_ip portumber</code></pre></li></ul><h1 id="自启动配置"><a href="#自启动配置" class="headerlink" title="自启动配置"></a>自启动配置</h1><h2 id="云端linux"><a href="#云端linux" class="headerlink" title="云端linux"></a>云端linux</h2><ul><li>确保安装了<code>systemd</code><pre class="language-none"><code class="language-none"># yumyum install systemd# aptapt install systemd</code></pre></li><li>使用文本编辑器，如 <code>vim</code> 创建并编辑 <code>frps.service</code> 文件。此处的文件名称决定了服务的名称。<pre class="language-none"><code class="language-none">vim &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;frps.service</code></pre>或<pre class="language-none"><code class="language-none">vim &#x2F;lib&#x2F;systemd&#x2F;system&#x2F;frps.service</code></pre></li><li><strong>ps:</strong> 1. <code>/lib/systemd/system/</code>（或 <code>/usr/lib/systemd/system/</code>）<ul><li>系统级服务文件存放位置</li><li>通常由软件包管理器自动安装到这里</li><li><strong>不建议直接修改这里的文件</strong>（系统更新可能覆盖）<br> 2.<code>/etc/systemd/system/</code></li><li>用户自定义服务文件存放位置</li><li>优先级高于 <code>/lib/systemd/system/</code></li><li>适合用户自己创建的服务</li></ul></li><li>写入以下内容：<pre class="language-none"><code class="language-none">[Unit]Description&#x3D;Frp Server ServiceAfter&#x3D;network.target[Service]Type&#x3D;simpleUser&#x3D;root#此处用户名需要修改Restart&#x3D;on-failureRestartSec&#x3D;5sExecStart&#x3D;&#x2F;root&#x2F;frp_0.51.3_linux_amd64&#x2F;frps -c &#x2F;root&#x2F;frp_0.51.3_linux_amd64&#x2F;frps.ini#此处文件路径需要修改LimitNOFILE&#x3D;1048576[Install]WantedBy&#x3D;multi-user.target</code></pre><strong>路径要使用绝对路径，可以通过<code>pwd</code>来查看路径</strong></li><li>使用以下命令，实现开机自启动：<pre class="language-none"><code class="language-none">systemctl daemon-reload  systemctl enable frps  systemctl start frps  systemctl status frps</code></pre>显示以下内容则表示自启成功：<br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/13.%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F-3.png" alt="13.内网穿透-3"><br>命令功能参考如下：<pre class="language-none"><code class="language-none">systemctl start frps #启动frpssystemctl enable frps #打开自启动systemctl disable frps #关闭自启动systemctl restart frps #重启进程systemctl stop frps #停止进程systemctl status frps #查看进程日志</code></pre></li></ul><h2 id="linux客户端"><a href="#linux客户端" class="headerlink" title="linux客户端"></a>linux客户端</h2><p> 同上，使用<code>vim /lib/systemd/system/frpc.service</code>创建并编辑 <code>frpc.service</code> 文件。写入以下内容：</p><pre class="language-none"><code class="language-none">[Unit]Description&#x3D;Frp cliant ServiceAfter&#x3D;network.target[Service]Type&#x3D;simpleUser&#x3D;ps#此处用户名需要修改Restart&#x3D;alwaysRestartSec&#x3D;5ExecStart&#x3D;&#x2F;home&#x2F;ps&#x2F;tools&#x2F;frp_0.51.3_linux_amd64&#x2F;frpc -c &#x2F;home&#x2F;ps&#x2F;tools&#x2F;frp_0.51.3_linux_amd64&#x2F;frpc.ini#此处文件路径需要修改LimitNOFILE&#x3D;1048576[Install]WantedBy&#x3D;multi-user.target</code></pre><p><strong>路径要使用绝对路径，可以通过<code>pwd</code>来查看路径</strong>，并使用<code>systemctl enable frps</code>打开自启动</p><h2 id="windows客户端"><a href="#windows客户端" class="headerlink" title="windows客户端"></a>windows客户端</h2><ul><li>在<code>frps</code>文件中新建批处理文件<code>autostart.bat</code>文件：<pre class="language-none"><code class="language-none">@echo offchcp 65001title 内网穿透_不要关闭此窗口！！！echo ---------------------分割线-----------------echo 不要关闭此窗口！！！ echo 不要关闭此窗口！！！echo 不要关闭此窗口！！！echo ---------------------分割线-----------------if not defined TAG (set TAG&#x3D;1start wt -p &quot;cmd&quot; %0 #要确保安装了windows terminal，如果没有安装，可以在Microsoft store中安装exit):homefrpc -c frpc.inigoto home #为了崩溃或者异常后可以重启</code></pre></li><li>创建<code>autostart.bat</code>的快捷⽅式</li><li>打开 <code>C:\Users\username\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup\</code>，将快捷⽅式粘贴到进去</li><li>这个⽅法在每次PC开机时，就会弹出Windows Terminal的窗⼝，可能有点碍事，但你可以直接看到frpc的运⾏状态</li><li>如果你暂时不需要启动frpc，直接Ctrl + C终⽌即可，然后需要运⾏的时候再去⼿动运⾏ autostart.bat 即可</li><li>使用<code>shutdown /r /t 0</code>重启windows服务器</li></ul><h1 id="jupyter-notebook配置"><a href="#jupyter-notebook配置" class="headerlink" title="jupyter notebook配置"></a>jupyter notebook配置</h1><p>详情可见<a href="https://bingqiangzhou.github.io/2020/06/18/DailyJungle-FrpAndJupyterNotebookRemoteConfig.html">frp实现内网穿透以及配置Jupyter Notebook远程连接</a>与<a href="https://blog.csdn.net/WeDon_t/article/details/112982371">使用frp穿透远程访问Jupyter Notebook方法</a></p><h2 id="生成nootbook配置文件"><a href="#生成nootbook配置文件" class="headerlink" title="生成nootbook配置文件"></a>生成nootbook配置文件</h2><p>执行以下命令，会在用户目录下生成的配置文件<code>~/.jupyter/jupyter_notebook_config.py</code>，之后在这个文件中再进行配置。</p><pre class="language-none"><code class="language-none">jupyter notebook --generate-config</code></pre><h2 id="详细配置设置"><a href="#详细配置设置" class="headerlink" title="详细配置设置"></a>详细配置设置</h2><ol><li>进入<code>python</code>环境：<pre class="language-none"><code class="language-none">from notebook.auth import passwdpasswd()#设置自己的密码，例如123#然后两次输入确认生成加密字符串#一定保留好加密字符串</code></pre></li><li>对<code>~/.jupyter/jupyter_notebook_config.py</code>进行配置允许访问：<pre class="language-none"><code class="language-none">c.NotebookApp.allow_remote_access &#x3D; True  #允许远程访问c.NotebookApp.allow_root &#x3D; True          #允许root访问c.NotebookApp.ip&#x3D;&#39;*&#39;                     # 这一项为noteboook运行所占用的IPc.NotebookApp.password &#x3D; &#39;上面复制的加密字符串&#39;  c.NotebookApp.open_browser &#x3D; False       # 禁止自动打开浏览器  c.NotebookApp.port &#x3D;8888                 # 端口c.NotebookApp.notebook_dir &#x3D; &#39;设置Notebook启动进入的目录&#39; </code></pre><strong>注意：如果用frp做内网穿透的话，这里的端口需要对应上面frp客户端web服务配置的端口号，tensorboard可视化等等其他web服务也是一样</strong></li><li>配置完成，重启notebook即可<br>使用<code>nohup</code>命令后台运行jupyter notebook，并将输出的内容追加的内容输出到<code>jupyter.out</code>文件中，同时将错误信息也输出到文件中。<pre class="language-none"><code class="language-none">nohup jupyter notebook &gt;&gt;jupyter.out 2&gt;&amp;1 &amp;</code></pre></li><li>使用<code>frp</code>配置中的云服务器IP+端口号即可以远程访问</li></ol><h1 id="多个-SSH-服务复用同一端口"><a href="#多个-SSH-服务复用同一端口" class="headerlink" title="多个 SSH 服务复用同一端口"></a>多个 SSH 服务复用同一端口</h1><p>修改不同实例名即可</p><pre class="language-none"><code class="language-none">[ssh3]#修改这里的实例名type &#x3D; tcplocal_ip &#x3D; 127.0.0.1local_port &#x3D; 22remote_port &#x3D; 2333</code></pre><p>由于云主机的frp服务器端口是开放的，任意的frp客户端都可以随意在服务器注册端口映射，这样子在公网上及其不安全，所以建议要</p><p>默认情况下只要知道 FRP 服务端开放的端口，任意 FRP 客户端都可以随意在服务端上注册端口映射，这样对于在公网上的 FRP 服务来说显然不太安全。FRP 提供了身份验证机制来提高 FRP 服务端的安全性。<br>可以使用token加强验证。详见<a href="https://gofrp.org/zh-cn/docs/examples/stcp/">frp帮助文档</a></p><pre class="language-none"><code class="language-none">#在common中加入以下参数token &#x3D; [密码] #在frps与frpc的common中都加入以下参数</code></pre><h1 id="frp配置实现转发多个http站点"><a href="#frp配置实现转发多个http站点" class="headerlink" title="frp配置实现转发多个http站点"></a>frp配置实现转发多个http站点</h1><p>将新加的[web]项type改为tcp，后面也不用加域名或者ip。<br>frp会直接将其当作tcp数据包处理，只处理到了传输层(tcp)，而没有到<a href="https://so.csdn.net/so/search?q=%E5%BA%94%E7%94%A8%E5%B1%82&spm=1001.2101.3001.7020">应用层</a>(http)。<br>配置如下：</p><pre class="language-none"><code class="language-none">[web]type &#x3D; httplocal_port &#x3D; 8501remote_port &#x3D; 8080custom_domains &#x3D; 122.51.109.45[web2]type &#x3D; tcplocal_ip &#x3D; 127.0.0.1local_port &#x3D; 9995remote_port &#x3D; 9995[web3]type &#x3D; tcplocal_ip &#x3D; 127.0.0.1local_port &#x3D; 8502remote_port &#x3D; 8081</code></pre>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> SSH </tag>
            
            <tag> 远程访问 </tag>
            
            <tag> 多终端 </tag>
            
            <tag> xshell </tag>
            
            <tag> xftp </tag>
            
            <tag> 云 </tag>
            
            <tag> frp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用SSH远程访问</title>
      <link href="/2023/10/10/12.%E4%BD%BF%E7%94%A8SSH%E8%BF%9C%E7%A8%8B%E8%AE%BF%E9%97%AE/"/>
      <url>/2023/10/10/12.%E4%BD%BF%E7%94%A8SSH%E8%BF%9C%E7%A8%8B%E8%AE%BF%E9%97%AE/</url>
      
        <content type="html"><![CDATA[<hr><ol><li>可以使用<code>xshell</code>、<code>xftp</code>进行远程管理，软件下载见<a href="https://www.xshell.com/zh/free-for-home-school/">官网</a><strong>下载免费的教育版即可</strong></li><li>原参考教程可见<a href="https://www.bilibili.com/video/BV13L411w7XU/?spm_id_from=333.999.top_right_bar_window_history.content.click&vd_source=73162f668fdc494f53422288195ecea3">中之的视频</a></li><li>云操作可以参考<a href="https://cloud.tencent.com/document/product/1207/44578">腾讯云操作指南</a></li><li><a href="https://cloud.tencent.com/document/product/1207/44569#ubuntu-.E7.B3.BB.E7.BB.9F.E5.A6.82.E4.BD.95.E4.BD.BF.E7.94.A8-root-.E7.94.A8.E6.88.B7.E7.99.BB.E5.BD.95.E5.AE.9E.E4.BE.8B.EF.BC.9F">Ubuntu 系统如何使用 root 用户登录实例</a></li></ol><hr><h1 id="局域网访问"><a href="#局域网访问" class="headerlink" title="局域网访问"></a>局域网访问</h1><h2 id="为windows开启SSH"><a href="#为windows开启SSH" class="headerlink" title="为windows开启SSH"></a>为windows开启SSH</h2><ul><li>设置 &gt; 搜索“添加可选功能” &gt; 添加功能 &gt; 安装OpenSSH客户端</li><li>可以查看ssh的版本来验证是否安装成功：<pre class="language-none"><code class="language-none">ssh -V</code></pre></li><li>Win+S搜索“计算机管理”，在“服务”中找到<code>OpenSSH Authentication Agent</code>和<code>OpenSSH SSH Server</code>，将启动类型 改为“⾃动”，并分别启动服务</li><li>检查两项服务的运⾏状态：<pre class="language-none"><code class="language-none">Get-Service -Name *ssh*</code></pre>若显示<pre class="language-none"><code class="language-none">Status           Name                DisplayName------           ----                ----------- Running         ssh-agent            OpenSSH Authentication Agent Running         sshd                 OpenSSH SSH Server</code></pre>则表示两项服务已经开启成功</li><li>查看SSH服务器是否已经开始监听默认的22号端⼝：<pre class="language-none"><code class="language-none">netstat -an | findstr :22</code></pre>应显示<pre class="language-none"><code class="language-none">TCP                   0.0.0.0:22                 0.0.0.0:0                   LISTENING  TCP                   [::]:22                    [::]:0                      LISTENING</code></pre></li><li>通过<code>ipconfig</code>查询PC的<strong>内网IP地址</strong>，这个其他局域网中的节点奖通过此IP地址访问。</li></ul><h2 id="使用命令行连接"><a href="#使用命令行连接" class="headerlink" title="使用命令行连接"></a>使用命令行连接</h2><ul><li>**要确保访问与被访问节点都已安装并运行SSH服务</li><li>可以运行命令提示符运行以下命令连接目标节点<pre class="language-none"><code class="language-none">ssh username@ip</code></pre>注意： Windows 10下， username 应为登陆的微软账号，运⾏该命令后，要输⼊对应微软账户的密码。<br>第⼀次连接会弹出以下内容：<pre class="language-none"><code class="language-none">The authenticity of host &#39;centos (101.xxx.xxx.xxx)&#39; can&#39;t be established.  ED25519 key fingerprint is SHA256:ZakYgdQayDyXBudJjNDUsfJgTJRz92+HKT5nqP2ckdY.  This key is not known by any other names  Are you sure you want to continue connecting (yes&#x2F;no&#x2F;[fingerprint])? yes  Warning: Permanently added &#39;centos&#39; (ED25519) to the list of known hosts.</code></pre>之后便会将公钥保存在 &#x2F;Users&#x2F;username&#x2F;.ssh&#x2F;known_hosts 中。<br>连接到Linux服务器的⽅法类似。</li></ul><h2 id="使用公私钥免秘连接"><a href="#使用公私钥免秘连接" class="headerlink" title="使用公私钥免秘连接"></a>使用公私钥免秘连接</h2><h3 id="创建本地公私钥"><a href="#创建本地公私钥" class="headerlink" title="创建本地公私钥"></a>创建本地公私钥</h3><ul><li>在本地创建公钥和私钥(一路Enter即可，建议使用rsa)，如在GITHUB中生成并配置过，用已有的公私钥即可<pre class="language-none"><code class="language-none">ssh-keygen -t rsa</code></pre></li><li>可以检查 ~&#x2F;.ssh ⽬录⽣成的公钥和私钥：<pre class="language-none"><code class="language-none">ls ~&#x2F;.ssh</code></pre></li><li>将公钥上传到Linux服务器：（无云端可跳过）<pre class="language-none"><code class="language-none">ssh-copy-id -i ~&#x2F;.ssh&#x2F;id_rsa.pub username@ip</code></pre><strong>注意私钥一定不要泄露</strong></li><li>公私钥存储在<code>C:\Users\username\.ssh</code>目录下，其中id_rsa为私钥，id_rsa.pub为公钥</li></ul><h3 id="被访问端配置"><a href="#被访问端配置" class="headerlink" title="被访问端配置"></a>被访问端配置</h3><ul><li>使用文档打开<code>C:\Users\username\.ssh\authorized_keys</code>将公钥内容全部添加进文件中，当有多个公钥时，使用回车分隔，每行一个公钥</li><li>修改 <code>C:\ProgramData\ssh\sshd_config</code>：</li><li>确保以下三行没有注释：<pre class="language-none"><code class="language-none">PubkeyAuthentication yes  AuthorizedKeysFile .ssh&#x2F;authorized_keys  PasswordAuthentication no</code></pre></li><li>确保以下两行被注释 <pre class="language-none"><code class="language-none">#Match Group administrators  # AuthorizedKeysFile  </code></pre></li><li>使用<code>Restart-Service sshd </code>重启sshd服务，若失败则⼿动在“计算机管理” &gt; “服务”中重启OpenSSH SSH<br>Server</li><li>在访问端测试免密登陆</li></ul><h3 id="使用xshell与xftp进行远程访问"><a href="#使用xshell与xftp进行远程访问" class="headerlink" title="使用xshell与xftp进行远程访问"></a>使用xshell与xftp进行远程访问</h3><p><strong>一定是在已配置好双方SSH服务的情况下使用</strong></p><ul><li><a href="https://www.xshell.com/zh/free-for-home-school/">下载地址</a><strong>下载教育免费版</strong></li></ul><ol><li>新建会话<br> <img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/12.%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F-1.png" alt="12.内网穿透-1"></li><li>名称自拟，主机栏填写被访问节点的局域网IP，端口号保持默认22<br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/12.%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F-2.png" alt="12.内网穿透-2"></li><li>开启会话</li><li>输入用户名</li></ol><ul><li><strong>此用户名为被访问节点中的用户名，如windows中的Administrator，linux中的root，密码为windows中对应的登录密码，如未设置则无法用密码登录</strong> <img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/12.%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F-4.png" alt="12.内网穿透-4"></li><li>如果已在被访问节点将本机公钥配置到了<code>~/.ssh/authorized_keys</code>文件中，可以选取本地私钥<code>~/.ssh/id_rsa</code>，直接免密访问<br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/12.%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F-3.png" alt="12.内网穿透-3"></li><li><code>xftp</code>配置与连接同理</li><li>在<code>xshel</code>与<code>xftp</code>中，启动会话后都可以使用当前会话连接快速唤醒对方，以便使用<br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/12.%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F-5.png" alt="12.内网穿透-5"><br><strong>在访问被映射到外网端口的服务器时，只是IP与端口号有相应变化</strong></li></ul><h3 id="xftp出现中文乱码情况"><a href="#xftp出现中文乱码情况" class="headerlink" title="xftp出现中文乱码情况"></a>xftp出现中文乱码情况</h3><ul><li>出现中文乱码是因为当前会话的编码选择错误</li><li>需要修改当前会话选项中的编码为<code>Unicode(UTF-8)</code>,如下图所示：<br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/12.%E4%BD%BF%E7%94%A8SSH%E8%BF%9C%E7%A8%8B%E8%AE%BF%E9%97%AE-1.png" alt="12.使用SSH远程访问-1"></li></ul>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SSH </tag>
            
            <tag> 远程访问 </tag>
            
            <tag> 多终端 </tag>
            
            <tag> xshell </tag>
            
            <tag> xftp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>深度学习：本地环境部署</title>
      <link href="/2023/09/28/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0-1%20%E6%9C%AC%E5%9C%B0%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2/"/>
      <url>/2023/09/28/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0-1%20%E6%9C%AC%E5%9C%B0%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<hr><ol><li>云端环境配置请移步<a href="https://space.bilibili.com/1567748478/channel/seriesdetail?sid=358497">李沐课程</a></li><li>本地环境配置<a href="https://www.zhihu.com/zvideo/1363284223420436480">原视频</a></li></ol><hr><h1 id="安装python"><a href="#安装python" class="headerlink" title="安装python"></a>安装python</h1><ul><li>anaconda安装过程中可提供python安装，如果确定安装anaconda可以直接跳到下步</li><li>在<a href="https://www.python.org/downloads/">python官网</a>下载pythong安装包，安装过程基本使用默认选项</li><li>需要额外勾选<code>Add Python 3.x to PATH</code>等类似选项<br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0-1%20%E6%9C%AC%E5%9C%B0%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2-1.png" alt="深度学习-1 本地环境部署-1"></li></ul><h1 id="安装anaconda"><a href="#安装anaconda" class="headerlink" title="安装anaconda"></a>安装anaconda</h1><ul><li>在<a href="https://www.anaconda.com/download">anaconda官网</a>下载anaconda安装包，安装过程基本使用默认选项<br><strong>如果未安装python，可以在anaconda安装过程中安装对应版本的python</strong></li><li>在anaconda powrshell中使用<code>python --version</code>查看python版本，使用<code>conda -V</code>查看conda版本<br><strong>注意最好在安装时勾选添加conda的path进系统环境变量</strong></li></ul><h1 id="安装CUDA"><a href="#安装CUDA" class="headerlink" title="安装CUDA"></a>安装CUDA</h1><ul><li>在<a href="https://developer.nvidia.com/cuda-toolkit-archive">CUDA官网</a>下载相应CUDA安装包，对应版本选择大致如下，安装过程基本使用默认选项<img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0-1%20%E6%9C%AC%E5%9C%B0%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2-2.png" alt="深度学习-1 本地环境部署-2"></li><li>在CMD中使用命令<code>nvidia-smi</code>查看显卡最高兼容的CUDA版本<br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0-1%20%E6%9C%AC%E5%9C%B0%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2-3.png" alt="深度学习-1 本地环境部署-3"></li><li>使用<code>nvcc -V</code>查看现安装的CUDA版本</li></ul><h1 id="安装cudnn"><a href="#安装cudnn" class="headerlink" title="安装cudnn"></a>安装cudnn</h1><h2 id="windows"><a href="#windows" class="headerlink" title="windows"></a>windows</h2><p>CUDA需要配合cudnn才能正常工作，将cudnn的四个文件（夹），复制到CUDA的安装路径即可，即CUDA文件夹。<br>往系统环境变量中的 path 添加如下路径（<strong>根据自己的路径进行修改</strong>）</p><pre class="language-none"><code class="language-none">C:\Program Files\NVIDIA\CUDA\binC:\Program Files\NVIDIA\CUDA\includeC:\Program Files\NVIDIA\CUDA\libC:\Program Files\NVIDIA\CUDA\libnvvp</code></pre><p>检验：</p><p>配置完成后，我们可以验证是否配置成功，主要使用CUDA内置的<code>deviceQuery.exe</code> 和 <code>bandwidthTest.exe</code>：<br>首先win+R启动cmd，cd到<strong>安装目录</strong>下的 <code>…\extras\demo_suite</code>,然后分别执行<code>.\bandwidthTest.exe</code>和<code>.\deviceQuery.exe</code>,应该得到下图.</p><pre class="language-none"><code class="language-none">cd C:\Program Files\NVIDIA\CUDA\extras\demo_suite .\bandwidthTest.exe .\deviceQuery.exe</code></pre><h2 id="linux"><a href="#linux" class="headerlink" title="linux"></a>linux</h2><p><a href="https://docs.nvidia.com/deeplearning/cudnn/latest/installation/linux.html#package-manager-installation">官方教程</a>与<a href="https://blog.csdn.net/JianJuly/article/details/102793103">CSDN参考</a><br>安装linus解压工具</p><pre class="language-none"><code class="language-none">sudo apt-get install zlib1g</code></pre><p>打开<a href="https://developer.nvidia.com/rdp/cudnn-archive">下载链接</a>，选择相应的版本并下载。选择方法可参考<a href="%5Bhttps://blog.csdn.net/MumuziD/article/details/118760650%5D(https://blog.csdn.net/MumuziD/article/details/118760650)">链接</a>，，建议直接选择<code>cuDNN Library for Linux (x86_64)</code><br>进入cudnn压缩包所在的文件夹，解压文件</p><pre class="language-none"><code class="language-none">tar -xvf [$文件名]</code></pre><p>将文件拷贝到相应cuda目录下</p><pre class="language-none"><code class="language-none">sudo cp cudnn-*-archive&#x2F;include&#x2F;cudnn*.h &#x2F;usr&#x2F;local&#x2F;cuda&#x2F;include sudo cp -P cudnn-*-archive&#x2F;lib&#x2F;libcudnn* &#x2F;usr&#x2F;local&#x2F;cuda&#x2F;lib64 sudo chmod a+r &#x2F;usr&#x2F;local&#x2F;cuda&#x2F;include&#x2F;cudnn*.h &#x2F;usr&#x2F;local&#x2F;cuda&#x2F;lib64&#x2F;libcudnn*</code></pre><p>查看cudnn版本</p><pre class="language-none"><code class="language-none">cat &#x2F;usr&#x2F;local&#x2F;cuda&#x2F;include&#x2F;cudnn_version.h | grep CUDNN_MAJOR -A 2</code></pre><p>出现如下的信息，则为配置成功</p><pre class="language-bash" data-language="bash"><code class="language-bash">#define CUDNN_MAJOR 8#define CUDNN_MINOR 4#define CUDNN_PATCHLEVEL 0--#define CUDNN_VERSION (CUDNN_MAJOR * 1000 + CUDNN_MINOR * 100 + CUDNN_PATCHLEVEL)#endif &#x2F;* CUDNN_VERSION_H *&#x2F;</code></pre><h1 id="安装Pytorch"><a href="#安装Pytorch" class="headerlink" title="安装Pytorch"></a>安装Pytorch</h1><h2 id="构建虚拟环境"><a href="#构建虚拟环境" class="headerlink" title="构建虚拟环境"></a>构建虚拟环境</h2><ul><li>如果有需要，使用<code>conda create --name 名字 python=3.8</code>新建一个虚拟环境<br><strong>当不标明python版本时<code>python=3.8</code>，对应env文件下不会出现python.exe</strong></li><li>使用<code>conda activate 名字</code>进入虚拟环境安装</li><li>如果不需要在<code>base</code>环境中安装即可</li><li>可使用<code>conda list</code>或<code>pip list</code>查看目前环境所安装的包<br><strong>注意<code>pip</code>,<code>pip3</code>,<code>conda</code>安装命令的安装位置不一样，可在CMD中使用<code>where pip</code>找pip所在位置</strong><br><strong>目前测试使用<code>pip install</code>安装的包，在不同conda环境中是通用的</strong></li></ul><h2 id="在线安装"><a href="#在线安装" class="headerlink" title="在线安装"></a>在线安装</h2><ul><li>在<a href="https://pytorch.org/get-started/locally/">Pytorch官网</a>，选择对应版本，得到安装命令<br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0-1%20%E6%9C%AC%E5%9C%B0%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2-4.png" alt="深度学习-1 本地环境部署-4"></li><li><code>pip</code>包的安装目录可用以下命令查询:<pre class="language-none"><code class="language-none">python -m site --user-site</code></pre></li><li><code>conda</code>安装包下载目录为<code>~/Anaconda3/pkgs</code>，安装在<code>~/Anaconda3/Lib/site-packages</code></li></ul><h2 id="使用镜像加速"><a href="#使用镜像加速" class="headerlink" title="使用镜像加速"></a>使用镜像加速</h2><ul><li>pip 可以在命令最后加<code>-i 镜像地址</code>来进行加速下载，地址如下<pre class="language-none"><code class="language-none">https:&#x2F;&#x2F;pypi.tuna.tsinghua.edu.cn&#x2F;simple #清华镜像https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;pypi&#x2F;simple&#x2F; #阿里https:&#x2F;&#x2F;mirrors.163.com&#x2F;pypi&#x2F;simple&#x2F; #网易</code></pre></li><li>也可修改pip.ini来实现配置镜像路径<pre class="language-none"><code class="language-none">#查找pip.ini的存放位置pip config -v list</code></pre>返回如下内容，修改global对应路径下的文件，会全局生效<pre class="language-none"><code class="language-none">For variant &#39;global&#39;, will try loading &#39;C:\ProgramData\pip\pip.ini&#39;For variant &#39;user&#39;, will try loading &#39;C:\Users\YourUserName\pip\pip.ini&#39;For variant &#39;site&#39;, will try loading &#39;&lt;path_to_your_conda_env&gt;\Lib\site-packages\pip\pip.ini&#39;</code></pre>在文件中添加以下内容<pre class="language-none"><code class="language-none">[global]index-url &#x3D; https:&#x2F;&#x2F;pypi.tuna.tsinghua.edu.cn&#x2F;simple</code></pre></li><li>同理，conda可以使用以下命令配置镜像源<pre class="language-none"><code class="language-none">conda config --add channels https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;anaconda&#x2F;pkgs&#x2F;main&#x2F;conda config --add channels https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;anaconda&#x2F;pkgs&#x2F;r&#x2F;conda config --add channels https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;anaconda&#x2F;pkgs&#x2F;msys2&#x2F;conda config --set show_channel_urls yes</code></pre>在这一步中我们要安装<code>torch</code>、<code>torchvision</code>、<code>torchaudio</code>三个包，其中<code>torch</code>包有3G左右，如果下载慢，可以使用离线下载本地安装的方式</li></ul><h2 id="本地安装"><a href="#本地安装" class="headerlink" title="本地安装"></a>本地安装</h2><h3 id="离线下载"><a href="#离线下载" class="headerlink" title="离线下载"></a>离线下载</h3><ol><li>仍然在anaconda powershell中使用官网命令下载所需包，但使用<code>ctrl + c</code>中断下载进程<br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0-1%20%E6%9C%AC%E5%9C%B0%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2-5.png" alt="深度学习-1 本地环境部署-5"></li><li>使用下载地址，在迅雷等下载软件中下载<br><strong>可以修改命令分别下载<code>torchvision</code>与<code>torchaudio</code>以得到下载地址，但这两个包很小，可以直接在线下载</strong><br>PS:也可去<a href="https://download.pytorch.org/whl/torch/">官网</a>下载相应版本安装包</li></ol><h3 id="本地安装-1"><a href="#本地安装-1" class="headerlink" title="本地安装"></a>本地安装</h3><ol><li>使用以下命令定位到本地安装文件目录<pre class="language-none"><code class="language-none">盘符名:    #如D:,定位到特定磁盘dir        #显示当前文件下的所有文件cd 文件名   #打开文件cd ..       #反回上一级文件夹cd &#x2F;        #反回根磁盘</code></pre>直到使用<code>dir</code>可以看到安装文件为止<br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0-1%20%E6%9C%AC%E5%9C%B0%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2-7.png" alt="深度学习-1 本地环境部署-7"><br><strong>conda 安装包放到anaconda目录下的<code>pkgs</code>文件中</strong></li><li>使用<code>pip install 文件名</code>或 <code>conda install --use-local 文件名</code>安装本地包，在安装过程中会下载一些其他依赖包<br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0-1%20%E6%9C%AC%E5%9C%B0%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2-6.png" alt="深度学习-1 本地环境部署-6"><br><strong>总共需要将<code>torch</code>、<code>torchvision</code>、<code>torchaudio</code>都安装好</strong></li></ol><h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><ul><li>在anaconda powershell中使用<code>conda activate 环境名</code>进入conda环境</li><li>键入<code>python</code>进入python模式</li><li>使用<code>import torch</code>导入torch包<br>依次使用使用以下命令测试<pre class="language-none"><code class="language-none">a &#x3D; torch.ones((3,1)).cuda(0)b &#x3D; torch.ones((3,1)).cuda(0)a + b</code></pre>得到运算结果：<br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0-1%20%E6%9C%AC%E5%9C%B0%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2-8.png" alt="深度学习-1 本地环境部署-8"><br>使用<code>exit()</code>或<code>quit()</code>退出python </li><li>也可使用以下命令<pre class="language-none"><code class="language-none">pythonimport torchtorch.cuda.is_available()</code></pre>返回ture即可</li></ul><h1 id="安装jupyter-note-book与-d2l"><a href="#安装jupyter-note-book与-d2l" class="headerlink" title="安装jupyter note book与 d2l"></a>安装jupyter note book与 d2l</h1><p>1. </p><pre class="language-none"><code class="language-none">pip install jupyter d2l</code></pre><ol start="2"><li>去<a href="https://zh-v2.d2l.ai/">官网</a>下载jupyter记事本压缩包，并解压<br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0-1%20%E6%9C%AC%E5%9C%B0%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2-9.png" alt="深度学习-1 本地环境部署-9"></li><li>进行jupyter note book，找到解压文件开始学习<pre class="language-none"><code class="language-none">jupyter note book</code></pre></li></ol><h1 id="将虚拟环境添加到jupyter-notebook"><a href="#将虚拟环境添加到jupyter-notebook" class="headerlink" title="将虚拟环境添加到jupyter notebook"></a>将虚拟环境添加到jupyter notebook</h1><ul><li>安装<code>ipykernel</code>:<pre class="language-none"><code class="language-none">pip install ipykernel</code></pre></li><li>将环境添加到jupyter notebook<pre class="language-none"><code class="language-none">python -m ipykernel install --user --name env_name</code></pre></li><li>重启jupyter notebook</li></ul>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 环境 </tag>
            
            <tag> 深度学习 </tag>
            
            <tag> Anaconda </tag>
            
            <tag> CUDA </tag>
            
            <tag> Pytorch </tag>
            
            <tag> CMD命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客的多终端同步</title>
      <link href="/2023/09/18/11.%E5%8D%9A%E5%AE%A2%E7%9A%84%E5%A4%9A%E7%BB%88%E7%AB%AF%E5%90%8C%E6%AD%A5/"/>
      <url>/2023/09/18/11.%E5%8D%9A%E5%AE%A2%E7%9A%84%E5%A4%9A%E7%BB%88%E7%AB%AF%E5%90%8C%E6%AD%A5/</url>
      
        <content type="html"><![CDATA[<hr><p>参考文章<a href="https://zhuanlan.zhihu.com/p/476603074">Hexo搭建博客的多终端同步问题</a></p><hr><h1 id="Github-操作"><a href="#Github-操作" class="headerlink" title="Github 操作"></a>Github 操作</h1><p>新建一个分支，并设定为默认分支<br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/11.%E5%8D%9A%E5%AE%A2%E7%9A%84%E5%A4%9A%E7%BB%88%E7%AB%AF%E5%90%8C%E6%AD%A5-1.png" alt="11.博客的多终端同步-1"><br>PS：<code>hexo d</code>命令使用<code>main</code>分支，且是否是默认分支无影响，只要保证push时不会影响到<code>main</code>分支即可</p><h1 id="初始电脑本地操作"><a href="#初始电脑本地操作" class="headerlink" title="初始电脑本地操作"></a>初始电脑本地操作</h1><p>本地任意一空白目录下 git clone 之前的代码</p><pre class="language-bash" data-language="bash"><code class="language-bash">git clone git@github.com:yourname&#x2F;yourname.github.io.git</code></pre><p>clone成功后，删除掉除去<code>.git</code>之外的所有文件夹</p><p>把之前的博客源文件复制过来，除去 <code>.deploy_git</code></p><p>新建or修改 <code>.gitignore</code>文件</p><pre class="language-text" data-language="text"><code class="language-text">.DS_StoreThumbs.dbdb.json*.lognode_modules&#x2F;public&#x2F;.deploy*&#x2F;</code></pre><p>如果你在<code>themes</code>文件夹下 clone 过其它主题文件，把其中的 <code>.git</code>文件夹删除掉</p><p>上传文件到hexo分支</p><pre class="language-text" data-language="text"><code class="language-text">git add .git commit -m &quot;backup blog source file0305&quot;git push </code></pre><p>如果没有报错，此时github端应该就可以看到备份的源文件了。</p><h1 id="另一台终端操作"><a href="#另一台终端操作" class="headerlink" title="另一台终端操作"></a>另一台终端操作</h1><p>首先进行一些基础配置，如安装git nodejs与 配置git连接Github等，详见<a href="https://hotsaber.github.io/2023/05/19/1.%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE/">博客部署配置</a></p><pre class="language-text" data-language="text"><code class="language-text"># 在该电脑的本地文件夹下clone Blog源文件git clone &lt;url&gt;</code></pre><pre class="language-text" data-language="text"><code class="language-text"># 或使用git clone git@github.com:yourname&#x2F;yourname.github.io.git</code></pre><p>生成名为<code>yourname.github.io</code>的文件夹<br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/11.%E5%8D%9A%E5%AE%A2%E7%9A%84%E5%A4%9A%E7%BB%88%E7%AB%AF%E5%90%8C%E6%AD%A5-2.png" alt="11.博客的多终端同步-2"><br>此后在此文件中<code>git bash</code>安装之前安装的插件</p><pre class="language-none"><code class="language-none">npm install -g hexo-clinpm install hexo-deployer-git --save</code></pre><p>使用<code>hexo -v </code>验证，使用<code>npm audit fix</code>修复deployer</p><h1 id="撰写新博客"><a href="#撰写新博客" class="headerlink" title="撰写新博客"></a>撰写新博客</h1><p>然后就可以在新电脑上写博客了，将博客部署到网站后，记得push源文件,更新仓库</p><pre class="language-text" data-language="text"><code class="language-text">git add .git commit -m &quot;&quot;git push </code></pre><p>其他终端同样编辑时，要pull回仓库中的文件，确保自己在最新的文件上进行修改</p><pre class="language-none"><code class="language-none">## 多台终端写blog ，记得先和github端 同步 ##git pull</code></pre><p>如出现修改冲突</p><ol><li>放弃本地修改<pre class="language-none"><code class="language-none">git reset --hardgit pull</code></pre></li><li>使用<code>git stash</code>保存当前工作进度<pre class="language-none"><code class="language-none">git stashgit pullgit stash pop</code></pre><code>git stash pop</code>把刚才stash到本地栈中的代码pop到本地，但会删除本地stash中的内容<br>也可用<code>git apply</code>恢复，但stash列表中的内容是继续保留的</li></ol>]]></content>
      
      
      <categories>
          
          <category> 博客搭建记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> node.js </tag>
            
            <tag> Git </tag>
            
            <tag> GitHub </tag>
            
            <tag> SSH </tag>
            
            <tag> hexo </tag>
            
            <tag> 多终端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>office共享与在线协作</title>
      <link href="/2023/09/18/office%E5%85%B1%E4%BA%AB%E4%B8%8E%E5%9C%A8%E7%BA%BF%E5%8D%8F%E4%BD%9C/"/>
      <url>/2023/09/18/office%E5%85%B1%E4%BA%AB%E4%B8%8E%E5%9C%A8%E7%BA%BF%E5%8D%8F%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<hr><ol><li><strong>为什么使用office在线协作?</strong></li></ol><ul><li>所有基础编辑操作都与在本地操作相同</li><li>不存在格式因软件改变发生变动的问题</li><li>免费</li><li>软件准备可以由<code>office tool</code>一键完成，详见<a href="https://hotsaber.github.io/2023/07/06/office%20%E9%83%A8%E7%BD%B2%E6%95%99%E7%A8%8B/">office 365 部署教程</a></li></ul><ol start="2"><li><strong>需要支持共享的office版本，如<code>office 365</code>、<code>office 2021</code>等，一些高版本office也支持文件共享与协作</strong></li></ol><ul><li>如何判断自己的Office版本是否支持在线共享与协作？<br>可随便打开一个文档，看左上角是否有自动保存开关，有就是支持自动<br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/office%E5%85%B1%E4%BA%AB%E6%96%87%E6%A1%A3%E4%B8%8E%E5%9C%A8%E7%BA%BF%E5%8D%8F%E4%BD%9C-1.png" alt="office共享文档与在线协作-1"></li></ul><ol start="3"><li><strong>此外还需要微账号与one drive</strong></li></ol><ul><li>微软账号可以在右上角查看<br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/office%E5%85%B1%E4%BA%AB%E6%96%87%E6%A1%A3%E4%B8%8E%E5%9C%A8%E7%BA%BF%E5%8D%8F%E4%BD%9C-2.png" alt="office共享文档与在线协作-2"></li></ul><hr><h1 id="将文件保存到one-drive（保存为在线文档）"><a href="#将文件保存到one-drive（保存为在线文档）" class="headerlink" title="将文件保存到one drive（保存为在线文档）"></a>将文件保存到one drive（保存为在线文档）</h1><ol><li>在本地打开需要共享的文档，点击左上角的<code>自动保存</code>开关或右上角的<code>共享按钮</code>，如下图所示<br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/office%E5%85%B1%E4%BA%AB%E6%96%87%E6%A1%A3%E4%B8%8E%E5%9C%A8%E7%BA%BF%E5%8D%8F%E4%BD%9C-1.png" alt="office共享文档与在线协作-1"><br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/office%E5%85%B1%E4%BA%AB%E6%96%87%E6%A1%A3%E4%B8%8E%E5%9C%A8%E7%BA%BF%E5%8D%8F%E4%BD%9C-3.png" alt="office共享文档与在线协作-3"></li><li>此时会跳出<code>one drive</code>关联界面，如果未登录请使用微软账号登录，如已登录则选择自己的账号即可<br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/office%E5%85%B1%E4%BA%AB%E4%B8%8E%E5%9C%A8%E7%BA%BF%E5%8D%8F%E4%BD%9C-1.png" alt="office共享与在线协作-1"><br>或<br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/office%E5%85%B1%E4%BA%AB%E6%96%87%E6%A1%A3%E4%B8%8E%E5%9C%A8%E7%BA%BF%E5%8D%8F%E4%BD%9C-6.png" alt="office共享文档与在线协作-6"></li></ol><h1 id="将One-drive上的文档共享给其他用户"><a href="#将One-drive上的文档共享给其他用户" class="headerlink" title="将One drive上的文档共享给其他用户"></a>将One drive上的文档共享给其他用户</h1><ul><li><strong>如上一步点击的是<code>共享</code>按钮，则会自动跳转到此步</strong></li><li><strong>如上一步只是点击了自动<code>保存开关</code>则这一步需要额外点击一次<code>共享按钮</code>进入到以下页面</strong><br><img src="https://cdn.jsdelivr.net/gh/HOTSaber/Imagehosting@main/blogpic/office%E5%85%B1%E4%BA%AB%E6%96%87%E6%A1%A3%E4%B8%8E%E5%9C%A8%E7%BA%BF%E5%8D%8F%E4%BD%9C-9.png" alt="office共享文档与在线协作-9"><br><strong>在填写邮箱后一定要点下方自动弹出的完整账号栏，可一次添加多个账户</strong><br><strong>send link 下一定选用指定用户模式进行分享</strong><br><img src="https://cdn.jsdelivr.net/gh/HOTSaber/Imagehosting@main/blogpic/203.office%E5%85%B1%E4%BA%AB%E6%96%87%E6%A1%A3%E4%B8%8E%E5%9C%A8%E7%BA%BF%E5%8D%8F%E4%BD%9C-1.png" alt="203.office共享文档与在线协作-1"><br><strong>send link 下一定选用指定用户模式进行分享</strong></li></ul><h1 id="接受共享"><a href="#接受共享" class="headerlink" title="接受共享"></a>接受共享</h1><ul><li>如自己是接收方，则只需打开<code>文件</code>-<code>开始</code>-<code>与我共享</code>查找相关文件并打开即可<br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/office%E5%85%B1%E4%BA%AB%E6%96%87%E6%A1%A3%E4%B8%8E%E5%9C%A8%E7%BA%BF%E5%8D%8F%E4%BD%9C-11.png" alt="office共享文档与在线协作-11"><br>或通过<code>文件</code>-<code>打开</code>-<code>与我共享</code>查找相关文件并打开即可<br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/office%E5%85%B1%E4%BA%AB%E6%96%87%E6%A1%A3%E4%B8%8E%E5%9C%A8%E7%BA%BF%E5%8D%8F%E4%BD%9C-12.png" alt="office共享文档与在线协作-12"></li></ul><h1 id="在线协作"><a href="#在线协作" class="headerlink" title="在线协作"></a>在线协作</h1><ul><li>在打开共享文档后，首先一定要确认左上角<code>自动保存</code>是否打开，保存按钮是否有<code>共享标识</code><br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/office%E5%85%B1%E4%BA%AB%E6%96%87%E6%A1%A3%E4%B8%8E%E5%9C%A8%E7%BA%BF%E5%8D%8F%E4%BD%9C-13.png" alt="office共享文档与在线协作-13"></li><li><strong>此外所有操作都与在本地操作相同，确认自己修改完成后，点击有<code>共享标识</code>的保存按钮</strong></li></ul><h1 id="进阶管理"><a href="#进阶管理" class="headerlink" title="进阶管理"></a>进阶管理</h1><h2 id="权限管理"><a href="#权限管理" class="headerlink" title="权限管理"></a>权限管理</h2><p>在线文档保存在谁的微软账户，则谁是管理员，管理员可通过<code>管理访问权限</code>管理所有共享人员的编辑权限，也可以将人员踢出共享<br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/office%E5%85%B1%E4%BA%AB%E6%96%87%E6%A1%A3%E4%B8%8E%E5%9C%A8%E7%BA%BF%E5%8D%8F%E4%BD%9C-14.png" alt="office共享文档与在线协作-14"></p><h2 id="版本管理"><a href="#版本管理" class="headerlink" title="版本管理"></a>版本管理</h2><ul><li>在窗口顶端文件名处可以展开下拉菜单，进入文件版本历史管理<br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/office%E5%85%B1%E4%BA%AB%E6%96%87%E6%A1%A3%E4%B8%8E%E5%9C%A8%E7%BA%BF%E5%8D%8F%E4%BD%9C-16.png" alt="office共享文档与在线协作-16"></li><li>成员的每次修改都会生成相应的历史文件树，管理员可以选择特定时间节点，进行版本回滚<br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/office%E5%85%B1%E4%BA%AB%E6%96%87%E6%A1%A3%E4%B8%8E%E5%9C%A8%E7%BA%BF%E5%8D%8F%E4%BD%9C-17.png" alt="office共享文档与在线协作-17"></li></ul><h2 id="one-drive在线空间管理"><a href="#one-drive在线空间管理" class="headerlink" title="one drive在线空间管理"></a>one drive在线空间管理</h2><ol><li>在安装one drive 且one drive服务是启动状态时，资源管理器中会直接出现one drive个人账号条目，可以如在本地管理一样管理one drive上的在线文件<br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/office%E5%85%B1%E4%BA%AB%E6%96%87%E6%A1%A3%E4%B8%8E%E5%9C%A8%E7%BA%BF%E5%8D%8F%E4%BD%9C-18.png" alt="office共享文档与在线协作-18"><br>Ps: 尽量保证文件状态都为绿色对勾，确保是最新状态</li><li>使用one drive后台程序跳转资源管理器进行管理，还可以看到近期同步状态<br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/office%E5%85%B1%E4%BA%AB%E6%96%87%E6%A1%A3%E4%B8%8E%E5%9C%A8%E7%BA%BF%E5%8D%8F%E4%BD%9C-19.png" alt="office共享文档与在线协作-19"></li><li>手机app管理</li></ol><ul><li>当长期未登录时，有时one drive会冻结账户，可以使用手机app进行解冻，app上管理方式类似。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 文档编辑与管理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> office </tag>
            
            <tag> office 365 </tag>
            
            <tag> 共享文档 </tag>
            
            <tag> 在线协作 </tag>
            
            <tag> one drive </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>obsidian 入门教程</title>
      <link href="/2023/07/09/8.obsidian%20%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B/"/>
      <url>/2023/07/09/8.obsidian%20%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<hr><p><strong>本教程主要用于组会记录员使用，记录员需熟练使用md格式文档，后续会议记录我们会将md文档共享在小组博客，以供大家学习使用</strong></p><hr><h1 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h1><p>从<a href="https://obsidian.md/">管网</a>下载安装程序</p><h1 id="使用前设置"><a href="#使用前设置" class="headerlink" title="使用前设置"></a>使用前设置</h1><h2 id="仓库"><a href="#仓库" class="headerlink" title="仓库"></a>仓库</h2><ul><li>选定位置新建一个仓库</li><li>或者直接打开一个文件夹做为仓库<br><strong>此后md文档与相应附件都尽量保存在仓库目录下</strong><br><img src="https://cdn.jsdelivr.net/gh/HOTSaber/Imagehosting@main/blogpic/obsidian%20%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B-1.png" alt="obsidian 入门教程-1"></li></ul><h2 id="配制附件文件夹"><a href="#配制附件文件夹" class="headerlink" title="配制附件文件夹"></a>配制附件文件夹</h2><ul><li>进入设置–&gt;文件与链接–&gt;附件默认存放路径，选择<code>指定的附件文件夹</code>–&gt;设置附件文件路径为<code>blogpic</code><br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/obsidian%20%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B-4.png" alt="obsidian 入门教程-4"><br><strong>为方便管理员更新博客，请都采用md格式，采用</strong><em><strong>相同的附件文件名</strong></em></li></ul><p><strong>windows系统下，截图快捷键为<code>ctrl+shift+s</code></strong></p><ul><li><strong>在打包发送文档时，要将文件与md文件共同打包成一个压缩包发送</strong><br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/obsidian%20%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B-6.png" alt="obsidian 入门教程-6"><br><strong>最后将压缩包发给博客管理员</strong></li></ul><h2 id="md语法格式"><a href="#md语法格式" class="headerlink" title="md语法格式"></a>md语法格式</h2><ul><li>详细内容请见<a href="https://hotsaber.github.io/2023/07/06/9.md%E8%AF%AD%E6%B3%95/">markdown格式语法</a></li></ul><h1 id="图片上传（进阶内容）"><a href="#图片上传（进阶内容）" class="headerlink" title="图片上传（进阶内容）"></a>图片上传（进阶内容）</h1><ul><li>使用图片上传功能需要使用<code>image auto upload Plugin</code>插件，实现一键上传</li><li><ul><li>需要<code>picgo</code>软件，与自建图床，详细教程请访问博客<a href="https://hotsaber.github.io/2023/05/20/4.%E6%90%AD%E5%BB%BA%E5%9B%BE%E5%BA%8A/">搭建腾讯云图床</a>或<a href="https://hotsaber.github.io/2024/04/16/300.%E4%BD%BF%E7%94%A8GitHub%E6%90%AD%E5%BB%BA%E5%9B%BE%E5%BA%8A/">使用GitHub搭建图床</a></li></ul></li></ul><h2 id="安装必备第三方插件"><a href="#安装必备第三方插件" class="headerlink" title="安装必备第三方插件"></a>安装必备第三方插件</h2><ul><li>进入设置–&gt;第三方插件–&gt;社区插件市场<br><strong>插件市场可能需要挂VPN访问</strong><br><img src="https://cdn.jsdelivr.net/gh/HOTSaber/Imagehosting@main/blogpic/obsidian%20%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B-3.png" alt="obsidian 入门教程-3"></li></ul><h3 id="paste-image-rename插件"><a href="#paste-image-rename插件" class="headerlink" title="paste image rename插件"></a>paste image rename插件</h3><ul><li>搜索<code>paste image rename</code> 进行安装，并进行相应设置<br><img src="https://cdn.jsdelivr.net/gh/HOTSaber/Imagehosting@main/blogpic/obsidian%20%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B-5.png" alt="obsidian 入门教程-5"><br><strong>此时向文档中黏贴截图文件时就不会有文件名乱码的情况</strong></li></ul><h3 id="Image-auto-upload插件"><a href="#Image-auto-upload插件" class="headerlink" title="Image auto upload插件"></a>Image auto upload插件</h3><ul><li>搜索<code>Image auto upload</code>,并进行相应设置<br><img src="https://cdn.jsdelivr.net/gh/HOTSaber/Imagehosting@main/blogpic/200.obsidian%20%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B-1.png" alt="200.obsidian 入门教程-1"></li></ul><h3 id="Image-auto-upload设置"><a href="#Image-auto-upload设置" class="headerlink" title="Image auto upload设置"></a>Image auto upload设置</h3><ol><li>快捷键设置，进入<code>Options</code>–&gt;<code>Community plugins</code>–&gt;<code>Installed plugins</code>–&gt;<code>热键图标【十字标】</code>将一键上传与一键下载设为自己喜欢的按键。<br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/200.obsidian%20%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B-2.png" alt="200.obsidian 入门教程-2"></li><li>缩放设置，进入设置–&gt;<code>Community plugins</code>–&gt;<code>Image auto upload Plugin</code>–&gt;<code>Plugin Settings</code>–&gt;<code>Image size suffix</code>,将其值设为|300，表示等比缩放图片为宽度300<br><strong>此设置可以有效缩小图片占用体积，节省仓库空间，但会造成图片严重失真，酌情使用</strong><br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/200.obsidian%20%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B-4.png" alt="200.obsidian 入门教程-4"></li></ol><h1 id="相对路径与绝对路径的理解"><a href="#相对路径与绝对路径的理解" class="headerlink" title="相对路径与绝对路径的理解"></a>相对路径与绝对路径的理解</h1><ul><li>现有文件结构如下<br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/obsidian%20%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B-8.png" alt="obsidian 入门教程-8"><br>在<code>test.py</code>中想调用<code>excelexp.xlsx</code>有两种<code>文件路径</code>表达方式：</li></ul><ol><li>使用绝对路径<pre class="language-none"><code class="language-none">df &#x3D; pd.read_excel(r&quot;D:\pyproject\Learn\excelexp.xlsx&quot;)</code></pre></li><li>使用相对路径<pre class="language-none"><code class="language-none">df &#x3D; pd.read_excel(r&quot;.\excelexp.xlsx&quot;)</code></pre>最终实现的结果都是一样的，但绝对路径的使用有一个问题，如果将代码分享给他人后，文件位置不在D盘了，或者上级文件有名称不对应，则会因为路径错误而无法找到文件。</li></ol><ul><li>其中<code>D:\pyproject\Learn\excelexp.xlsx</code>路径的文件寻址顺序为<br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/obsidian%20%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B-8.jpg" alt="obsidian 入门教程-8"></li><li>其中<code>D:\pyproject\Learn\excelexp.xlsx</code>路径的文件寻址顺序为<br><img src="https://cdn.jsdelivr.net/gh/HOTSaber/Imagehosting@main/blogpic/obsidian%20%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B-9.jpg" alt="obsidian 入门教程-9"><br>所有标红的文件或文件夹都不能有所变动，一但变动，程序就无法按照寻址顺序找到相应文件<br>**可以看出，在程序寻址时，相对路径的表达方式所设计到的文件最少，只要标红的文件不改变，程序就可以完成寻址<br>所以采用相对路径时，我们只要把<code>Learn</code>文件打包发给别人，就可以在别人的计算机上运行相应程序了</li></ul><hr><p><strong><code>r“D:\XXXXX”</code>中<code>r</code>表示的是原始字符串，因为<code>\</code>在python中有转义作用，如<code>\n</code>等，所以用<code>r</code>表示后续内容非转义，使用<code>/</code>则不用考虑此问题</strong></p><hr>]]></content>
      
      
      <categories>
          
          <category> 文档编辑与管理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> obsidian </tag>
            
            <tag> 截图快捷键 </tag>
            
            <tag> 相对路径 </tag>
            
            <tag> 转义 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>markdown 格式语法</title>
      <link href="/2023/07/06/9.md%E8%AF%AD%E6%B3%95/"/>
      <url>/2023/07/06/9.md%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h1><pre class="language-none"><code class="language-none"># H1  ## H2  ### H3  #### H4  ##### H5  ###### H6</code></pre><h1 id="分行符"><a href="#分行符" class="headerlink" title="分行符"></a>分行符</h1><pre class="language-none"><code class="language-none">----</code></pre><h1 id="序号"><a href="#序号" class="headerlink" title="序号"></a>序号</h1><h2 id="无序标题"><a href="#无序标题" class="headerlink" title="无序标题"></a>无序标题</h2><pre class="language-none"><code class="language-none">- XXXX- XXXX- XXXX</code></pre><h2 id="有序标题"><a href="#有序标题" class="headerlink" title="有序标题"></a>有序标题</h2><pre class="language-none"><code class="language-none">1. XXX2. XXX3. XXX</code></pre><h2 id="任务列表"><a href="#任务列表" class="headerlink" title="任务列表"></a>任务列表</h2><p>今天学习任务列表:</p><pre class="language-none"><code class="language-none">- [ ] 今天- [x] 今天- [x] 今天</code></pre><h1 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h1><h2 id="行内代码"><a href="#行内代码" class="headerlink" title="行内代码"></a>行内代码</h2><pre class="language-none"><code class="language-none">&#96;XXX&#96;</code></pre><h2 id="行间代码"><a href="#行间代码" class="headerlink" title="行间代码"></a>行间代码</h2><pre class="language-none"><code class="language-none">&lt;code&gt;&#96;&#96;&#96;&lt;code&gt;XXX&lt;code&gt;&#96;&#96;&#96;&lt;code&gt;</code></pre><h1 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h1><h2 id="网络链接"><a href="#网络链接" class="headerlink" title="网络链接"></a>网络链接</h2><pre class="language-none"><code class="language-none">[名称](网址)</code></pre><h2 id="图片链接"><a href="#图片链接" class="headerlink" title="图片链接"></a>图片链接</h2><pre class="language-none"><code class="language-none">![图名](地址)</code></pre><h2 id="引用链接"><a href="#引用链接" class="headerlink" title="引用链接"></a>引用链接</h2><pre class="language-none"><code class="language-none">[百度][id][id]: baidu.com &quot;一个垃圾的搜索引擎&quot;[谷歌][2][2]: Google.com &quot;一个还可以的搜索引擎&quot;</code></pre><h2 id="链接设置到标题"><a href="#链接设置到标题" class="headerlink" title="链接设置到标题"></a>链接设置到标题</h2><pre class="language-none"><code class="language-none">请参考[标题](#五级标题)</code></pre><h1 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h1><pre class="language-none"><code class="language-none">&#x2F;&#x2F;例子一|123|234|345||:-|:-:|-:||abc|bcd|cde||abc|bcd|cde||abc|bcd|cde|&#x2F;&#x2F;例子二|123|234|345||:---|:---:|---:||abc|bcd|cde||abc|bcd|cde||abc|bcd|cde|&#x2F;&#x2F;例子三123|234|345:-|:-:|-:abc|bcd|cdeabc|bcd|cdeabc|bcd|cde</code></pre><h1 id="文本强调"><a href="#文本强调" class="headerlink" title="文本强调"></a>文本强调</h1><pre class="language-none"><code class="language-none">*斜体***加粗*****粗斜体***~~删除线~~&lt;u&gt;下划线&lt;&#x2F;u&gt;&#x3D;&#x3D;这是一段高亮文字&#x3D;&#x3D; #github不支持&lt;mark&gt;这是一段高亮文字&lt;&#x2F;mark&gt; #github不支持&lt;span style&#x3D;&quot;background-color: yellow;&quot;&gt;这段文字将被标黄&lt;&#x2F;span&gt; #github不支持</code></pre><h1 id="转义"><a href="#转义" class="headerlink" title="转义"></a>转义</h1><pre class="language-none"><code class="language-none">\\\&#96;\*\+\_</code></pre><h1 id="1-2-2-设计字体、字号和颜色"><a href="#1-2-2-设计字体、字号和颜色" class="headerlink" title="1.2.2 设计字体、字号和颜色"></a>1.2.2 设计字体、字号和颜色</h1><p>这里，就需要用到HTML语法了。</p><p>因为它本身是不支持修改字体、字号与颜色等功能的。</p><p>有些网站，比如像Github、知乎、简书等，它们就无法设置这种功能。不过像有的网站，比如像CSDN，它的Markdown编辑器做了很好的扩展、支持HTML语法，就有这样的功能。</p><p>具体如下：</p><pre class="language-none"><code class="language-none">&lt;font face&#x3D;&#39;黑体&#39; color&#x3D;#ff0000 size&#x3D;4&gt;我是正文&lt;&#x2F;font&gt;</code></pre><p><font face='黑体' color=#ff0000 size=4>我是正文</font><br><img src="https://img-blog.csdnimg.cn/img_convert/0f7370f09c9cfb304e986421cb550807.png"></p>]]></content>
      
      
      <categories>
          
          <category> 文档编辑与管理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 格式 </tag>
            
            <tag> markdown </tag>
            
            <tag> 语法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>office 365 部署教程</title>
      <link href="/2023/07/06/office%E9%83%A8%E7%BD%B2%E6%95%99%E7%A8%8B/"/>
      <url>/2023/07/06/office%E9%83%A8%E7%BD%B2%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<hr><ol><li>为什么使用<code>office 365</code>或高版本<code>office</code>? 详见<a href="https://hotsaber.github.io/2023/09/18/office%E5%85%B1%E4%BA%AB%E4%B8%8E%E5%9C%A8%E7%BA%BF%E5%8D%8F%E4%BD%9C/">office共享与在线协作</a></li><li>官方详细教程可访问<a href="https://www.coolhub.top/archives/42">网址</a>或<a href="https://www.officetool.plus/zh-cn/usage/command/deploy.html">官方文档</a></li><li><strong>部署前需要卸载老版本，并清除注册信息与重置office设置</strong></li><li><strong>如卸载失败，可以使用<code>工具箱</code>中的<code>移除office</code>功能强制移除</strong></li></ol><hr><h1 id="Office-tool-plus-部署工具"><a href="#Office-tool-plus-部署工具" class="headerlink" title="Office tool plus 部署工具"></a>Office tool plus 部署工具</h1><h2 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h2><ul><li><a href="https://otp.landian.vip/zh-cn/download.html">官网下载</a>（下载包含框架版本）</li></ul><h1 id="清除旧版本Office"><a href="#清除旧版本Office" class="headerlink" title="清除旧版本Office"></a>清除旧版本Office</h1><ol><li>卸载旧版本 Office，按照标准流程操作，请勿直接强制移除。</li><li>清除旧版本激活信息，看下面的截图来学习。</li><li>清除 Office 设置，在[工具箱] -&gt; [重置 Office 为默认设置]。</li><li><strong>如卸载失败，可以使用<code>工具箱</code>中的<code>移除office</code>功能强制移除</strong></li></ol><ul><li>清除激活信息<br><img src="https://www.coolhub.top/wp-content/uploads/2023/01/clear-activation-v10.png"><br><img src="https://www.coolhub.top/wp-content/uploads/2022/06/clear-activation.png"></li><li>重置Office设置<br><img src="https://www.coolhub.top/wp-content/uploads/2023/01/reset-office-settings-v10.png"><br><img src="https://www.coolhub.top/wp-content/uploads/2020/04/reset-Office-settings.png"></li></ul><h1 id="Office安装（部署）"><a href="#Office安装（部署）" class="headerlink" title="Office安装（部署）"></a>Office安装（部署）</h1><h2 id="指令安装"><a href="#指令安装" class="headerlink" title="指令安装"></a>指令安装</h2><ul><li>按下 Ctrl + Shift + P 打开命令框,输入以下命令，部署off365企业应用版，与visio2021<pre class="language-none"><code class="language-none">deploy &#x2F;add &quot;O365ProPlusRetail_zh-cn|VisioPro2021Volume_zh-cn&quot; &#x2F;channel Current &#x2F;dlfirst</code></pre></li><li><strong>手动部署请参考<a href="https://www.coolhub.top/archives/11">网址</a></strong><br>部分设置可参考下图<br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/office%20%E9%83%A8%E7%BD%B2%E6%95%99%E7%A8%8B.png"></li></ul><h1 id="激活Office"><a href="#激活Office" class="headerlink" title="激活Office"></a>激活Office</h1><h2 id="指令激活"><a href="#指令激活" class="headerlink" title="指令激活"></a>指令激活</h2><pre class="language-none"><code class="language-none">ospp &#x2F;insLicID MondoVolume &#x2F;sethst:kms.loli.best &#x2F;setprt:1688 &#x2F;act</code></pre><p><strong>上述代码可一次性激活 Office, Visio, Project，同时适用 Win 7&#x2F;8，能使用 Office 的所有功能。</strong></p><h2 id="手动激活"><a href="#手动激活" class="headerlink" title="手动激活"></a>手动激活</h2><ol><li>**安装 Office 批量许可证 (Volume)**，无论如何，这里你都要选批量许可证。</li><li>设置一个 KMS 主机地址（可以设置端口为 1688）并保存设置。</li><li>点击激活按钮，等待激活完成。<br><strong>office 365企业版需要选择Office Mondo 2016 批量许可证</strong><br><img src="https://www.coolhub.top/wp-content/uploads/2022/06/clear-activation.png"></li></ol><hr><p><strong>如有更多问题可以访问<a href="https://www.coolhub.top/archives/42">官方教程</a>或<a href="https://www.officetool.plus/zh-cn/usage/command/deploy.html">官方文档</a></strong><br>或通过软件中的帮助链接访问管网教程<br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/office%20%E9%83%A8%E7%BD%B2%E6%95%99%E7%A8%8B-1.png"></p>]]></content>
      
      
      <categories>
          
          <category> 文档编辑与管理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> office </tag>
            
            <tag> office 365 </tag>
            
            <tag> office tool </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>机器学习-4</title>
      <link href="/2023/06/04/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-4%20-%20ol/"/>
      <url>/2023/06/04/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-4%20-%20ol/</url>
      
        <content type="html"><![CDATA[<h1 id="集成模型"><a href="#集成模型" class="headerlink" title="集成模型"></a>集成模型</h1><h2 id="Bagging"><a href="#Bagging" class="headerlink" title="Bagging"></a>Bagging</h2><p>多个弱模型取均值</p><h2 id="Boosting"><a href="#Boosting" class="headerlink" title="Boosting"></a>Boosting</h2><p>多个弱模型累加，且后一模型是在前一模型的基础上生成的，是一种迭代思路。</p><h2 id="stacking"><a href="#stacking" class="headerlink" title="stacking"></a>stacking</h2><h2 id="几种方法的主要区别"><a href="#几种方法的主要区别" class="headerlink" title="几种方法的主要区别"></a>几种方法的主要区别</h2><p><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-4-1.png" alt="机器学习-4-1"></p><h1 id="随机森林"><a href="#随机森林" class="headerlink" title="随机森林"></a>随机森林</h1><h2 id="训练样本的随机化"><a href="#训练样本的随机化" class="headerlink" title="训练样本的随机化"></a>训练样本的随机化</h2><ul><li>有放回的</li></ul><h2 id="特征选择的随机化"><a href="#特征选择的随机化" class="headerlink" title="特征选择的随机化"></a>特征选择的随机化</h2><ul><li>简单随机采样</li><li>信息熵法<br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-4-2.png" alt="机器学习-4-2"></li><li>Bagging包括随机森林，随机森林隶属于Bagging</li><li>鲁棒性如何解释？对极端数据（噪声，扰动）的处理能力，能一定程度上可以应对数据异常数据。</li><li>为什么要集成学习？一个单一模型很容易过拟合</li></ul><h1 id="GBDT（Boosting）"><a href="#GBDT（Boosting）" class="headerlink" title="GBDT（Boosting）"></a>GBDT（Boosting）</h1><ul><li>bagging用来解决过拟合，有可能会欠拟合。boosting解决欠拟合，有可能会过拟合。</li><li>将前一阶段的残差作为下一阶段的因变量</li><li>累加求最终预测值</li></ul><h1 id="XGBoost（Boosting）"><a href="#XGBoost（Boosting）" class="headerlink" title="XGBoost（Boosting）"></a>XGBoost（Boosting）</h1><ul><li>目标函数可以用泰勒展开</li><li>与原本boosting的区别，XGboost加入了正则化，传统boosting只用了一阶导，XGboost作了泰勒展开，有二阶导<br>Boost中目标函数不一定是多项式，直接求导比较难。<br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-4-3.png" alt="机器学习-4-3"></li><li>XGboost<br>  以泰勒展开将非多项式目标函数转化为多项式。<br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-4-4.png" alt="机器学习-4-4"></li></ul><h1 id="叠加式训练"><a href="#叠加式训练" class="headerlink" title="叠加式训练"></a>叠加式训练</h1><ul><li>递推的内容</li></ul><p><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-4-5.png" alt="机器学习-4-5"></p><ul><li>二元交叉商<br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-4-6.png" alt="机器学习-4-6"></li><li>目标函数的解释<br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-4-7.png" alt="机器学习-4-7"></li></ul><h1 id="垃圾邮件分类（典型分类问题）"><a href="#垃圾邮件分类（典型分类问题）" class="headerlink" title="垃圾邮件分类（典型分类问题）"></a>垃圾邮件分类（典型分类问题）</h1><h2 id="贝叶斯"><a href="#贝叶斯" class="headerlink" title="贝叶斯"></a>贝叶斯</h2><p><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-4-8.png" alt="机器学习-4-8"><br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-4-9.png" alt="机器学习-4-9"></p><h2 id="似然（词频统计）"><a href="#似然（词频统计）" class="headerlink" title="似然（词频统计）"></a>似然（词频统计）</h2><p><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-4-10.png" alt="机器学习-4-10"></p><h2 id="先验概率"><a href="#先验概率" class="headerlink" title="先验概率"></a>先验概率</h2><p><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-4-11.png" alt="机器学习-4-11"></p><h1 id="目的（做出判断）"><a href="#目的（做出判断）" class="headerlink" title="目的（做出判断）"></a>目的（做出判断）</h1><p>通过条件概率来进行比较<br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-4-12.png" alt="机器学习-4-12"><br>分母为固定常数，便于比较<br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-4-13.png" alt="机器学习-4-13"></p><ul><li>避免概率为0的情况——加1平滑<br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-4-14.png" alt="机器学习-4-14"></li></ul><h2 id="最大问题："><a href="#最大问题：" class="headerlink" title="最大问题："></a>最大问题：</h2><ul><li>不能保证特征间的独立性，未考虑到特征间的相关性，只是根据样本出现的次数，进行基于概率的训练。只是强调某个x是某个y的条件。</li><li>只能用原始特征，不能加工或提取新特征。</li><li>为什么要+1平滑，防止出现概率为0的情况。</li></ul><h2 id="优点："><a href="#优点：" class="headerlink" title="优点："></a>优点：</h2><p>贝叶斯不容易过拟合——异常值、缺失值概率极低，基本可以视为被舍弃了，所以受异常值影响比较低。</p><h1 id="层次聚类"><a href="#层次聚类" class="headerlink" title="层次聚类"></a>层次聚类</h1><h2 id="树形图"><a href="#树形图" class="headerlink" title="树形图"></a>树形图</h2><p><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-4-15.png" alt="机器学习-4-15"></p><h2 id="凝聚聚类（自下而上）"><a href="#凝聚聚类（自下而上）" class="headerlink" title="凝聚聚类（自下而上）"></a>凝聚聚类（自下而上）</h2><h2 id="分裂聚类（自上而下）"><a href="#分裂聚类（自上而下）" class="headerlink" title="分裂聚类（自上而下）"></a>分裂聚类（自上而下）</h2><h2 id="MST（最小生成树）"><a href="#MST（最小生成树）" class="headerlink" title="MST（最小生成树）"></a>MST（最小生成树）</h2><p><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-4-16.png" alt="机器学习-4-16"><br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-4-17.png" alt="机器学习-4-17"></p>]]></content>
      
      
      <categories>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
            <tag> 集成模型 </tag>
            
            <tag> 随机森林 </tag>
            
            <tag> Bagging </tag>
            
            <tag> Boosting </tag>
            
            <tag> 层次聚类 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>机器学习-3</title>
      <link href="/2023/05/28/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-3%20-%20ol/"/>
      <url>/2023/05/28/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-3%20-%20ol/</url>
      
        <content type="html"><![CDATA[<h1 id="特征选择"><a href="#特征选择" class="headerlink" title="特征选择"></a>特征选择</h1><h2 id="为什么要进行特征选择？"><a href="#为什么要进行特征选择？" class="headerlink" title="为什么要进行特征选择？"></a>为什么要进行特征选择？</h2><p>特征过多导致过拟合、有一些特征是噪音。</p><h2 id="特征选择技术"><a href="#特征选择技术" class="headerlink" title="特征选择技术:"></a>特征选择技术:</h2><p>1、 尝试所有组合：也是全局最优</p><p>2、贪心算法：每次决策都是基于当前情况去寻找最优解。计算过程：把特征加进去→是否更优？→是：加入模型&#x2F;否：淘汰</p><p>3、L1正则：目标函数为损失函数；特点：具有稀疏性</p><p>4、决策树：节点代表每个特征选择。优点：便于处理高维数据</p><p>5、相关性计算：一种脱离模型内部结构而直接分析特征$x_i$和标签y的相关性的方法。主要是计算向量相似度的方法。</p><p><strong>总结</strong>：都是对比了各个特征的优劣，如何计算优劣的方法不同。</p><h3 id="L1正则化"><a href="#L1正则化" class="headerlink" title="L1正则化"></a>L1正则化</h3><p>次梯度下降</p><h3 id="L1正则特征选择问题"><a href="#L1正则特征选择问题" class="headerlink" title="L1正则特征选择问题"></a>L1正则特征选择问题</h3><p>弹性网络回归</p><p>1、计算上：</p><p>（1）相关性：计算$x_i、y_i$，扔掉差的</p><p>（2）主成分：只计算$x_i$</p><h2 id="问题："><a href="#问题：" class="headerlink" title="问题："></a>问题：</h2><h3 id="（1）-为什么信息熵这么计算？"><a href="#（1）-为什么信息熵这么计算？" class="headerlink" title="（1） 为什么信息熵这么计算？"></a>（1） 为什么信息熵这么计算？</h3><p><img src="https://img2023.cnblogs.com/blog/2744125/202306/2744125-20230611180144810-1346942816.png"></p><p>信息熵在神经网络里面也叫交叉熵，所有二分类问题都是这么算的。交叉熵在预测对的时候p为0&#x2F;1，如果是0.5那么是不对的。</p><h3 id="（2）-贪心算法为什么降低了复杂度？"><a href="#（2）-贪心算法为什么降低了复杂度？" class="headerlink" title="（2） 贪心算法为什么降低了复杂度？"></a>（2） 贪心算法为什么降低了复杂度？</h3><p><img src="https://img2023.cnblogs.com/blog/2744125/202306/2744125-20230611180210074-1679322111.jpg"></p><p>假设使用贪心算法，有ABCDE五个选项，并两两组合。第一次先选D做组合，即DA、DB、DC、DE，下一次再选C做组合，这时候只用考虑CA、CB、CE，不用考虑CD，以此类推。</p><h3 id="（3）-L1正则化有什么缺点？"><a href="#（3）-L1正则化有什么缺点？" class="headerlink" title="（3） L1正则化有什么缺点？"></a>（3） L1正则化有什么缺点？</h3><p><img src="https://img2023.cnblogs.com/blog/2744125/202306/2744125-20230611180223120-1311862168.png"></p><p>有一些点被扔掉了，而且是随机扔掉的。我们希望挑一个全局最好的扔掉，但是它是挑一个局部最好的扔掉。</p><h1 id="决策树"><a href="#决策树" class="headerlink" title="决策树"></a>决策树</h1><h2 id="决策树的定义"><a href="#决策树的定义" class="headerlink" title="决策树的定义"></a>决策树的定义</h2><h2 id="决策树的分类："><a href="#决策树的分类：" class="headerlink" title="决策树的分类："></a>决策树的分类：</h2><p>1、分类决策树 &#x2F; 回归决策树</p><p>2、二叉树 &#x2F; 多叉树</p><h2 id="决策树算法："><a href="#决策树算法：" class="headerlink" title="决策树算法："></a>决策树算法：</h2><p>CART算法只能构建二叉树，其他算法可以构建多叉树</p><p>有些只可以做回归或者分类</p><h2 id="一颗决策树对应的决策边界："><a href="#一颗决策树对应的决策边界：" class="headerlink" title="一颗决策树对应的决策边界："></a>一颗决策树对应的决策边界：</h2><p>需要学习：1.树的形状  2. 每一个决策的阈值$\theta_1$  3. 叶节点的值</p><h2 id="好的特征特点："><a href="#好的特征特点：" class="headerlink" title="好的特征特点："></a>好的特征特点：</h2><p>分类后不确定性变小</p><h2 id="不确定性——信息熵"><a href="#不确定性——信息熵" class="headerlink" title="不确定性——信息熵"></a>不确定性——信息熵</h2><p>事情发生的概率很低：信息熵很高</p><p>事情发生的概率很高：信息熵很低</p><p>log取2信息量是比特，取1是奈特</p><p>决策树：<strong>原来的不确定性（划分前的）-分割后的不确定性（划分后的）&#x3D;不确定性的减小（信息熵-条件熵&#x3D;信息增益）</strong></p><p>信息增益最大的作为根节点：$f_2&gt;f_1$，所以$f_2$作为根节点</p><h2 id="问题：-1"><a href="#问题：-1" class="headerlink" title="问题："></a>问题：</h2><h3 id="（1）决策树的根节点和叶节点代表什么？"><a href="#（1）决策树的根节点和叶节点代表什么？" class="headerlink" title="（1）决策树的根节点和叶节点代表什么？"></a>（1）决策树的根节点和叶节点代表什么？</h3><p>根节点：输入方向；叶节点：判别指标，就是分为哪一类。也就是说，根节点是指标，最后那个叶节点是标签。根节点是输入，叶节点是输出。</p><h3 id="（2）决策树的作用"><a href="#（2）决策树的作用" class="headerlink" title="（2）决策树的作用"></a>（2）决策树的作用</h3><p>决策树的作用：分类和回归。注意：三种树只有CART才能做回归。</p><h3 id="（3）决策树的决策边界和线性回归的边界有什么区别？"><a href="#（3）决策树的决策边界和线性回归的边界有什么区别？" class="headerlink" title="（3）决策树的决策边界和线性回归的边界有什么区别？"></a>（3）决策树的决策边界和线性回归的边界有什么区别？</h3><p>之前线性回归边界都是二分类，现在决策边界可以包含多分类，可以有多个区域。</p><h3 id="（4）信息熵为什么取对数？"><a href="#（4）信息熵为什么取对数？" class="headerlink" title="（4）信息熵为什么取对数？"></a>（4）信息熵为什么取对数？</h3><p>避免他们之间的差距过大，比如一个概率是log0.01，另一个是log0.09。<br><img src="https://img2023.cnblogs.com/blog/2744125/202306/2744125-20230611180241610-2007977055.png"></p><p>上面0.01次方和0.02次方差距会很明显，混乱程度会加剧，从而更容易做决策。</p><p><strong>数据处理取对数：核心是为了差距变得更大（0-1之间）或更小（1以上）</strong></p><h3 id="（5）信息熵是做什么的？"><a href="#（5）信息熵是做什么的？" class="headerlink" title="（5）信息熵是做什么的？"></a>（5）信息熵是做什么的？</h3><p>信息熵就是在算平均信息量。</p><h1 id="构建决策树"><a href="#构建决策树" class="headerlink" title="构建决策树"></a>构建决策树</h1><h2 id="问题：-2"><a href="#问题：-2" class="headerlink" title="问题："></a>问题：</h2><h3 id="（1）特征一样、标签不一样的数据要不要删除？"><a href="#（1）特征一样、标签不一样的数据要不要删除？" class="headerlink" title="（1）特征一样、标签不一样的数据要不要删除？"></a>（1）特征一样、标签不一样的数据要不要删除？</h3><p>这种数据不能删，因为这种数据会提供一定的不确定性，如果删掉信息熵会一下子降低，会导致结果变得很差。</p><h3 id="（2）决策树中唯一路径是什么？"><a href="#（2）决策树中唯一路径是什么？" class="headerlink" title="（2）决策树中唯一路径是什么？"></a>（2）决策树中唯一路径是什么？</h3><p>给一条路径，可以一条路走到底的。</p><h3 id="（3）什么是深度？"><a href="#（3）什么是深度？" class="headerlink" title="（3）什么是深度？"></a>（3）什么是深度？</h3><p>做几次判断，深度就有多少。最大的判断值为树的深度。</p><h3 id="（4）什么时候不用继续分类？"><a href="#（4）什么时候不用继续分类？" class="headerlink" title="（4）什么时候不用继续分类？"></a>（4）什么时候不用继续分类？</h3><p> 一条路走到底，都是F或者都是N，就可以不用继续分类。</p><h3 id="（5）同一个样本，结果既是F也是N，这是什么情况？"><a href="#（5）同一个样本，结果既是F也是N，这是什么情况？" class="headerlink" title="（5）同一个样本，结果既是F也是N，这是什么情况？"></a>（5）同一个样本，结果既是F也是N，这是什么情况？</h3><p>同个标签但又F和N，这条样本是在决策边界上，这类数据的作用是告诉你什么地方是决策边界。这类样本是不能删除的。</p><h1 id="决策树性能"><a href="#决策树性能" class="headerlink" title="决策树性能"></a>决策树性能</h1><p>决策树性能：提升性能——防止过拟合，越简单越好</p><h2 id="如何避免决策树的过拟合？"><a href="#如何避免决策树的过拟合？" class="headerlink" title="如何避免决策树的过拟合？"></a>如何避免决策树的过拟合？</h2><p>最大深度对模型准确率的影响</p><h2 id="问题：-3"><a href="#问题：-3" class="headerlink" title="问题："></a>问题：</h2><h3 id="（1）决策树过拟合有哪些原因？"><a href="#（1）决策树过拟合有哪些原因？" class="headerlink" title="（1）决策树过拟合有哪些原因？"></a>（1）决策树过拟合有哪些原因？</h3><ol><li><p>数据不行：有用的特征都没有，如学习成绩和他平时吃什么。</p></li><li><p>特征样本里出现噪声</p></li><li><p>某个地方信息熵有错误，随着迭代错误越来越放大</p></li></ol><p><strong>解决方法：</strong></p><ol><li><p>剪枝（修改一些叶节点）  </p></li><li><p>设置最大深度  </p></li><li><p>集成学习</p></li></ol><h3 id="（2）多重比较是什么？"><a href="#（2）多重比较是什么？" class="headerlink" title="（2）多重比较是什么？"></a>（2）多重比较是什么？</h3><p>每次进行比较的时候都会出现错误，树的深度一旦大了，会涉及到一个过多的比较过程，错误会越来越多，误差也会随之累加起来，变得越来越大。</p><h1 id="回归树如何构建"><a href="#回归树如何构建" class="headerlink" title="回归树如何构建"></a>回归树如何构建</h1><p>回归问题中量化不确定性：标准差（分类是信息熵）</p><h2 id="问题：-4"><a href="#问题：-4" class="headerlink" title="问题："></a>问题：</h2><h3 id="（1）回归树和分类树的区别？"><a href="#（1）回归树和分类树的区别？" class="headerlink" title="（1）回归树和分类树的区别？"></a>（1）回归树和分类树的区别？</h3><p>计算方法：回归树选择根节点是用标准差来选，分类树是信息熵去选。条件熵是差不多的</p><h3 id="（2）回归树中如何确定标签？"><a href="#（2）回归树中如何确定标签？" class="headerlink" title="（2）回归树中如何确定标签？"></a>（2）回归树中如何确定标签？</h3><p>决策树分裂完是同一个标签，是或者否。而回归树是有一个阈值的，就是标准差小于某个数字，那么分类就结束了。</p><p><img src="https://img2023.cnblogs.com/blog/2744125/202306/2744125-20230611180303180-350146696.png"></p>]]></content>
      
      
      <categories>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
            <tag> 特征选择 </tag>
            
            <tag> 决策树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>matery主题设置</title>
      <link href="/2023/05/22/7.matery%E4%B8%BB%E9%A2%98%E8%AE%BE%E7%BD%AE/"/>
      <url>/2023/05/22/7.matery%E4%B8%BB%E9%A2%98%E8%AE%BE%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<p>来源：<a href="https://xmq.plus/posts/2547c616.html#toc-heading-47">肆零肆的博客</a></p><hr><h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><p>Hexo主题搭建好处：</p><ul><li>主题种类多，可选择多种<a href="https://hexo.io/themes/">主题</a></li><li>帮助<a href="https://hexo.io/zh-cn/docs/">文档</a>友好</li></ul><p>Matery主题特性：</p><ul><li>界面美观</li><li>功能丰富</li><li>动效效果丰富</li><li>配置齐全</li><li>完善稳定</li></ul><p>搭建目的和用途：</p><ul><li><p>个性定制自由度高，完全可以按照自己的意图设计想要的网站</p></li><li><p>做学习笔记</p></li><li><p>学习分享</p></li><li><p>资源分享</p></li></ul><p>使用github静态网站托管平台搭建个人博客的理由：</p><ul><li><p>成本低</p></li><li><p>不需要维护服务器</p></li><li><p>可绑定个性域名</p></li></ul><h2 id="二、安装准备"><a href="#二、安装准备" class="headerlink" title="二、安装准备"></a>二、安装准备</h2><h3 id="1-搭建环境"><a href="#1-搭建环境" class="headerlink" title="1.搭建环境"></a>1.搭建环境</h3><ul><li><code>Git</code>：将本地文件上传到<code>GitHub</code></li></ul><blockquote><p>下载地址：Git</p></blockquote><ul><li><code>nodejs</code>：<code>Hexo</code>博客基于<code>node.js</code>编写</li></ul><blockquote><p>下载地址：nodejs</p></blockquote><h3 id="2-安装软件"><a href="#2-安装软件" class="headerlink" title="2.安装软件"></a>2.安装软件</h3><ul><li><a href="https://code.visualstudio.com/">Visual Studio Code</a>（适合有开发基础的程序员，非常好用）</li><li>Sublime Text3，可免费使用，<a href="https://pan.baidu.com/s/1uKA-aBHm_CsmJI5GolrV1Q">百度网盘</a>（提取码：mh0y）</li></ul><blockquote><p>定制修改博客时，所用的文本编辑器软件</p></blockquote><h3 id="3-Github注册与Github-pages创建"><a href="#3-Github注册与Github-pages创建" class="headerlink" title="3.Github注册与Github pages创建"></a>3.Github注册与Github pages创建</h3><h3 id="4-基础配置"><a href="#4-基础配置" class="headerlink" title="4.基础配置"></a>4.基础配置</h3><ul><li>添加国内镜像源</li><li>生成SSH添加到Github</li></ul><h2 id="三、搭建博客"><a href="#三、搭建博客" class="headerlink" title="三、搭建博客"></a>三、搭建博客</h2><h3 id="1-本地安装hexo静态博客框架"><a href="#1-本地安装hexo静态博客框架" class="headerlink" title="1.本地安装hexo静态博客框架"></a>1.本地安装hexo静态博客框架</h3><ul><li>安装<code>hexo</code></li></ul><p>首先选择一个位置作为你博客文件的存放位置，然后新建一个文件夹，比如名为<code>MyBolg</code>的文件夹，创建完后，先不要点进去，在此处点击鼠标右键，选择<code>Git Bash Here</code>，然后依次输入如下命令：</p><pre class="language-bash" data-language="bash"><code class="language-bash">npm install -g hexo-cli # 安装hexo框架hexo -v # 有版本信息输出代表安装成功hexo init MyBlog #初始化文件夹cd MyBlognpm install  # 安装博客所需要的依赖文件</code></pre><p><img src="https://images.xmq.plus/20200821130956.png" alt="hexo init"></p><p><strong>hexo init</strong></p><p>等待运行完成，此时文件夹中多了许多文件。 注意：后续的命令均需要在站点目录下（即文件夹内）使用 Git Bash 运行。 此时 Hexo 框架的本地搭建已经完成了。我们来运行一下看看:</p><pre class="language-bash" data-language="bash"><code class="language-bash">hexo s</code></pre><p><img src="https://images.xmq.plus/20200821131206.png" alt="hexo s"></p><p><strong>hexo s</strong></p><p>浏览器中打开 <a href="http://locakhost:4000/">http://locakhost:4000</a> 或者 127.0.0.1:4000，可以看到一个网页，说明 Hexo 博客已经成功在本地运行。</p><h3 id="2-切换主题"><a href="#2-切换主题" class="headerlink" title="2.切换主题"></a>2.切换主题</h3><ul><li><p>解压下载好的<code>hexo-theme-matery</code>博客主题</p></li><li><p>将解压文件拷贝至<code>/Myblog/themes/</code>目录文件下，并重命名为<code>matery</code></p></li><li><p>删除原有<code>landscape</code>主题（可不删除）</p></li><li><p>进入博客站点目录(<code>MyBlog/</code>)，用文本编辑器打开<code>_config.yml</code>（或者使用<code>Vim/vi</code>编辑文本）<br><code>_config.yml</code> 是Hexo博客的全局配置文件，在以后的博客修改，如个性化修改，博客 SEO 优化等都会使用到</p></li><li><p>将文件中101行位置<code>theme</code>选项中的<code>landscape</code>主题命名为<code>matery</code>,保存并退出</p><p><img src="https://images.xmq.plus/20200821132634.png" alt="matery config"></p><p><strong>matery config</strong></p></li></ul><p>重新<code>hexo cl &amp;&amp; hexo g &amp;&amp; hexo s</code>一次可看到切换主题成功</p><p><img src="https://images.xmq.plus/20200821133442.jpg" alt="切换主题"></p><p><strong>切换主题</strong></p><p>到此，博客本地搭建完成，接下来定制和优化博客</p><h3 id="3-部署到GitHub-pages"><a href="#3-部署到GitHub-pages" class="headerlink" title="3.部署到GitHub pages"></a>3.部署到GitHub pages</h3><p>生成<code>SSH</code>添加到<code>GitHub</code>，连接<code>Github</code>与本地。<br>右键打开<code>git bash</code>，然后输入下面命令：</p><pre class="language-git" data-language="git"><code class="language-git">git config --global user.name &quot;yourname&quot;git config --global user.email &quot;youremail&quot;</code></pre><p>这里的<code>yourname</code>输入你的<code>GitHub</code>用户名，<code>youremail</code>输入你<code>GitHub</code>的邮箱。这样<code>GitHub</code>才能知道你是不是对应它的账户。可以用以下两条，检查一下你有没有输对</p><pre class="language-git" data-language="git"><code class="language-git">git config user.namegit config user.email</code></pre><p>然后创建<code>SSH</code>,一路回车</p><pre class="language-git" data-language="git"><code class="language-git">ssh-keygen -t rsa -C &quot;youremail&quot;</code></pre><p>这个时候它会告诉你已经生成了<code>.ssh</code>的文件夹。在你的电脑中找到这个文件夹。或者<code>git bash</code>中输入</p><pre class="language-bash" data-language="bash"><code class="language-bash">cat ~&#x2F;.ssh&#x2F;id_rsa.pub</code></pre><p>将输出的内容复制到框中，点击确定保存。</p><p>打开<a href="http://github.com/">github</a>，在头像下面点击<code>settings</code>，再点击<code>SSH and GPG keys</code>，新建一个<code>SSH</code>，名字随便取一个都可以，把你的<code>id_rsa.pub</code>里面的信息复制进去。如图：</p><p><img src="https://raw.githubusercontent.com/shw2018/cdn/master/blog_files/img/Hexo-Blog-Tutorial/6.png" alt="img"></p><p><strong>img</strong></p><p>在<code>git bash</code>输入<code>ssh -T git@github.com</code>，如果如下图所示，出现你的用户名，那就成功了。</p><p><img src="https://raw.githubusercontent.com/shw2018/cdn/master/blog_files/img/Hexo-Blog-Tutorial/7.png" alt="img"></p><p><strong>img</strong></p><p>安装hexo部署到github pages工具</p><pre class="language-bash" data-language="bash"><code class="language-bash">npm install hexo-deployer-git --save</code></pre><p>然后</p><pre class="language-bash" data-language="bash"><code class="language-bash">hexo cleanhexo generatehexo deploy</code></pre><p>其中 <code>hexo clean</code>清除了你之前生成的东西，也可以不加。 <code>hexo generate</code>顾名思义，生成静态文章，可以用 <code>hexo g</code>缩写 ，<code>hexo deploy</code>部署文章，可以用<code>hexo d</code>缩写</p><blockquote><p>注意<code>deploy</code>时可能要你输入<code>username</code>和<code>password</code>。</p></blockquote><h2 id="四、基本定制博客"><a href="#四、基本定制博客" class="headerlink" title="四、基本定制博客"></a>四、基本定制博客</h2><p>参照<a href="https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md">Hexo-theme-mater_Readme.md</a>对博客主题进行基本的设置：</p><h3 id="1-初始页面"><a href="#1-初始页面" class="headerlink" title="1.初始页面"></a>1.初始页面</h3><p>主题中带有的某些页面还未生成，不能正常打开，需要在<code>hexo</code>中先生成新建页面:</p><ul><li>新建分类 categories 页</li></ul><p><code>categories</code> 页是用来展示所有分类的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>categories/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class="language-bash" data-language="bash"><code class="language-bash">hexo new page &quot;categories&quot;</code></pre><p>编辑你刚刚新建的页面文件 <code>/source/categories/index.md</code>，至少需要以下内容：</p><pre class="language-none"><code class="language-none">---title: categoriesdate: 2018-09-30 17:25:30type: &quot;categories&quot;layout: &quot;categories&quot;---</code></pre><ul><li>新建标签 tags 页</li></ul><p><code>tags</code> 页是用来展示所有标签的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>tags/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class="language-bash" data-language="bash"><code class="language-bash">hexo new page &quot;tags&quot;</code></pre><p>编辑你刚刚新建的页面文件 <code>/source/tags/index.md</code>，至少需要以下内容：</p><pre class="language-none"><code class="language-none">---title: tagsdate: 2018-09-30 18:23:38type: &quot;tags&quot;layout: &quot;tags&quot;---</code></pre><ul><li>新建关于我 about 页</li></ul><p><code>about</code> 页是用来展示<strong>关于我和我的博客</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>about/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class="language-bash" data-language="bash"><code class="language-bash">hexo new page &quot;about&quot;</code></pre><p>编辑你刚刚新建的页面文件 <code>/source/about/index.md</code>，至少需要以下内容：</p><pre class="language-none"><code class="language-none">---title: aboutdate: 2018-09-30 17:25:30type: &quot;about&quot;layout: &quot;about&quot;---</code></pre><ul><li>新建留言板 contact 页（可选的）</li></ul><p><code>contact</code> 页是用来展示<strong>留言板</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>contact/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class="language-bash" data-language="bash"><code class="language-bash">hexo new page &quot;contact&quot;</code></pre><p>编辑你刚刚新建的页面文件 <code>/source/contact/index.md</code>，至少需要以下内容：</p><pre class="language-none"><code class="language-none">---title: contactdate: 2018-09-30 17:25:30type: &quot;contact&quot;layout: &quot;contact&quot;---</code></pre><blockquote><p><strong>注</strong>：本留言板功能依赖于第三方评论系统，请<strong>激活</strong>你的评论系统才有效果。并且在主题的 <code>_config.yml</code> 文件中，第 <code>19</code> 至 <code>21</code> 行的“<strong>菜单</strong>”配置，取消关于留言板的注释即可。</p></blockquote><ul><li>新建友情链接 friends 页（可选的）</li></ul><p><code>friends</code> 页是用来展示<strong>友情链接</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>friends/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class="language-bash" data-language="bash"><code class="language-bash">hexo new page &quot;friends&quot;</code></pre><p>编辑你刚刚新建的页面文件 <code>/source/friends/index.md</code>，至少需要以下内容：</p><pre class="language-none"><code class="language-none">---title: friendsdate: 2018-12-12 21:25:30type: &quot;friends&quot;layout: &quot;friends&quot;---</code></pre><p>同时，在你的博客 <code>source</code> 目录下新建 <code>_data</code> 目录，在 <code>_data</code> 目录中新建 <code>friends.json</code> 文件，文件内容如下所示：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript">[&#123;    &quot;avatar&quot;: &quot;http:&#x2F;&#x2F;image.luokangyuan.com&#x2F;1_qq_27922023.jpg&quot;,    &quot;name&quot;: &quot;码酱&quot;,    &quot;introduction&quot;: &quot;我不是大佬，只是在追寻大佬的脚步&quot;,    &quot;url&quot;: &quot;http:&#x2F;&#x2F;luokangyuan.com&#x2F;&quot;,    &quot;title&quot;: &quot;前去学习&quot;&#125;, &#123;    &quot;avatar&quot;: &quot;http:&#x2F;&#x2F;image.luokangyuan.com&#x2F;4027734.jpeg&quot;,    &quot;name&quot;: &quot;闪烁之狐&quot;,    &quot;introduction&quot;: &quot;编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬&quot;,    &quot;url&quot;: &quot;https:&#x2F;&#x2F;blinkfox.github.io&#x2F;&quot;,    &quot;title&quot;: &quot;前去学习&quot;&#125;, &#123;    &quot;avatar&quot;: &quot;http:&#x2F;&#x2F;image.luokangyuan.com&#x2F;avatar.jpg&quot;,    &quot;name&quot;: &quot;ja_rome&quot;,    &quot;introduction&quot;: &quot;平凡的脚步也可以走出伟大的行程&quot;,    &quot;url&quot;: &quot;https:&#x2F;&#x2F;me.csdn.net&#x2F;jlh912008548&quot;,    &quot;title&quot;: &quot;前去学习&quot;&#125;]</code></pre><p>初始页面全部搞定，现在主题的页面都能正常打开了。</p><h3 id="2-代码简化与基本配置"><a href="#2-代码简化与基本配置" class="headerlink" title="2.代码简化与基本配置"></a>2.代码简化与基本配置</h3><p>好处：简化代码，剔除不适用不必要的功能，提高可读性，方便后期调整和他人学习。</p><h4 id="Hexo全局配置优化"><a href="#Hexo全局配置优化" class="headerlink" title="Hexo全局配置优化"></a><code>Hexo</code>全局配置优化</h4><pre class="language-yaml" data-language="yaml"><code class="language-yaml"># 站点title: 肆零肆 #网站标题subtitle: &#39;肆零肆  | 学习记录&#39; #网站副标题description: &#39;&#39; #网站描述keywords: #关键词，seo优化author: Sumsung #作者language: zh-CN #语言timezone: &#39;&#39; #时区# URL## 如果你的网站不是放在网站根目录下，将URL设置为&#39;http:&#x2F;&#x2F;yoursite.com&#x2F;child&#39;；root： &#39;&#x2F;child&#x2F;&#39;url: http:&#x2F;&#x2F;yoursite.comroot: &#x2F;permalink: :year&#x2F;:month&#x2F;:day&#x2F;:title&#x2F;permalink_defaults:pretty_urls:  trailing_index: false # 是否在永久链接中保留尾部的 index.html，设置为 false 时去除  trailing_html: false # 是否在永久链接中保留尾部的.html, 设置为false时去除(对尾部的index.html无效)# 目录source_dir: sourcepublic_dir: publictag_dir: tagsarchive_dir: archivescategory_dir: categoriescode_dir: downloads&#x2F;codei18n_dir: :langskip_render:# 文章new_post_name: :title.md # 新建博客文章名称default_layout: post #默认写作布置titlecase: false # 把标题转换为 title caseexternal_link:  enable: true # 在新标签中打开链接  field: site   exclude: &#39;&#39; #需要排除的域名。主域名和子域名如 www 需分别配置filename_case: 0render_drafts: falsepost_asset_folder: falserelative_link: falsefuture: truehighlight:  enable: true  line_number: true  auto_detect: false  tab_replace: &#39;&#39;  wrap: true  hljs: falseprismjs:  enable: false  preprocess: true  line_number: true  tab_replace: &#39;&#39;#主页设置# path:博客首页的根目录 (默认 &#x3D; &#39;&#39;)# per_page: 每页显示的博客文章数量. (0 &#x3D; 关闭分页功能)# order_by: Posts order. (Order by date descending by default)index_generator:  path: &#39;&#39;  per_page: 10  order_by: -date# &quot;分类&quot;和&quot;标签&quot;页default_category: uncategorizedcategory_map:tag_map:meta_generator: true# 日期&#x2F;时间格式## 详情:http:&#x2F;&#x2F;momentjs.com&#x2F;docs&#x2F;#&#x2F;displaying&#x2F;format&#x2F;date_format: YYYY-MM-DDtime_format: HH:mm:ssupdated_option: &#39;mtime&#39;# 分页per_page: 10 # 0 &#x3D; 关闭分页功能pagination_dir: page# Include &#x2F; Exclude file(s) include:&#x2F;exclude: options only apply to the &#39;source&#x2F;&#39; folderinclude:exclude:ignore:# 扩展## 插件访问: https:&#x2F;&#x2F;hexo.io&#x2F;plugins&#x2F;## 主题访问: https:&#x2F;&#x2F;hexo.io&#x2F;themes&#x2F;theme: matery #使用的博客主题# 部署## 部署访问: https:&#x2F;&#x2F;hexo.io&#x2F;docs&#x2F;one-command-deploymentdeploy:  type: &#39;&#39;</code></pre><blockquote><p>Hexo官方全局设置说明文档：<a href="https://hexo.io/zh-cn/docs/configuration.html">Hexo.io</a></p></blockquote><h4 id="Hexo主题全局配置文件-config-yml优化"><a href="#Hexo主题全局配置文件-config-yml优化" class="headerlink" title="Hexo主题全局配置文件_config.yml优化"></a><code>Hexo</code>主题全局配置文件<code>_config.yml</code>优化</h4><p>主要的操作有：</p><ul><li>菜单导航配置</li></ul><p>菜单导航名称可以是中文也可以是英文(如：<code>Index</code>或<code>主页</code>)</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"># 二级菜单写法如下  Medias:    icon: fas fa-list    children:      - name: Musics        url: &#x2F;musics        icon: fas fa-music      - name: Movies        url: &#x2F;movies        icon: fas fa-film      - name: Books        url: &#x2F;books        icon: fas fa-book      - name: Galleries        url: &#x2F;galleries        icon: fas fa-image</code></pre><ul><li>配置基本菜单导航的名称、路径url和图标icon.</li></ul><p>图标icon 可以在<a href="https://fontawesome.com/icons">Font Awesome</a> 中查找</p><h3 id="3-删除无用文件"><a href="#3-删除无用文件" class="headerlink" title="3.删除无用文件"></a>3.删除无用文件</h3><ul><li>&#x2F;themes&#x2F;matery&#x2F;Readme.md</li><li>&#x2F;themes&#x2F;matery&#x2F;README_CN.md</li><li>&#x2F;themes&#x2F;matery&#x2F;LICENSE</li><li>&#x2F;layout&#x2F;_partial&#x2F;github-link.ejs</li><li>sources&#x2F;libs&#x2F;others&#x2F;busuanzi.pure.mini.js</li><li>&#x2F;layout&#x2F;_partial&#x2F;gitalk.ejs</li><li>&#x2F;layout&#x2F;_partial&#x2F;gitment.ejs</li><li>&#x2F;layout&#x2F;_partial&#x2F;gitment.ejs</li><li>&#x2F;layout&#x2F;_partial&#x2F;disqus.ejs</li><li>&#x2F;layout&#x2F;_partial&#x2F;livere.ejs</li><li>&#x2F;layout&#x2F;_partial&#x2F;minivaline.ejs</li></ul><h3 id="4-插件安装及配置"><a href="#4-插件安装及配置" class="headerlink" title="4.插件安装及配置"></a>4.插件安装及配置</h3><h4 id="代码高亮"><a href="#代码高亮" class="headerlink" title="代码高亮"></a>代码高亮</h4><p>由于 Hexo 自带的代码高亮主题显示不好看，所以主题中使用到了 <a href="https://github.com/ele828/hexo-prism-plugin">hexo-prism-plugin</a> 的 Hexo 插件来做代码高亮，安装命令如下：</p><pre class="language-bash" data-language="bash"><code class="language-bash">npm i -S hexo-prism-plugin</code></pre><p>然后，修改 Hexo 根目录下 <code>_config.yml</code> 文件中 <code>highlight.enable</code> 的值为 <code>false</code>，并新增 <code>prism</code> 插件相关的配置，主要配置如下：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml">highlight:  enable: falseprism_plugin:  mode: &#39;preprocess&#39;    # realtime&#x2F;preprocess  theme: &#39;tomorrow&#39;  line_number: false    # default false  custom_css:</code></pre><h3 id="修复代码块行号不显示bug"><a href="#修复代码块行号不显示bug" class="headerlink" title="修复代码块行号不显示bug"></a>修复代码块行号不显示bug</h3><p>修改<code>themes/matery/source/css/matery.css</code>第95行左右的<code>pre</code>和<code>code</code>两段改为如下代码：</p><pre class="language-css" data-language="css"><code class="language-css">pre &#123;    &#x2F;* padding: 1.5rem !important; *&#x2F;    padding: 1.5rem 1.5rem 1.5rem 3.3rem !important;    margin: 1rem 0 !important;    background: #272822;    overflow: auto;    border-radius: 0.35rem;    tab-size: 4;&#125;code &#123;    padding: 1px 5px;    font-family: Inconsolata, Monaco, Consolas, &#39;Courier New&#39;, Courier, monospace;    &#x2F;* font-size: 0.91rem; *&#x2F;    color: #e96900;    background-color: #f8f8f8;    border-radius: 2px;&#125;</code></pre><p>Css</p><p>然后在根目录的<code>_config.yml</code>中设置<code>prism_plugin.line_number</code>为<code>true</code></p><h4 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h4><p>本主题中还使用到了 <a href="https://github.com/wzpan/hexo-generator-search">hexo-generator-search</a> 的 Hexo 插件来做内容搜索，安装命令如下：</p><pre class="language-bash" data-language="bash"><code class="language-bash">npm install hexo-generator-search --save</code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml">search:  path: search.xml  field: post</code></pre><h4 id="文章字数统计插件"><a href="#文章字数统计插件" class="headerlink" title="文章字数统计插件"></a>文章字数统计插件</h4><p>如果你想要在文章中显示文章字数、阅读时长信息，可以安装 <a href="https://github.com/willin/hexo-wordcount">hexo-wordcount</a>插件。</p><p>安装命令如下：</p><pre class="language-bash" data-language="bash"><code class="language-bash">npm i --save hexo-wordcount</code></pre><p>然后只需在本主题下的 <code>_config.yml</code> 文件中，将各个文章字数相关的配置激活即可：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml">postInfo:  date: true  update: false  wordCount: false # 设置文章字数统计为 true.  totalCount: false # 设置站点文章总字数统计为 true.  min2read: false # 阅读时长.  readCount: false # 阅读次数.</code></pre><h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><ul><li>添加emoji表情支持（可选的）</li></ul><p>本主题新增了对<code>emoji</code>表情的支持，使用到了 <a href="https://npm.taobao.org/package/hexo-filter-github-emojis">hexo-filter-github-emojis</a> 的 Hexo 插件来支持 <code>emoji</code>表情的生成，把对应的<code>markdown emoji</code>语法（<code>::</code>,例如：<code>:smile:</code>）转变成会跳跃的<code>emoji</code>表情，安装命令如下：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml">npm install hexo-filter-github-emojis --save</code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml">githubEmojis:  enable: true  className: github-emoji  inject: true  styles:  customEmojis:</code></pre><ul><li>添加 RSS 订阅支持（可选的）</li></ul><p>本主题中还使用到了 <a href="https://github.com/hexojs/hexo-generator-feed">hexo-generator-feed</a> 的 Hexo 插件来做 <code>RSS</code>，安装命令如下：</p><pre class="language-bash" data-language="bash"><code class="language-bash">npm install hexo-generator-feed --save</code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml">feed:  type: atom  path: atom.xml  limit: 20  hub:  content:  content_limit: 140  content_limit_delim: &#39; &#39;  order_by: -date</code></pre><p>执行 <code>hexo clean &amp;&amp; hexo g</code> 重新生成博客文件，然后在 <code>public</code> 文件夹中即可看到 <code>atom.xml</code> 文件，说明你已经安装成功了。</p><ul><li>中文链接转拼音（建议安装）</li></ul><p>如果你的文章名称是中文的，那么 Hexo 默认生成的永久链接也会有中文，这样不利于 <code>SEO</code>，且 <code>gitment</code> 评论对中文链接也不支持。我们可以用 <a href="https://github.com/viko16/hexo-permalink-pinyin">hexo-permalink-pinyin</a> Hexo 插件使在生成文章时生成中文拼音的永久链接。</p><p>安装命令如下：</p><pre class="language-bash" data-language="bash"><code class="language-bash">npm i hexo-permalink-pinyin --save</code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml">permalink_pinyin:  enable: true  separator: &#39;-&#39; # default: &#39;-&#39;</code></pre><blockquote><p><strong>注</strong>：除了此插件外，<a href="https://github.com/rozbo/hexo-abbrlink">hexo-abbrlink</a> 插件也可以生成非中文的链接。</p></blockquote><ul><li>添加 <a href="http://www.daovoice.io/">DaoVoice</a> 在线聊天功能（可选的）</li></ul><p>前往 <a href="http://www.daovoice.io/">DaoVoice</a> 官网注册并且获取 <code>app_id</code>，并将 <code>app_id</code> 填入主题的 <code>_config.yml</code> 文件中。</p><ul><li>添加 <a href="https://www.tidio.com/">Tidio</a> 在线聊天功能（可选的）</li></ul><p>前往 <a href="https://www.tidio.com/">Tidio</a> 官网注册并且获取 <code>Public Key</code>，并将 <code>Public Key</code> 填入主题的 <code>_config.yml</code> 文件中。</p><h2 id="五、深入定制博客"><a href="#五、深入定制博客" class="headerlink" title="五、深入定制博客"></a>五、深入定制博客</h2><h4 id="修改首页开始阅读字样"><a href="#修改首页开始阅读字样" class="headerlink" title="修改首页开始阅读字样"></a>修改首页开始阅读字样</h4><p>打开<code>index-cover.ejs</code>修改字段为<code>&lt;%= theme.indexbtn.index %&gt;</code>：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript">&lt;a href&#x3D;&quot;#indexCard&quot; class&#x3D;&quot;waves-effect waves-light btn&quot;&gt;    &lt;i class&#x3D;&quot;fa fa-angle-double-down&quot;&gt;&lt;&#x2F;i&gt;&lt;%&#x3D; theme.indexbtn.index %&gt;&lt;&#x2F;a&gt;</code></pre><p>并在主题配置文件中加入indexbtn选项下添加index选项：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml">indexbtn:  enable: true  index: 学习记录  name: 导航网站  icon: fas fa-location-arrow  url: &#x2F;navigation</code></pre><h4 id="更改Logo及背景图片"><a href="#更改Logo及背景图片" class="headerlink" title="更改Logo及背景图片"></a>更改Logo及背景图片</h4><ul><li><p>更改网站标题LOGO<br>替换MyBolg&#x2F;themes&#x2F;matery&#x2F;source&#x2F;favicon.png</p></li><li><p>更改网页LOGO<br>替换MyBolg&#x2F;themes&#x2F;matery&#x2F;source&#x2F;medias&#x2F;logo.png</p></li><li><p>更改关于页面头像<br>将主题文件下_config.yml中设置<code>avatar:/medias/avatar.png</code>替换MyBolg&#x2F;themes&#x2F;matery&#x2F;source&#x2F;medias&#x2F;avatar.png</p></li><li><p>更改网页背景图片</p><p>替换MyBolg&#x2F;themes&#x2F;matery&#x2F;source&#x2F;medias&#x2F;banner中图片</p></li><li><p>更改特征图</p><p>替换MyBolg&#x2F;themes&#x2F;matery&#x2F;source&#x2F;medias&#x2F;featureimages中图片</p></li><li><p>更改打赏二维码</p><p>替换MyBolg&#x2F;themes&#x2F;matery&#x2F;source&#x2F;medias&#x2F;reward中图片</p></li></ul><h4 id="修改主题颜色"><a href="#修改主题颜色" class="headerlink" title="修改主题颜色"></a>修改主题颜色</h4><p>在主题文件的 <code>/source/css/matery.css</code> 文件中，搜索 <code>.bg-color</code> 来修改背景颜色：</p><pre class="language-css" data-language="css"><code class="language-css">&#x2F;* 整体背景颜色，包括导航、移动端的导航、页尾、标签页等的背景颜色.将渐变改成单色 *&#x2F;.bg-color &#123;    background-image: linear-gradient(to right, #000000 0%, #000000 100%);&#125;&#x2F;*使用&#x2F;**&#x2F;屏蔽代码或直接删除代码，关闭背景图片滤镜效果*&#x2F;&#x2F;*@-webkit-keyframes rainbow &#123;    0%,    100% &#123;        background: rgba(156, 39, 176, 0.75);        background: linear-gradient(45deg, rgba(156, 39, 176, 0.75) 0%, rgba(156, 39, 176, 0.65) 100%);        background: -moz-linear-gradient(135deg, rgba(156, 39, 176, 0.75) 0%, rgba(156, 39, 176, 0.65) 100%);        background: -webkit-linear-gradient(135deg, rgba(156, 39, 176, 0.75) 0%, rgba(156, 39, 176, 0.65) 100%);    &#125;    16% &#123;        background: rgba(132, 13, 121, 0.75);        background: linear-gradient(45deg, rgba(132, 13, 121, 0.75) 0%, rgba(132, 13, 121, 0.65) 100%);        background: -moz-linear-gradient(135deg, rgba(132, 13, 121, 0.75) 0%, rgba(132, 13, 121, 0.65) 100%);        background: -webkit-linear-gradient(135deg, rgba(132, 13, 121, 0.75) 0%, rgba(132, 13, 121, 0.65) 100%);    &#125;    32% &#123;        background: rgba(239, 83, 80, 0.75);        background: linear-gradient(45deg, rgba(239, 83, 80, 0.75) 0%, rgba(239, 83, 80, 0.65) 100%);        background: -moz-linear-gradient(135deg, rgba(239, 83, 80, 0.75) 0%, rgba(239, 83, 80, 0.65) 100%);        background: -webkit-linear-gradient(135deg, rgba(239, 83, 80, 0.75) 0%, rgba(239, 83, 80, 0.65) 100%);    &#125;    48% &#123;        background: rgba(255, 87, 34, 0.75);        background: linear-gradient(45deg, rgba(255, 87, 34, 0.75) 0%, rgba(255, 87, 34, 0.65) 100%);        background: -moz-linear-gradient(135deg, rgba(255, 87, 34, 0.75) 0%, rgba(255, 87, 34, 0.65) 100%);        background: -webkit-linear-gradient(135deg, rgba(255, 87, 34, 0.75) 0%, rgba(255, 87, 34, 0.65) 100%);    &#125;    64% &#123;        background: rgba(255, 160, 0, 0.75);        background: linear-gradient(45deg, rgba(255, 160, 0, 0.75) 0%, rgba(255, 160, 0, 0.65) 100%);        background: -moz-linear-gradient(135deg, rgba(255, 160, 0, 0.75) 0%, rgba(255, 112, 66, 0.65) 100%);        background: -webkit-linear-gradient(135deg, rgba(255, 160, 0, 0.75) 0%, rgba(255, 160, 0, 0.65) 100%);    &#125;    80% &#123;        background: rgba(233, 30, 99, 0.75);        background: linear-gradient(45deg, rgba(233, 30, 99, 0.75) 0%, rgba(233, 30, 99, 0.65) 100%);        background: -moz-linear-gradient(135deg, rgba(233, 30, 99, 0.75) 0%, rgba(233, 30, 99, 0.65) 100%);        background: -webkit-linear-gradient(135deg, rgba(2233, 30, 99, 0.75) 0%, rgba(233, 30, 99, 0.65) 100%);    &#125;&#125;@keyframes rainbow &#123;    0%,    100% &#123;        background: rgba(156, 39, 176, 0.75);        background: linear-gradient(45deg, rgba(156, 39, 176, 0.75) 0%, rgba(156, 39, 176, 0.65) 100%);        background: -moz-linear-gradient(135deg, rgba(156, 39, 176, 0.75) 0%, rgba(156, 39, 176, 0.65) 100%);        background: -webkit-linear-gradient(135deg, rgba(156, 39, 176, 0.75) 0%, rgba(156, 39, 176, 0.65) 100%);    &#125;    16% &#123;        background: rgba(132, 13, 121, 0.75);        background: linear-gradient(45deg, rgba(132, 13, 121, 0.75) 0%, rgba(132, 13, 121, 0.65) 100%);        background: -moz-linear-gradient(135deg, rgba(132, 13, 121, 0.75) 0%, rgba(132, 13, 121, 0.65) 100%);        background: -webkit-linear-gradient(135deg, rgba(132, 13, 121, 0.75) 0%, rgba(132, 13, 121, 0.65) 100%);    &#125;    32% &#123;        background: rgba(239, 83, 80, 0.75);        background: linear-gradient(45deg, rgba(239, 83, 80, 0.75) 0%, rgba(239, 83, 80, 0.65) 100%);        background: -moz-linear-gradient(135deg, rgba(239, 83, 80, 0.75) 0%, rgba(239, 83, 80, 0.65) 100%);        background: -webkit-linear-gradient(135deg, rgba(239, 83, 80, 0.75) 0%, rgba(239, 83, 80, 0.65) 100%);    &#125;    48% &#123;        background: rgba(255, 87, 34, 0.75);        background: linear-gradient(45deg, rgba(255, 87, 34, 0.75) 0%, rgba(255, 87, 34, 0.65) 100%);        background: -moz-linear-gradient(135deg, rgba(255, 87, 34, 0.75) 0%, rgba(255, 87, 34, 0.65) 100%);        background: -webkit-linear-gradient(135deg, rgba(255, 87, 34, 0.75) 0%, rgba(255, 87, 34, 0.65) 100%);    &#125;    64% &#123;        background: rgba(255, 160, 0, 0.75);        background: linear-gradient(45deg, rgba(255, 160, 0, 0.75) 0%, rgba(255, 160, 0, 0.65) 100%);        background: -moz-linear-gradient(135deg, rgba(255, 160, 0, 0.75) 0%, rgba(255, 112, 66, 0.65) 100%);        background: -webkit-linear-gradient(135deg, rgba(255, 160, 0, 0.75) 0%, rgba(255, 160, 0, 0.65) 100%);    &#125;    80% &#123;        background: rgba(233, 30, 99, 0.75);        background: linear-gradient(45deg, rgba(233, 30, 99, 0.75) 0%, rgba(233, 30, 99, 0.65) 100%);        background: -moz-linear-gradient(135deg, rgba(233, 30, 99, 0.75) 0%, rgba(233, 30, 99, 0.65) 100%);        background: -webkit-linear-gradient(135deg, rgba(2233, 30, 99, 0.75) 0%, rgba(233, 30, 99, 0.65) 100%);    &#125;&#125;*&#x2F;</code></pre><h4 id="设置隐藏的背景颜色"><a href="#设置隐藏的背景颜色" class="headerlink" title="设置隐藏的背景颜色"></a>设置隐藏的背景颜色</h4><p>文件位于：MyBlog\themes\matery\source\libs\materialize&#x2F;materialize.min.css查找<code>.red&#123;background-color:#F44336 !important&#125;</code>将{}中的background-color删除或修改颜色</p><pre class="language-css" data-language="css"><code class="language-css">.red&#123;background-color:#335a91 !important&#125;</code></pre><h4 id="关闭封面图轮播"><a href="#关闭封面图轮播" class="headerlink" title="关闭封面图轮播"></a>关闭封面图轮播</h4><p>主题文件<code>_config.yml</code>中设置：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"># 首页封面轮播图的相关配置.cover:  showPrevNext: false # 是否显示左右切换按钮.  showIndicators: false # 是否显示指示器.  autoLoop: false # 是否自动轮播.  duration: 120 # 切换延迟时间.  intervalTime: 5000 # 自动切换下一张的间隔时间.  useConfig: false # 是否使用配置文件, 在 _data&#x2F;covers.json 下配置推荐文章, false则使用主题在文章中的配置 cover coverImg  # useConfig 使用方式: 将主题 hexo-theme-matery&#x2F;source&#x2F;_data&#x2F;covers.json 移动到 my-blog&#x2F;source&#x2F;_data&#x2F;下修改配置即可</code></pre><h4 id="关闭每日切换banner"><a href="#关闭每日切换banner" class="headerlink" title="关闭每日切换banner"></a>关闭每日切换banner</h4><pre class="language-yaml" data-language="yaml"><code class="language-yaml"># banner 是否每日切换.banner:  enable: false # 若为 false, 则 banner 默认为 &#x2F;medias&#x2F;banner&#x2F;0.jpg</code></pre><h4 id="修改-banner-图和文章特色图"><a href="#修改-banner-图和文章特色图" class="headerlink" title="修改 banner 图和文章特色图"></a>修改 banner 图和文章特色图</h4><p><code>banner</code> 中的图片主题代码中是每天动态切换一张，只需 <code>7</code> 张即可。如果你会 <code>JavaScript</code> 代码，可以修改成你自己喜欢切换逻辑，如：随机切换等，<code>banner</code> 切换的代码位置在 <code>/layout/_partial/bg-cover-content.ejs</code> 文件的 <code>&lt;script&gt;&lt;/script&gt;</code> 代码中：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript">$(&#39;.bg-cover&#39;).css(&#39;background-image&#39;, &#39;url(&#x2F;medias&#x2F;banner&#x2F;&#39; + new Date().getDay() + &#39;.jpg)&#39;);</code></pre><p>在 <code>/source/medias/featureimages</code> 文件夹中默认有 24 张特色图片，你可以再增加或者减少，并需要在 <code>_config.yml</code> 做同步修改。</p><h4 id="修改社交链接"><a href="#修改社交链接" class="headerlink" title="修改社交链接"></a>修改社交链接</h4><p>在主题的 <code>_config.yml</code> 文件中，默认支持 <code>QQ</code>、<code>GitHub</code> 和邮箱等的配置，你可以在主题文件的 <code>/layout/_partial/social-link.ejs</code> 文件中，新增、修改你需要的社交链接地址，增加链接可参考如下代码：</p><pre class="language-markup" data-language="markup"><code class="language-markup">&lt;% if (theme.socialLink.github) &#123; %&gt;    &lt;a href&#x3D;&quot;&lt;%&#x3D; theme.socialLink.github %&gt;&quot; class&#x3D;&quot;tooltipped&quot; target&#x3D;&quot;_blank&quot; data-tooltip&#x3D;&quot;访问我的GitHub&quot; data-position&#x3D;&quot;top&quot; data-delay&#x3D;&quot;50&quot;&gt;        &lt;i class&#x3D;&quot;fab fa-github&quot;&gt;&lt;&#x2F;i&gt;    &lt;&#x2F;a&gt;&lt;% &#125; %&gt;</code></pre><p>现仅对内容进行删减，主题全局配置文件下设置仅仅留下QQ、Github、邮箱，同时关闭FORK ME：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml">socialLink:  github:  https:&#x2F;&#x2F;github.com&#x2F;Sumsung524  email: me@xiongmengqi.top  facebook: # https:&#x2F;&#x2F;www.facebook.com&#x2F;xxx  twitter: # https:&#x2F;&#x2F;twitter.com&#x2F;xxx  qq: 985247777  weibo: # https:&#x2F;&#x2F;weibo.com&#x2F;xxx  zhihu: # https:&#x2F;&#x2F;www.zhihu.com&#x2F;xxx  rss: false # true、falsegithubLink:  enable: false  url: https:&#x2F;&#x2F;github.com&#x2F;Sumsung524  title: Fork Me #或者直接删除</code></pre><blockquote><p>githubLink的设置在<code>/layout/_partial/github-link.ejs</code>中，关闭之后，可以直接移除github-link.ejs，如果以后需要设置其他形式的按键，可重新移入并在主题全局配置文件中设置</p></blockquote><p><code>/layout/_partial/social-link.ejs</code> 文件设置邮箱显示内容为自己邮箱：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript">&lt;% if (theme.socialLink.github) &#123; %&gt;    &lt;a href&#x3D;&quot;&lt;%&#x3D; theme.socialLink.github %&gt;&quot; class&#x3D;&quot;tooltipped&quot; target&#x3D;&quot;_blank&quot; data-tooltip&#x3D;&quot;访问我的GitHub&quot; data-position&#x3D;&quot;top&quot; data-delay&#x3D;&quot;50&quot;&gt;        &lt;i class&#x3D;&quot;fab fa-github&quot;&gt;&lt;&#x2F;i&gt;    &lt;&#x2F;a&gt;&lt;% &#125; %&gt;&lt;% if (theme.socialLink.email) &#123; %&gt;    &lt;a href&#x3D;&quot;mailto:&lt;%&#x3D; theme.socialLink.email %&gt;&quot; class&#x3D;&quot;tooltipped&quot; target&#x3D;&quot;_blank&quot; data-tooltip&#x3D;&quot;me@xiongmengqi.top&quot; data-position&#x3D;&quot;top&quot; data-delay&#x3D;&quot;50&quot;&gt;        &lt;i class&#x3D;&quot;fas fa-envelope-open&quot;&gt;&lt;&#x2F;i&gt;    &lt;&#x2F;a&gt;&lt;% &#125; %&gt;&lt;% if (theme.socialLink.qq) &#123; %&gt;    &lt;a href&#x3D;&quot;tencent:&#x2F;&#x2F;AddContact&#x2F;?fromId&#x3D;50&amp;fromSubId&#x3D;1&amp;subcmd&#x3D;all&amp;uin&#x3D;&lt;%&#x3D; theme.socialLink.qq %&gt;&quot; class&#x3D;&quot;tooltipped&quot; target&#x3D;&quot;_blank&quot; data-tooltip&#x3D;&quot;QQ:&lt;%&#x3D; theme.socialLink.qq %&gt;&quot; data-position&#x3D;&quot;top&quot; data-delay&#x3D;&quot;50&quot;&gt;        &lt;i class&#x3D;&quot;fab fa-qq&quot;&gt;&lt;&#x2F;i&gt;    &lt;&#x2F;a&gt;&lt;% &#125; %&gt;</code></pre><h4 id="修改页脚"><a href="#修改页脚" class="headerlink" title="修改页脚"></a>修改页脚</h4><p>修改页脚的地方在主题文件的 <code>/layout/_partial/footer.ejs</code> 文件中，包括站点、使用的主题、访问量等。</p><ul><li>在<code>_config.yml</code>打开站点运行时间记录功能:</li></ul><pre class="language-yaml" data-language="yaml"><code class="language-yaml">time:  enable: true  year: 2020 # 年份  month: 08 # 月份  date: 20 # 日期  hour: 00 # 小时  minute: 00 # 分钟  second: 00 # 秒</code></pre><p>去除小时、分钟、秒消掉：</p><p>将 <code>+ diffHours +&quot; 小时 &quot; + diffMinutes + &quot; 分钟 &quot; + diffSeconds + &quot; 秒&quot;</code>字段删除</p><ul><li>关闭运行时间记录，有需要的时候再开启</li></ul><p>在主题文件中删除上述代码，删除<code>/layout/_partial/footer.ejs</code>中相关函数</p><ul><li>删除<a href="http://busuanzi.ibruce.info/">不蒜子</a> 网站统计代码：</li></ul><p>主题配置文件中删除：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"># busuanzi(http:&#x2F;&#x2F;busuanzi.ibruce.info&#x2F;) website statistics# 不蒜子(http:&#x2F;&#x2F;busuanzi.ibruce.info&#x2F;) 网站统计busuanziStatistics:  enable: true  totalTraffic: true # 总访问量  totalNumberOfvisitors: true # 总人次  busuanzi: &#x2F;libs&#x2F;others&#x2F;busuanzi.pure.mini.js</code></pre><p>在主题文件中删除不蒜子相关代码，删除<code>/layout/_partial/footer.ejs</code>中相关函数：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript">&lt;% if (theme.postInfo.totalCount) &#123; %&gt;&nbsp;&lt;i class&#x3D;&quot;fas fa-chart-area&quot;&gt;&lt;&#x2F;i&gt;&nbsp;站点总字数:&nbsp;&lt;span    class&#x3D;&quot;white-color&quot;&gt;&lt;%&#x3D; totalcount(site) %&gt;&lt;&#x2F;span&gt;&nbsp;字&lt;% &#125; %&gt;&lt;% let socialClass &#x3D; &#39;&#39; %&gt;&lt;% if (theme.busuanziStatistics &amp;&amp; theme.busuanziStatistics.enable) &#123; %&gt;&lt;% socialClass &#x3D; &#39;social-statis&#39; %&gt;&lt;% &#125; %&gt;&lt;% if (theme.busuanziStatistics &amp;&amp; theme.busuanziStatistics.totalTraffic) &#123; %&gt;            &lt;span id&#x3D;&quot;busuanzi_container_site_pv&quot;&gt;                |&nbsp;&lt;i class&#x3D;&quot;far fa-eye&quot;&gt;&lt;&#x2F;i&gt;&nbsp;总访问量:&nbsp;&lt;span id&#x3D;&quot;busuanzi_value_site_pv&quot;                    class&#x3D;&quot;white-color&quot;&gt;&lt;&#x2F;span&gt;&nbsp;次            &lt;&#x2F;span&gt;            &lt;% &#125; %&gt;            &lt;% if (theme.busuanziStatistics &amp;&amp; theme.busuanziStatistics.totalNumberOfvisitors) &#123; %&gt;            &lt;span id&#x3D;&quot;busuanzi_container_site_uv&quot;&gt;                |&nbsp;&lt;i class&#x3D;&quot;fas fa-users&quot;&gt;&lt;&#x2F;i&gt;&nbsp;总访问人数:&nbsp;&lt;span id&#x3D;&quot;busuanzi_value_site_uv&quot;        class&#x3D;&quot;white-color&quot;&gt;&lt;&#x2F;span&gt;&nbsp;人&lt;&#x2F;span&gt;&lt;% &#125; %&gt;&lt;br&gt;&lt;% if (theme.time.enable) &#123; %&gt;&lt;span id&#x3D;&quot;sitetime&quot;&gt;载入运行时间...&lt;&#x2F;span&gt;&lt;script&gt;function siteTime() &#123;   var seconds &#x3D; 1000;   var minutes &#x3D; seconds * 60;   var hours &#x3D; minutes * 60;   var days &#x3D; hours * 24;   var years &#x3D; days * 365;   var today &#x3D; new Date();   var startYear &#x3D; &quot;&lt;%- theme.time.year %&gt;&quot;;   var startMonth &#x3D; &quot;&lt;%- theme.time.month %&gt;&quot;;   var startDate &#x3D; &quot;&lt;%- theme.time.date %&gt;&quot;;   var startHour &#x3D; &quot;&lt;%- theme.time.hour %&gt;&quot;;   var startMinute &#x3D; &quot;&lt;%- theme.time.minute %&gt;&quot;;   var startSecond &#x3D; &quot;&lt;%- theme.time.second %&gt;&quot;;   var todayYear &#x3D; today.getFullYear();   var todayMonth &#x3D; today.getMonth() + 1;   var todayDate &#x3D; today.getDate();   var todayHour &#x3D; today.getHours();   var todayMinute &#x3D; today.getMinutes();   var todaySecond &#x3D; today.getSeconds();   var t1 &#x3D; Date.UTC(startYear, startMonth, startDate, startHour, startMinute, startSecond);                    var t2 &#x3D; Date.UTC(todayYear, todayMonth, todayDate, todayHour, todayMinute, todaySecond);var diff &#x3D; t2 - t1;var diffYears &#x3D; Math.floor(diff &#x2F; years);var diffDays &#x3D; Math.floor((diff &#x2F; days) - diffYears * 365);var diffHours &#x3D; Math.floor((diff - (diffYears * 365 + diffDays) * days) &#x2F; hours);var diffMinutes &#x3D; Math.floor((diff - (diffYears * 365 + diffDays) * days - diffHours * hours) &#x2F;                        minutes);var diffSeconds &#x3D; Math.floor((diff - (diffYears * 365 + diffDays) * days - diffHours * hours -    diffMinutes * minutes) &#x2F; seconds);if (startYear &#x3D;&#x3D; todayYear) &#123;    document.getElementById(&quot;year&quot;).innerHTML &#x3D; todayYear;    document.getElementById(&quot;sitetime&quot;).innerHTML &#x3D; &quot;本站已运行 &quot; + diffDays + &quot; 天 &quot;;&#125; else &#123;document.getElementById(&quot;year&quot;).innerHTML &#x3D; startYear + &quot; - &quot; + todayYear;document.getElementById(&quot;sitetime&quot;).innerHTML &#x3D; &quot;本站已运行 &quot; + diffYears + &quot; 年 &quot; + diffDays +&quot; 天 &quot;;&#125;    &#125;    setInterval(siteTime, 1000);&lt;&#x2F;script&gt;&lt;% &#125; %&gt;&lt;br&gt;</code></pre><p><strong>注意：</strong></p><p>删除此段代码会出现部署问题，由于layout.ejs中设置过此函数，此函数删除而找不到会发生无法部署的错误。</p><p>因此，需要删除<code>matery/layout/layout.ejs</code>中字段：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript">&lt;% if (theme.busuanziStatistics &amp;&amp; theme.busuanziStatistics.enable) &#123; %&gt;&lt;script async src&#x3D;&quot;&lt;%- theme.jsDelivr.url %&gt;&lt;%- url_for(theme.libs.js.busuanzi) %&gt;&quot;&gt;&lt;&#x2F;script&gt;&lt;% &#125; %&gt;</code></pre><p>按照代码提示<code>footer.ejs</code>中<code>socialClass is not defined</code>可以直接将<code>&lt;%- socialClass %&gt;</code>字段删除或者使用其他CSS样式，删除后再加上<code>&lt;br&gt;</code>：</p><pre class="language-markup" data-language="markup"><code class="language-markup">&lt;div class&#x3D;&quot;col s12 m4 l4 social-link &lt;%- socialClass %&gt;&quot;&gt;&lt;%- partial(&#39;_partial&#x2F;social-link&#39;) %&gt;&lt;&#x2F;div&gt;</code></pre><blockquote><p>layout.ejs用于设置布局，告诉网站解析时引用什么样的文件、脚本、函数等等，属于一个大体的框架文件，表达了整个网站的大致结构。</p></blockquote><p>如备案信息不需要填写，可直接删除字段：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript">&lt;% if (theme.icp.enable) &#123; %&gt;    &lt;span id&#x3D;&quot;icp&quot;&gt;&lt;img src&#x3D;&quot;&lt;%- theme.jsDelivr.url %&gt;&lt;%- url_for(&#39;&#x2F;medias&#x2F;icp.png&#39;) %&gt;&quot; style&#x3D;&quot;vertical-align: text-bottom;&quot; &#x2F;&gt;        &lt;a href&#x3D;&quot;&lt;%- url_for(theme.icp.url) %&gt;&quot; target&#x3D;&quot;_blank&quot;&gt;&lt;%&#x3D; theme.icp.text %&gt;&lt;&#x2F;a&gt;                          &lt;&#x2F;span&gt;                          &lt;% &#125; %&gt;</code></pre><p>删除主题配置文件中：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml">#ICP备案信息尾部显示icp:  enable: false  url: # 备案链接  text: # 备案信息</code></pre><p>最好删除：<code>sources/libs/others/busuanzi.pure.mini.js</code></p><p>删除之后即可重新成功部署。</p><ul><li>将页脚变成窄边框</li></ul><p>在sources&#x2F;libs&#x2F;materialize&#x2F;materialize.min.css中查找<code>.page-footer</code>，找到<code>.page-footer&#123;padding-top:20px;color:#666;background-color:#ee6e73&#125;</code>删除<code>padding-top:20px;</code></p><ul><li>修改页脚字体颜色</li></ul><p>source&#x2F;css&#x2F;matery.css中搜索<code>footer .copy-right &#123;</code>、<code>footer a &#123;color: #999;&#125;</code>将颜色修改:</p><pre class="language-css" data-language="css"><code class="language-css">footer a &#123;    color: #999;&#125;footer .copy-right &#123;    color: #444;&#125;</code></pre><h4 id="修改文章卡片中标签颜色"><a href="#修改文章卡片中标签颜色" class="headerlink" title="修改文章卡片中标签颜色"></a>修改文章卡片中标签颜色</h4><p>在主题目录layout&#x2F;matery.css中加入样式：</p><pre class="language-css" data-language="css"><code class="language-css">.tag-color &#123;    background-image: linear-gradient(to left, #00c9ff 0%, #66a6ff 100%);&#125;</code></pre><p>打开layout&#x2F;index.ejs中使用Ctrl+F搜索<code>bg-color</code>，替换为：<code>tag-color</code>，从而实现标签颜色与导航条颜色独立。</p><h4 id="定制回到顶部"><a href="#定制回到顶部" class="headerlink" title="定制回到顶部"></a>定制回到顶部</h4><ul><li>修改回到顶部按钮颜色</li></ul><p>source&#x2F;css&#x2F;matery.css中搜索<code>.top-scroll .btn-floating &#123;</code>:</p><pre class="language-css" data-language="css"><code class="language-css">.top-scroll .btn-floating &#123;    background: linear-gradient(to bottom right, #00c8fe 0%, #66a6ff 100%);    width: 48px;    height: 48px;&#125;</code></pre><h4 id="博客文章菜单按钮调小"><a href="#博客文章菜单按钮调小" class="headerlink" title="博客文章菜单按钮调小"></a>博客文章菜单按钮调小</h4><p>通过谷歌浏览器开发者模式定位到按钮样式，打开<code>/layout/_partial/post-details-toc.ejs</code>,Ctrl+F输入<code>#floating-toc-btn .btn-floating</code> ，修改样式：</p><pre class="language-css" data-language="css"><code class="language-css">#floating-toc-btn .btn-floating &#123;    width: 32px;    height: 32px;&#125;#floating-toc-btn .btn-floating i &#123;    line-height: 48px;    font-size: 1.2rem;    position: absolute;    bottom: -8px;    left: 0px;&#125;</code></pre><blockquote><p>position：absolute表示设置绝对定位，一般配bai合“top”和“left”属性同时使用进行定位</p></blockquote><h4 id="修改博客文章目录颜色"><a href="#修改博客文章目录颜色" class="headerlink" title="修改博客文章目录颜色"></a>修改博客文章目录颜色</h4><p>通过谷歌浏览器开发者模式定位到按钮样式，打开<code>/layout/_partial/post-details-toc.ejs</code>,Ctrl+F输入<code>#toc-content .is-active-link</code> ，修改样式：</p><pre class="language-css" data-language="css"><code class="language-css">#toc-content .is-active-link &#123;    color: #66a6ff;&#125;</code></pre><p>通过谷歌浏览器开发者模式定位到按钮样式，打开<code>/layout/_partial/post-details-toc.ejs</code>,Ctrl+F输入<code>#toc-content .toc-link:hover</code>，修改样式：</p><pre class="language-css" data-language="css"><code class="language-css">#toc-content .toc-link:hover &#123;    color: #66a6ff;    font-weight: 700;    text-decoration: underline;&#125;</code></pre><h4 id="修改文章链接颜色"><a href="#修改文章链接颜色" class="headerlink" title="修改文章链接颜色"></a>修改文章链接颜色</h4><p>&#x2F;source&#x2F;css&#x2F;matery.css:</p><pre class="language-css" data-language="css"><code class="language-css">#articleContent a &#123;    padding: 0 2px;    color: #66a6ff;    font-weight: 500;    text-decoration: underline;    word-wrap: break-word;&#125;</code></pre><pre class="language-css" data-language="css"><code class="language-css">blockquote &#123;    border-left: 5px solid #66a6ff;    padding: 1rem 0.8rem 0.2rem 0.8rem;    color: #666;    background-color: rgba(66, 185, 131, .1);&#125;&#x2F;&#x2F; 修改引用左侧竖线颜色</code></pre><h4 id="定制进度条"><a href="#定制进度条" class="headerlink" title="定制进度条"></a>定制进度条</h4><ul><li>更改底栏进度条色彩</li></ul><p>source&#x2F;css&#x2F;matery.css中搜索<code>.progress-bar &#123;</code>并设置:</p><pre class="language-css" data-language="css"><code class="language-css">.progress-bar &#123;   height: 4px;   position: fixed;   bottom: 0px;   z-index: 300;   background: linear-gradient(to right, #4285f4 0%,  #ea4335 75%, #fbbc05 80%, #4285f4 85%, #34a853 90%, #ea4335 100%);   opacity: 1.0;&#125;</code></pre><ul><li>更改浏览器默认的进度条样式</li></ul><p>source&#x2F;css&#x2F;matery.css中最后添加：</p><p>考虑到进度条重复，故将width设置为0.1px隐藏导航条，方便以后需要时调用：</p><pre class="language-css" data-language="css"><code class="language-css">&#x2F;* 定义滚动条样式 *&#x2F;::-webkit-scrollbar &#123;  width: 0.1px;  height: 6px;  background-color: rgba(240, 240, 240, 0);&#125;&#x2F;*定义滚动条轨道 内阴影+圆角*&#x2F;::-webkit-scrollbar-track &#123;  box-shadow: inset 0 0 0px rgba(240, 240, 240, .5);  border-radius: 7px;  background-color: rgba(240, 240, 240, .5);&#125;&#x2F;*定义滑块 内阴影+圆角*&#x2F;::-webkit-scrollbar-thumb &#123;  border-radius: 10px;  box-shadow: inset 0 0 0px rgba(240, 240, 240, .5);  background-color: rgba(0, 0, 0, 0.5);&#125;</code></pre><h4 id="鼠标点击效果"><a href="#鼠标点击效果" class="headerlink" title="鼠标点击效果"></a>鼠标点击效果</h4><ul><li>添加“社会主义核心价值观”文字点击效果</li></ul><p>在 &#x2F;themes&#x2F;matery&#x2F;source&#x2F;js 新建文件<code>click_show_text.js</code>，并添加如下代码:</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript">&quot;use strict&quot;;   var a_idx&#x3D;0;   function delay()&#123;   $(&quot;.buryit&quot;).removeAttr(&quot;onclick&quot;)   &#125;   jQuery(document).ready(function(n)&#123;   n(&quot;body&quot;).click(function(e)&#123;   var t&#x3D;new Array(&quot;富强&quot;,&quot;民主&quot;,&quot;文明&quot;,&quot;和谐&quot;,&quot;自由&quot;,&quot;平等&quot;,&quot;公正&quot;,&quot;法治&quot;,&quot;爱国&quot;,&quot;敬业&quot;,&quot;诚信&quot;,&quot;友善&quot;),   o&#x3D;n(&quot;&lt;span&#x2F;&gt;&quot;).text(t[a_idx]);       a_idx&#x3D;(a_idx+1)%t.length;       var a&#x3D;e.pageX,i&#x3D;e.pageY;       o.css(&#123;       &quot;z-index&quot;:5,top:i-20,left:a,position:&quot;absolute&quot;,&quot;font-weight&quot;:&quot;bold&quot;,color:&quot;#ea4335&quot;&#125;),           n(&quot;body&quot;).append(o),o.animate(&#123;top:i-180,opacity:0&#125;,3e3,function()&#123;o.remove()&#125;)&#125;),setTimeout(&quot;delay()&quot;,2e3)&#125;);</code></pre><p>在主题配置文件<code>_config.yml</code>下添加：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"># 社会主义核心价值观文字点击效果click_show_text:  enable: true</code></pre><p>在<code>themes/source/layout/</code>引用文件：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript">&lt;script src&#x3D;&quot;&lt;%- theme.jsDelivr.url %&gt;&lt;%- url_for(&#39;&#x2F;js&#x2F;click_show_text.js&#39;) %&gt;&quot;&gt;&lt;&#x2F;script&gt;</code></pre><h4 id="激活评论系统"><a href="#激活评论系统" class="headerlink" title="激活评论系统"></a>激活评论系统</h4><p>主题中配置多种评论系统，个人认为最好用的时<code>Valine</code>:</p><ul><li>注册</li><li>登录</li><li>APPID 和 APPKey 复制</li><li>将对应的内容输入到主题配置文件中：</li></ul><pre class="language-yaml" data-language="yaml"><code class="language-yaml"># Valine 评论模块的配置，默认为不激活，如要使用，就请激活该配置项，并设置 appId 和 appKey.valine:  enable: true  appId: #粘贴APPID  appKey: #粘贴APPKey  notify: false  verify: false  visitor: true  avatar: &#39;mm&#39; # Gravatar style : mm&#x2F;identicon&#x2F;monsterid&#x2F;wavatar&#x2F;retro&#x2F;hide  pageSize: 10  placeholder: &#39;just go go&#39; # Comment Box placeholder  background: &#x2F;medias&#x2F;comment_bg.png</code></pre><p>配置好一个评论系统之后，可以将其他不需要的评论系统删除</p><blockquote><p>删除操作注意对文件做好备份，以防出错</p></blockquote><p>删除需要三处：主题配置文件相关代码、使用到评论模板页面的ejs文件、删除某个评论模板ejs文件</p><p>由于评论模块位于<code>post</code>、<code>concat</code>、<code>frieds</code>等页面，需要找到每个页面的<code>.ejs</code>文件，将代码删除</p><ul><li><p>删除Gitalk评论模块</p><ul><li>主题配置文件删除：</li></ul></li></ul><pre class="language-yaml" data-language="yaml"><code class="language-yaml"># Gitalk 评论模块的配置，默认为不激活gitalk:  enable: false  owner:  repo:  oauth:    clientId:    clientSecret:  admin:# Gitment 评论模块的配置，默认为不激活gitment:  enable: false  owner:  repo:  oauth:    clientId:    clientSecret:# Disqus评论模块的配置，默认为不激活disqus:  enable: false  shortname:# Livere 来必力评论模块的配置，默认为不激活livere:  enable: false  uid:# MiniValine 评论模块的配置，默认为不激活，如要使用，就请激活该配置项，并设置 appId 和 appKey.# See: https:&#x2F;&#x2F;github.com&#x2F;MiniValine&#x2F;MiniValineminivaline:  enable: false  appId: zhM0AOiqle17oPoE84CoYw1e-gzGzoHsz # Your leancloud application appid  appKey: itmzT1JbXfAjVwMqDhGPzU45 # Your leancloud application appkey  mode: DesertsP # DesertsP or xCss  placeholder: Write a Comment # Comment box placeholder  math: true # Support MathJax.  md: true # Support Markdown.  enableQQ: false # Enable QQ avatar API.  NoRecordIP: false # Do not record commenter IP.  visitor: true # Article reading statistics.  maxNest: 6 # Sub-comment maximum nesting depth.  pageSize: 6 # Pagination size.  adminEmailMd5: de8a7aa53d07e6b6bceb45c64027763d # The MD5 of Admin Email to show Admin Flag.[Just Only DesertsP Style mode]  tagMeta: # The String Array of Words to show Flag.[Just Only xCss Style mode]    - 管理员    - 小伙伴    - 访客  master: # The MD5 String Array of master Email to show master Flag.[Just Only xCss Style mode]    - de8a7aa53d07e6b6bceb45c64027763d  friends: # The MD5 String Array of friends Email to show friends Flag.[Just Only xCss Style mode]    - b5bd5d836c7a0091aa8473e79ed4c25e    - adb7d1cd192658a55c0ad22a3309cecf    - 3ce1e6c77b4910f1871106cb30dc62b0    - cfce8dc43725cc14ffcd9fb4892d5bfc  # MiniValine&#39;s display language depends on user&#39;s browser or system environment  # If you want everyone visiting your site to see a uniform language, you can set a force language value  # Available values: en  | zh-CN | (and many more)  # More i18n info: https:&#x2F;&#x2F;github.com&#x2F;MiniValine&#x2F;minivaline-i18n  lang:  # Expression Url.  # https:&#x2F;&#x2F;github.com&#x2F;MiniValine&#x2F;MiniValine&#x2F;blob&#x2F;master&#x2F;.github&#x2F;FAQ.md#how-to-customize-emoticons  emoticonUrl:    - https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;alus@latest    - https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;MiniValine&#x2F;qq@latest    - https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;MiniValine&#x2F;Bilibilis@latest    - https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;MiniValine&#x2F;tieba@latest    - https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;MiniValine&#x2F;twemoji@latest    - https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;MiniValine&#x2F;weibo@latest    gitalk: &#x2F;libs&#x2F;gitalk&#x2F;gitalk.min.js    minivaline:https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;minivaline&#x2F;dist&#x2F;MiniValine.min.js</code></pre><ul><li>contact.ejs删除：</li></ul><pre class="language-javascript" data-language="javascript"><code class="language-javascript">&lt;% if (theme.gitalk &amp;&amp; theme.gitalk.enable) &#123; %&gt;&lt;%- partial(&#39;_partial&#x2F;gitalk&#39;) %&gt;&lt;% &#125; %&gt;&lt;% if (theme.gitment.enable) &#123; %&gt;&lt;%- partial(&#39;_partial&#x2F;gitment&#39;) %&gt;&lt;% &#125; %&gt;&lt;% if (theme.disqus.enable) &#123; %&gt;&lt;%- partial(&#39;_partial&#x2F;disqus&#39;) %&gt;&lt;% &#125; %&gt;&lt;% if (theme.livere &amp;&amp; theme.livere.enable) &#123; %&gt;&lt;%- partial(&#39;_partial&#x2F;livere&#39;) %&gt;&lt;% &#125; %&gt;&lt;% if (theme.minivaline &amp;&amp; theme.minivaline.enable) &#123; %&gt;&lt;%- partial(&#39;_partial&#x2F;minivaline&#39;) %&gt;&lt;% &#125; %&gt;</code></pre><ul><li>friends.ejs删除：</li></ul><pre class="language-javascript" data-language="javascript"><code class="language-javascript">&lt;% if (theme.gitalk &amp;&amp; theme.gitalk.enable) &#123; %&gt;&lt;%- partial(&#39;_partial&#x2F;gitalk&#39;) %&gt;&lt;% &#125; %&gt;&lt;% if (theme.gitment.enable) &#123; %&gt;&lt;%- partial(&#39;_partial&#x2F;gitment&#39;) %&gt;&lt;% &#125; %&gt;&lt;% if (theme.disqus.enable) &#123; %&gt;&lt;%- partial(&#39;_partial&#x2F;disqus&#39;) %&gt;&lt;% &#125; %&gt;&lt;% if (theme.livere &amp;&amp; theme.livere.enable) &#123; %&gt;&lt;%- partial(&#39;_partial&#x2F;livere&#39;) %&gt;&lt;% &#125; %&gt;</code></pre><ul><li>删除post-detail.ejs：</li></ul><pre class="language-javascript" data-language="javascript"><code class="language-javascript">&lt;% if (theme.gitalk &amp;&amp; theme.gitalk.enable) &#123; %&gt;    &lt;%- partial(&#39;_partial&#x2F;gitalk&#39;) %&gt;&lt;% &#125; %&gt;&lt;% if (theme.gitment.enable) &#123; %&gt;    &lt;%- partial(&#39;_partial&#x2F;gitment&#39;) %&gt;&lt;% &#125; %&gt;&lt;% if (theme.disqus.enable) &#123; %&gt;    &lt;%- partial(&#39;_partial&#x2F;disqus&#39;) %&gt;&lt;% &#125; %&gt;&lt;% if (theme.livere &amp;&amp; theme.livere.enable) &#123; %&gt;&lt;%- partial(&#39;_partial&#x2F;livere&#39;) %&gt;&lt;% &#125; %&gt;&lt;% if (theme.minivaline &amp;&amp; theme.minivaline.enable) &#123; %&gt;&lt;%- partial(&#39;_partial&#x2F;minivaline&#39;) %&gt;&lt;% &#125; %&gt;</code></pre><p>​</p><ul><li>删除gitalk.ejs、gitment.ejs、gitment.ejs、disqus.ejs、livere.ejs、minivaline.ejs</li></ul><h4 id="在线聊天功能去除"><a href="#在线聊天功能去除" class="headerlink" title="在线聊天功能去除"></a><a href="https://xmq.plus/posts/2547c616.html#%E5%9C%A8%E7%BA%BF%E8%81%8A%E5%A4%A9%E5%8A%9F%E8%83%BD%E5%8E%BB%E9%99%A4" title="在线聊天功能去除"></a>在线聊天功能去除</h4><ul><li>删除主题全局配置文件代码：</li></ul><pre class="language-yaml" data-language="yaml"><code class="language-yaml"># DaoVoice online contactdaovoice:  enable: false  app_id:# Tidio online contacttidio:  enable: false  public_key:</code></pre><ul><li>删除layout.ejs代码：</li></ul><pre class="language-javascript" data-language="javascript"><code class="language-javascript">&lt;% if (theme.tidio.enable) &#123; %&gt;    &lt;script src&#x3D;&quot;&#x2F;&#x2F;code.tidio.co&#x2F;&lt;%- theme.tidio.public_key %&gt;.js&quot;&gt;&lt;&#x2F;script&gt;    &lt;script&gt;        $(document).ready(function () &#123;            setInterval(change_Tidio, 50);            function change_Tidio() &#123;                var tidio&#x3D;$(&quot;#tidio-chat iframe&quot;);                if(tidio.css(&quot;display&quot;)&#x3D;&#x3D;&quot;block&quot;&amp;&amp; $(window).width()&gt;977 )&#123;                    document.getElementById(&quot;tidio-chat-iframe&quot;).style.bottom&#x3D; ($(&quot;div#backTop.top-scroll&quot;).css(&quot;display&quot;)&#x3D;&#x3D;&quot;none&quot; &amp;&amp;$(window).width()&gt;977)&gt;0? &quot;-40px&quot; : ($(&quot;div.toc-title&quot;).length&amp;&amp;$(window).width()&gt;977)&gt;0?&quot;&lt;%if(theme.toc.showToggleBtn)&#123;%&gt;85px&lt;%&#125;else&#123;%&gt;20px&lt;%&#125;%&gt;&quot;:&quot;20px&quot;;                    document.getElementById(&quot;tidio-chat-iframe&quot;).style.right&#x3D;&quot;-15px&quot;;                    document.getElementById(&quot;tidio-chat-iframe&quot;).style.height&#x3D;parseInt(tidio.css(&quot;height&quot;))&gt;&#x3D;520?&quot;520px&quot;:tidio.css(&quot;height&quot;);                    document.getElementById(&quot;tidio-chat-iframe&quot;).style.zIndex&#x3D;&quot;997&quot;;                &#125;                else if(tidio.css(&quot;display&quot;)&#x3D;&#x3D;&quot;block&quot;&amp;&amp;$(window).width()&gt;601 &amp;&amp;$(window).width()&lt;992 )&#123;                    document.getElementById(&quot;tidio-chat-iframe&quot;).style.bottom&#x3D; ($(&quot;div#backTop.top-scroll&quot;).css(&quot;display&quot;)&#x3D;&#x3D;&quot;none&quot; &amp;&amp; 601&lt; $(window).width()&lt;992)&gt;0? &quot;-40px&quot;:&quot;20px&quot; ;                    document.getElementById(&quot;tidio-chat-iframe&quot;).style.right&#x3D;&quot;-15px&quot;;                    document.getElementById(&quot;tidio-chat-iframe&quot;).style.zIndex&#x3D;&quot;997&quot;;                &#125;                else if(tidio.css(&quot;display&quot;)&#x3D;&#x3D;&quot;block&quot;&amp;&amp;$(window).width()&lt;601 &amp;&amp; parseInt(tidio.css(&quot;height&quot;))&lt;230)&#123;                    document.getElementById(&quot;tidio-chat-iframe&quot;).style.bottom&#x3D; ($(&quot;div#backTop.top-scroll&quot;).css(&quot;display&quot;)&#x3D;&#x3D;&quot;none&quot; &amp;&amp; $(window).width()&lt;601)&gt;0? &quot;-10px&quot;:&quot;45px&quot; ;                    document.getElementById(&quot;tidio-chat-iframe&quot;).style.zIndex&#x3D;&quot;997&quot;;                &#125;                if( tidio.css(&quot;display&quot;)&#x3D;&#x3D;&quot;block&quot;&amp;&amp;$(window).width()&lt;601 &amp;&amp; parseInt(tidio.css(&quot;height&quot;))&gt;&#x3D;230)&#123;                    document.getElementById(&quot;tidio-chat-iframe&quot;).style.zIndex&#x3D;&quot;998&quot;;                &#125;            &#125;        &#125;);    &lt;&#x2F;script&gt;&lt;% &#125; %&gt;&lt;% if (theme.daovoice.enable) &#123; %&gt;&lt;script&gt;    (function (i, s, o, g, r, a, m) &#123;        i[&quot;DaoVoiceObject&quot;] &#x3D; r;        i[r] &#x3D; i[r] || function () &#123;            (i[r].q &#x3D; i[r].q || []).push(arguments)        &#125;, i[r].l &#x3D; 1 * new Date();        a &#x3D; s.createElement(o), m &#x3D; s.getElementsByTagName(o)[0];        a.async &#x3D; 1;        a.src &#x3D; g;        a.charset &#x3D; &quot;utf-8&quot;;        m.parentNode.insertBefore(a, m)    &#125;)(window, document, &quot;script&quot;, (&#39;https:&#39; &#x3D;&#x3D; document.location.protocol ? &#39;https:&#39; : &#39;http:&#39;) +        &quot;&#x2F;&#x2F;widget.daovoice.io&#x2F;widget&#x2F;6984b559.js&quot;, &quot;daovoice&quot;)    daovoice(&#39;init&#39;, &#123;        app_id: &quot;&lt;%- theme.daovoice.app_id %&gt;&quot;    &#125;);    daovoice(&#39;update&#39;);&lt;&#x2F;script&gt;&lt;% &#125; %&gt;</code></pre><h4 id="关闭转载功能"><a href="#关闭转载功能" class="headerlink" title="关闭转载功能"></a><a href="https://xmq.plus/posts/2547c616.html#%E5%85%B3%E9%97%AD%E8%BD%AC%E8%BD%BD%E5%8A%9F%E8%83%BD" title="关闭转载功能"></a>关闭转载功能</h4><p>由于以后可能需要用到，故仅在主题配置文件中关闭：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"># default 配置文章的默认转载规则# 您可以使用在文章md文件的 front-matter 中指定 reprintPolicy 来给单个文章配置转载规则# 可用的转载规则有：# 这些转载规则的意义请参考：https:&#x2F;&#x2F;creativecommons.org&#x2F;choose&#x2F;?lang&#x3D;zh#选项： cc_by cc_by_nd cc_by_sa cc_by_nc cc_by_nc_nd cc_by_nc_sa cc0 noreprint（不允许转载 not allowed to reprint） pay（付费转载 pay for reprinting）reprint:  enable: false # whether enable reprint section 是否启用“转载规则限定模块”  default: cc_by</code></pre><h4 id="合并标签和文章分类页"><a href="#合并标签和文章分类页" class="headerlink" title="合并标签和文章分类页"></a><a href="https://xmq.plus/posts/2547c616.html#%E5%90%88%E5%B9%B6%E6%A0%87%E7%AD%BE%E5%92%8C%E6%96%87%E7%AB%A0%E5%88%86%E7%B1%BB%E9%A1%B5" title="合并标签和文章分类页"></a>合并标签和文章分类页</h4><p>打开<code>layout/tags.ejs</code>,复制：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml">&lt;%- partial(&#39;_widget&#x2F;tag-cloud&#39;) %&gt;&lt;% if (site.tags &amp;&amp; site.tags.length &gt; 0) &#123; %&gt;&lt;%- partial(&#39;_widget&#x2F;tag-wordcloud&#39;) %&gt;&lt;% &#125; %&gt;</code></pre><p>由于属于直接粘贴会导致重叠，需要将文章标签的位置单独调整，故需要找到<code>_widget/tags-cloud.ejs</code>文件复制上，粘贴至<code>layout/categories.ejs</code>中，然后再<code>class=&quot;container chip-container&quot;</code>后加上<code>style=&quot;margin-top:25px;&quot;</code></p><pre class="language-yaml" data-language="yaml"><code class="language-yaml">&lt;%- partial(&#39;_partial&#x2F;bg-cover&#39;) %&gt;&lt;main class&#x3D;&quot;content&quot;&gt;    &lt;%- partial(&#39;_widget&#x2F;category-cloud&#39;) %&gt;    &lt;%    var colorArr &#x3D; [&#39;#F9EBEA&#39;, &#39;#F5EEF8&#39;, &#39;#D5F5E3&#39;, &#39;#E8F8F5&#39;, &#39;#FEF9E7&#39;,        &#39;#F8F9F9&#39;, &#39;#82E0AA&#39;, &#39;#D7BDE2&#39;, &#39;#A3E4D7&#39;, &#39;#85C1E9&#39;, &#39;#F8C471&#39;, &#39;#F9E79F&#39;, &#39;#FFF&#39;];    var colorCount &#x3D; colorArr.length;    var hashCode &#x3D; function (str) &#123;        if (!str &amp;&amp; str.length &#x3D;&#x3D;&#x3D; 0) &#123;            return 0;        &#125;        var hash &#x3D; 0;        for (var i &#x3D; 0, len &#x3D; str.length; i &lt; len; i++) &#123;            hash &#x3D; ((hash &lt;&lt; 5) - hash) + str.charCodeAt(i);            hash |&#x3D; 0;        &#125;        return hash;    &#125;;    var i &#x3D; 0;    var isTag &#x3D; is_tag();    %&gt;    &lt;div id&#x3D;&quot;tags&quot; class&#x3D;&quot;container chip-container&quot;style&#x3D;&quot;margin-top:25px;&quot;&gt;        &lt;div class&#x3D;&quot;card&quot;&gt;            &lt;div class&#x3D;&quot;card-content&quot;&gt;                &lt;div class&#x3D;&quot;tag-title center-align&quot;&gt;                    &lt;i class&#x3D;&quot;fas fa-tags&quot;&gt;&lt;&#x2F;i&gt;&nbsp;&nbsp;&lt;%&#x3D; __(&#39;postTagTitle&#39;) %&gt;                &lt;&#x2F;div&gt;                &lt;div class&#x3D;&quot;tag-chips&quot;&gt;                    &lt;% site.tags.map(function(tag) &#123; %&gt;                    &lt;%                        i++;                        var color &#x3D; i &gt;&#x3D; colorCount ? colorArr[Math.abs(hashCode(tag.name) % colorCount)]                                : colorArr[i - 1];                    %&gt;                    &lt;a href&#x3D;&quot;&lt;%- url_for(tag.path) %&gt;&quot; title&#x3D;&quot;&lt;%- tag.name %&gt;: &lt;%- tag.length %&gt;&quot;&gt;                        &lt;span class&#x3D;&quot;chip center-align waves-effect waves-light                                &lt;% if (isTag &amp;&amp; tag.name &#x3D;&#x3D; page.tag) &#123; %&gt; chip-active &lt;% &#125; else &#123; %&gt; chip-default &lt;% &#125; %&gt;&quot;                                data-tagname&#x3D;&quot;&lt;%- tag.name %&gt;&quot; style&#x3D;&quot;background-color: &lt;%- color %&gt;;&quot;&gt;&lt;%- tag.name %&gt;                            &lt;span class&#x3D;&quot;tag-length&quot;&gt;&lt;%- tag.length %&gt;&lt;&#x2F;span&gt;                        &lt;&#x2F;span&gt;                    &lt;&#x2F;a&gt;                    &lt;% &#125;); %&gt;                &lt;&#x2F;div&gt;            &lt;&#x2F;div&gt;        &lt;&#x2F;div&gt;    &lt;&#x2F;div&gt;    &lt;% if (site.tags &amp;&amp; site.tags.length &gt; 0) &#123; %&gt;    &lt;%- partial(&#39;_widget&#x2F;tag-wordcloud&#39;) %&gt;    &lt;% &#125; %&gt;    &lt;% if (site.categories &amp;&amp; site.categories.length &gt; 0) &#123; %&gt;    &lt;%- partial(&#39;_widget&#x2F;category-radar&#39;) %&gt;    &lt;% &#125; %&gt;&lt;&#x2F;main&gt;</code></pre><p>最后在主题配置文件中关闭<code>tags</code>页面链接即可</p><h2 id="六、其他"><a href="#六、其他" class="headerlink" title="六、其他"></a><a href="https://xmq.plus/posts/2547c616.html#%E5%85%AD%E3%80%81%E5%85%B6%E4%BB%96" title="六、其他"></a>六、其他</h2><h3 id="1-自定义导航页"><a href="#1-自定义导航页" class="headerlink" title="1.自定义导航页"></a><a href="https://xmq.plus/posts/2547c616.html#1-%E8%87%AA%E5%AE%9A%E4%B9%89%E5%AF%BC%E8%88%AA%E9%A1%B5" title="1.自定义导航页"></a>1.自定义导航页</h3><ul><li><code>hexo new page navigation</code>新建页面</li><li>打开新建文件并编辑：</li></ul><pre class="language-yaml" data-language="yaml"><code class="language-yaml">---title: navigationdate: 2020-08-22 15:13:51type: &quot;navigation&quot;layout: &quot;navigation&quot;---</code></pre><ul><li>在主题配置中加入新页面：</li></ul><pre class="language-yaml" data-language="yaml"><code class="language-yaml">menu:  Index:    url: &#x2F;    icon: fas fa-home  记录:    url: &#x2F;categories #二级菜单中的主菜单链接    icon: fas fa-list    children:      - name: 设计        url:         icon: fas fa-book      - name: 计算机        url:         icon: fas fa-music      - name: 土木工程        url:         icon: fas fa-film      - name: 其他        url:         icon: fas fa-book  清单:    icon: fas fa-list    children:      - name: Windows软件        url: &#x2F;windows    #将友情链接页面模板变成软件清单页面        icon: fas fa-address-book      - name: Mac软件        url:         icon: fas fa-film      - name: 资源列表        url:         icon: fas fa-book  Tags:    url: &#x2F;tags    icon: fas fa-tags  导航:    url: &#x2F;navigation    icon: fas fa-location-arrow  About:    url: &#x2F;about    icon: fas fa-user-circle  Contact:    url: &#x2F;contact    icon: fas fa-comments#  隐藏Archives页面，时间轴等保留，方便以后再使用#  Archives:#    url: &#x2F;archives#    icon: fas fa-archive</code></pre><ul><li>在主题目录下<code>layout</code>下新建 <code>navigation.ejs</code>，除拓展名为<code>.ejs</code>外，文件名要求和之前的统一：</li></ul><h3 id="2-导航的关于页面"><a href="#2-导航的关于页面" class="headerlink" title="2.导航的关于页面"></a><a href="https://xmq.plus/posts/2547c616.html#2-%E5%AF%BC%E8%88%AA%E7%9A%84%E5%85%B3%E4%BA%8E%E9%A1%B5%E9%9D%A2" title="2.导航的关于页面"></a>2.导航的关于页面</h3><ul><li>添加关于页面按键（入口），在主题目录下打开<code>layout/nav.ejs</code>，按住Ctrl+F搜索<code>&lt;% if (theme.navabout) &#123; %&gt;</code>，下方加入代码：</li></ul><pre class="language-javascript" data-language="javascript"><code class="language-javascript">&lt;li&gt;    &lt;a href&#x3D;&quot;&lt;%&#x3D; url_for(theme.navabout.url3) %&gt;&quot;&gt;        &lt;i class&#x3D;&quot;&lt;%&#x3D; theme.navabout.icon3 %&gt;&quot;&gt;&lt;&#x2F;i&gt;        &lt;span class&#x3D;&quot;tooltip-blue&quot;&gt;&lt;%&#x3D; theme.navabout.name3 %&gt;&lt;&#x2F;span&gt;    &lt;&#x2F;a&gt;&lt;&#x2F;li&gt;</code></pre><ul><li>创建新页面：</li></ul><pre class="language-none"><code class="language-none">hexo new page aboutnav</code></pre><ul><li>打开index.md文件编辑：</li></ul><pre class="language-none"><code class="language-none">---title: 关于layout: &quot;aboutnav&quot;type: &quot;aboutnav&quot;date: 2020-09-22 21:12:21---</code></pre><ul><li>在主题配置文件<code>_config.yml</code>下，搜索<code>navabout</code>并在子目录下添加：</li></ul><pre class="language-yaml" data-language="yaml"><code class="language-yaml">name3: 关于icon3: fas fa-info-circleurl3: &#x2F;aboutnav</code></pre><blockquote><p>注意格式缩进对齐</p></blockquote><ul><li>在主题文件夹目录下&#x2F;layout&#x2F;新建aboutnav.ejs文件并写入：</li></ul><pre class="language-markup" data-language="markup"><code class="language-markup">---layout: false---&lt;!doctype html&gt;&lt;html&gt;&lt;head&gt;    &lt;meta charset&#x3D;&quot;utf-8&quot;&gt;    &lt;title&gt;关于|肆零肆&lt;&#x2F;title&gt;&lt;style&gt;        .container_nav &#123;            width: 60%;            margin: 10% auto 0;            background-color: #ffffff;            padding: 0% 0%;            border-radius: 10px        &#125;        .ul_nav &#123;            padding-left: 20px;            line-height: 2.3        &#125;&lt;&#x2F;style&gt;&lt;body&gt;    &lt;div class&#x3D;&quot;container_nav&quot;&gt;        &lt;h1&gt;肆零肆导航-聚合导航网页使用指南&lt;&#x2F;h1&gt;        &lt;h3&gt;网页特征&lt;&#x2F;h3&gt;        &lt;ul class&#x3D;&quot;ul_nav&quot;&gt;            &lt;li&gt;简洁舒适，无广告&lt;&#x2F;li&gt;            &lt;li&gt;聚合搜索，多种搜索引擎自由选择&lt;&#x2F;li&gt;            &lt;li&gt;夜间模式自由切换，保护你的双眼&lt;&#x2F;li&gt;            &lt;li&gt;丰富的网页导航，一触即达&lt;&#x2F;li&gt;            &lt;li&gt;黑科技网站聚合，高效生活&lt;&#x2F;li&gt;            &lt;li&gt;细腻丝滑设计，沉浸其中&lt;&#x2F;li&gt;            &lt;li&gt;设置搜索快捷方式，即刻搜索&lt;&#x2F;li&gt;            &lt;li&gt;简洁强大，是初衷&lt;&#x2F;li&gt;        &lt;&#x2F;ul &gt;        &lt;h3&gt;使用技巧&lt;&#x2F;h3&gt;        &lt;ul class&#x3D;&quot;ul_nav&quot;&gt;        &lt;li&gt;打开网页光标自动至搜索栏；无需点击输入框，即可直接输入搜索内容&lt;&#x2F;li&gt;        &lt;li&gt;搜索框内按入↑&#x2F;↓，快速清除输入框内容&lt;&#x2F;li&gt;        &lt;li&gt;滚轮下滑自动清空已输入内容&lt;&#x2F;li&gt;        &lt;li&gt;输入搜索内容后回车即可搜索&lt;&#x2F;li&gt;        &lt;li&gt;搜索回车&#x2F;点击搜索后自动全选输入内容，方便快速下次编辑搜索内容&lt;&#x2F;li&gt;        &lt;li&gt;回车&#x2F;Tab键自动定位光标到输入框，无需鼠标点击🖱&lt;&#x2F;li&gt;        &lt;li&gt;点击“回到顶部”按钮后，无需点击输入框即可直接搜索&lt;&#x2F;li&gt;        &lt;&#x2F;ul&gt;        &lt;h3&gt;其他说明&lt;&#x2F;h3&gt;        &lt;ul class&#x3D;&quot;ul_nav&quot;&gt;        &lt;li&gt;建议Ctrl + D收藏网站&lt;&#x2F;li&gt;        &lt;li&gt;设置默认启动页（主页）：&lt;&#x2F;li&gt;        &lt;li&gt;打开谷歌浏览器-设置-启动时-添加新网页-输入框输入：https:&#x2F;&#x2F;xmq.plus&#x2F;nav-保存确定&lt;&#x2F;li&gt;        &lt;li&gt;为了尽可能保证良好的使用体验，请使用谷歌浏览器&lt;&#x2F;li&gt;        &lt;li&gt;谷歌浏览器下载地址:&lt;&#x2F;li&gt;        &lt;a href&#x3D;&quot;https:&#x2F;&#x2F;sumsung.lanzous.com&#x2F;i87Jufckfif&quot;&gt;谷歌浏览器&lt;&#x2F;a&gt;        &lt;&#x2F;ul&gt;        &lt;a href&#x3D;&quot;&#x2F;nav&quot;&gt;回到首页&lt;&#x2F;a&gt;    &lt;&#x2F;div&gt;&lt;&#x2F;body&gt;&lt;&#x2F;html&gt;</code></pre><ul><li>效果图</li></ul><p><img src="https://images.xmq.plus/image-20200923082408087.png" alt="效果图"></p><p><strong>效果图</strong></p><ul><li>使用Typora创建页面</li></ul><p>上述方法利用纯Html不方便添加其他样式，可以借助Typora软件，使用Markdown写作完成后，直接生成Html：</p><p><img src="https://images.xmq.plus/image-20200923124454409.png" alt="Html export"></p><p><strong>Html export</strong></p><ul><li>将生成好的Html使用文本编辑器打开，全选代码复制，粘贴到<code>aboutnav.ejs</code>中，并在代码最前面加入(不经过渲染)：</li></ul><pre class="language-none"><code class="language-none">---layout: false---</code></pre><pre class="language-markup" data-language="markup"><code class="language-markup">---layout: false---&lt;!doctype html&gt;&lt;html&gt;&lt;head&gt;&lt;meta charset&#x3D;&#39;UTF-8&#39;&gt;&lt;meta name&#x3D;&#39;viewport&#39; content&#x3D;&#39;width&#x3D;device-width initial-scale&#x3D;1&#39;&gt;&lt;title&gt;关于|肆零肆聚合导航网页使用指南&lt;&#x2F;title&gt;&lt;link href&#x3D;&#39;https:&#x2F;&#x2F;fonts.loli.net&#x2F;css?family&#x3D;Open+Sans:400italic,700italic,700,400&amp;subset&#x3D;latin,latin-ext&#39; rel&#x3D;&#39;stylesheet&#39; type&#x3D;&#39;text&#x2F;css&#39; &#x2F;&gt;&lt;style type&#x3D;&#39;text&#x2F;css&#39;&gt;html &#123;overflow-x: initial !important;&#125;:root &#123; --bg-color:#ffffff; --text-color:#333333; --select-text-bg-color:#B5D6FC; --select-text-font-color:auto; --monospace:&quot;Lucida Console&quot;,Consolas,&quot;Courier&quot;,monospace; &#125;html &#123; font-size: 14px; background-color: var(--bg-color); color: var(--text-color); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; -webkit-font-smoothing: antialiased; &#125;body &#123; margin: 0px; padding: 0px; height: auto; bottom: 0px; top: 0px; left: 0px; right: 0px; font-size: 1rem; line-height: 1.42857; overflow-x: hidden; background: inherit; tab-size: 4; &#125;iframe &#123; margin: auto; &#125;a.url &#123; word-break: break-all; &#125;a:active, a:hover &#123; outline: 0px; &#125;.in-text-selection, ::selection &#123; text-shadow: none; background: var(--select-text-bg-color); color: var(--select-text-font-color); &#125;#write &#123; margin: 0px auto; height: auto; width: inherit; word-break: normal; overflow-wrap: break-word; position: relative; white-space: normal; overflow-x: visible; padding-top: 40px; &#125;#write.first-line-indent p &#123; text-indent: 2em; &#125;#write.first-line-indent li p, #write.first-line-indent p * &#123; text-indent: 0px; &#125;#write.first-line-indent li &#123; margin-left: 2em; &#125;.for-image #write &#123; padding-left: 8px; padding-right: 8px; &#125;body.typora-export &#123; padding-left: 30px; padding-right: 30px; &#125;.typora-export .footnote-line, .typora-export li, .typora-export p &#123; white-space: pre-wrap; &#125;.typora-export .task-list-item input &#123; pointer-events: none; &#125;@media screen and (max-width: 500px) &#123;  body.typora-export &#123; padding-left: 0px; padding-right: 0px; &#125;  #write &#123; padding-left: 20px; padding-right: 20px; &#125;  .CodeMirror-sizer &#123; margin-left: 0px !important; &#125;  .CodeMirror-gutters &#123; display: none !important; &#125;&#125;#write li &gt; figure:last-child &#123; margin-bottom: 0.5rem; &#125;#write ol, #write ul &#123; position: relative; &#125;img &#123; max-width: 100%; vertical-align: middle; image-orientation: from-image; &#125;button, input, select, textarea &#123; color: inherit; font: inherit; &#125;input[type&#x3D;&quot;checkbox&quot;], input[type&#x3D;&quot;radio&quot;] &#123; line-height: normal; padding: 0px; &#125;*, ::after, ::before &#123; box-sizing: border-box; &#125;#write h1, #write h2, #write h3, #write h4, #write h5, #write h6, #write p, #write pre &#123; width: inherit; &#125;#write h1, #write h2, #write h3, #write h4, #write h5, #write h6, #write p &#123; position: relative; &#125;p &#123; line-height: inherit; &#125;h1, h2, h3, h4, h5, h6 &#123; break-after: avoid-page; break-inside: avoid; orphans: 4; &#125;p &#123; orphans: 4; &#125;h1 &#123; font-size: 2rem; &#125;h2 &#123; font-size: 1.8rem; &#125;h3 &#123; font-size: 1.6rem; &#125;h4 &#123; font-size: 1.4rem; &#125;h5 &#123; font-size: 1.2rem; &#125;h6 &#123; font-size: 1rem; &#125;.md-math-block, .md-rawblock, h1, h2, h3, h4, h5, h6, p &#123; margin-top: 1rem; margin-bottom: 1rem; &#125;.hidden &#123; display: none; &#125;.md-blockmeta &#123; color: rgb(204, 204, 204); font-weight: 700; font-style: italic; &#125;a &#123; cursor: pointer; &#125;sup.md-footnote &#123; padding: 2px 4px; background-color: rgba(238, 238, 238, 0.7); color: rgb(85, 85, 85); border-radius: 4px; cursor: pointer; &#125;sup.md-footnote a, sup.md-footnote a:hover &#123; color: inherit; text-transform: inherit; text-decoration: inherit; &#125;#write input[type&#x3D;&quot;checkbox&quot;] &#123; cursor: pointer; width: inherit; height: inherit; &#125;figure &#123; overflow-x: auto; margin: 1.2em 0px; max-width: calc(100% + 16px); padding: 0px; &#125;figure &gt; table &#123; margin: 0px; &#125;tr &#123; break-inside: avoid; break-after: auto; &#125;thead &#123; display: table-header-group; &#125;table &#123; border-collapse: collapse; border-spacing: 0px; width: 100%; overflow: auto; break-inside: auto; text-align: left; &#125;table.md-table td &#123; min-width: 32px; &#125;.CodeMirror-gutters &#123; border-right: 0px; background-color: inherit; &#125;.CodeMirror-linenumber &#123; user-select: none; &#125;.CodeMirror &#123; text-align: left; &#125;.CodeMirror-placeholder &#123; opacity: 0.3; &#125;.CodeMirror pre &#123; padding: 0px 4px; &#125;.CodeMirror-lines &#123; padding: 0px; &#125;div.hr:focus &#123; cursor: none; &#125;#write pre &#123; white-space: pre-wrap; &#125;#write.fences-no-line-wrapping pre &#123; white-space: pre; &#125;#write pre.ty-contain-cm &#123; white-space: normal; &#125;.CodeMirror-gutters &#123; margin-right: 4px; &#125;.md-fences &#123; font-size: 0.9rem; display: block; break-inside: avoid; text-align: left; overflow: visible; white-space: pre; background: inherit; position: relative !important; &#125;.md-diagram-panel &#123; width: 100%; margin-top: 10px; text-align: center; padding-top: 0px; padding-bottom: 8px; overflow-x: auto; &#125;#write .md-fences.mock-cm &#123; white-space: pre-wrap; &#125;.md-fences.md-fences-with-lineno &#123; padding-left: 0px; &#125;#write.fences-no-line-wrapping .md-fences.mock-cm &#123; white-space: pre; overflow-x: auto; &#125;.md-fences.mock-cm.md-fences-with-lineno &#123; padding-left: 8px; &#125;.CodeMirror-line, twitterwidget &#123; break-inside: avoid; &#125;.footnotes &#123; opacity: 0.8; font-size: 0.9rem; margin-top: 1em; margin-bottom: 1em; &#125;.footnotes + .footnotes &#123; margin-top: 0px; &#125;.md-reset &#123; margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: top; background: 0px 0px; text-decoration: none; text-shadow: none; float: none; position: static; width: auto; height: auto; white-space: nowrap; cursor: inherit; -webkit-tap-highlight-color: transparent; line-height: normal; font-weight: 400; text-align: left; box-sizing: content-box; direction: ltr; &#125;li div &#123; padding-top: 0px; &#125;blockquote &#123; margin: 1rem 0px; &#125;li .mathjax-block, li p &#123; margin: 0.5rem 0px; &#125;li &#123; margin: 0px; position: relative; &#125;blockquote &gt; :last-child &#123; margin-bottom: 0px; &#125;blockquote &gt; :first-child, li &gt; :first-child &#123; margin-top: 0px; &#125;.footnotes-area &#123; color: rgb(136, 136, 136); margin-top: 0.714rem; padding-bottom: 0.143rem; white-space: normal; &#125;#write .footnote-line &#123; white-space: pre-wrap; &#125;@media print &#123;  body, html &#123; border: 1px solid transparent; height: 99%; break-after: avoid; break-before: avoid; font-variant-ligatures: no-common-ligatures; &#125;  #write &#123; margin-top: 0px; padding-top: 0px; border-color: transparent !important; &#125;  .typora-export * &#123; -webkit-print-color-adjust: exact; &#125;  html.blink-to-pdf &#123; font-size: 13px; &#125;  .typora-export #write &#123; break-after: avoid; &#125;  .typora-export #write::after &#123; height: 0px; &#125;  .is-mac table &#123; break-inside: avoid; &#125;&#125;.footnote-line &#123; margin-top: 0.714em; font-size: 0.7em; &#125;a img, img a &#123; cursor: pointer; &#125;pre.md-meta-block &#123; font-size: 0.8rem; min-height: 0.8rem; white-space: pre-wrap; background: rgb(204, 204, 204); display: block; overflow-x: hidden; &#125;p &gt; .md-image:only-child:not(.md-img-error) img, p &gt; img:only-child &#123; display: block; margin: auto; &#125;#write.first-line-indent p &gt; .md-image:only-child:not(.md-img-error) img &#123; left: -2em; position: relative; &#125;p &gt; .md-image:only-child &#123; display: inline-block; width: 100%; &#125;#write .MathJax_Display &#123; margin: 0.8em 0px 0px; &#125;.md-math-block &#123; width: 100%; &#125;.md-math-block:not(:empty)::after &#123; display: none; &#125;[contenteditable&#x3D;&quot;true&quot;]:active, [contenteditable&#x3D;&quot;true&quot;]:focus, [contenteditable&#x3D;&quot;false&quot;]:active, [contenteditable&#x3D;&quot;false&quot;]:focus &#123; outline: 0px; box-shadow: none; &#125;.md-task-list-item &#123; position: relative; list-style-type: none; &#125;.task-list-item.md-task-list-item &#123; padding-left: 0px; &#125;.md-task-list-item &gt; input &#123; position: absolute; top: 0px; left: 0px; margin-left: -1.2em; margin-top: calc(1em - 10px); border: none; &#125;.math &#123; font-size: 1rem; &#125;.md-toc &#123; min-height: 3.58rem; position: relative; font-size: 0.9rem; border-radius: 10px; &#125;.md-toc-content &#123; position: relative; margin-left: 0px; &#125;.md-toc-content::after, .md-toc::after &#123; display: none; &#125;.md-toc-item &#123; display: block; color: rgb(65, 131, 196); &#125;.md-toc-item a &#123; text-decoration: none; &#125;.md-toc-inner:hover &#123; text-decoration: underline; &#125;.md-toc-inner &#123; display: inline-block; cursor: pointer; &#125;.md-toc-h1 .md-toc-inner &#123; margin-left: 0px; font-weight: 700; &#125;.md-toc-h2 .md-toc-inner &#123; margin-left: 2em; &#125;.md-toc-h3 .md-toc-inner &#123; margin-left: 4em; &#125;.md-toc-h4 .md-toc-inner &#123; margin-left: 6em; &#125;.md-toc-h5 .md-toc-inner &#123; margin-left: 8em; &#125;.md-toc-h6 .md-toc-inner &#123; margin-left: 10em; &#125;@media screen and (max-width: 48em) &#123;  .md-toc-h3 .md-toc-inner &#123; margin-left: 3.5em; &#125;  .md-toc-h4 .md-toc-inner &#123; margin-left: 5em; &#125;  .md-toc-h5 .md-toc-inner &#123; margin-left: 6.5em; &#125;  .md-toc-h6 .md-toc-inner &#123; margin-left: 8em; &#125;&#125;a.md-toc-inner &#123; font-size: inherit; font-style: inherit; font-weight: inherit; line-height: inherit; &#125;.footnote-line a:not(.reversefootnote) &#123; color: inherit; &#125;.md-attr &#123; display: none; &#125;.md-fn-count::after &#123; content: &quot;.&quot;; &#125;code, pre, samp, tt &#123; font-family: var(--monospace); &#125;kbd &#123; margin: 0px 0.1em; padding: 0.1em 0.6em; font-size: 0.8em; color: rgb(36, 39, 41); background: rgb(255, 255, 255); border: 1px solid rgb(173, 179, 185); border-radius: 3px; box-shadow: rgba(12, 13, 14, 0.2) 0px 1px 0px, rgb(255, 255, 255) 0px 0px 0px 2px inset; white-space: nowrap; vertical-align: middle; &#125;.md-comment &#123; color: rgb(162, 127, 3); opacity: 0.8; font-family: var(--monospace); &#125;code &#123; text-align: left; vertical-align: initial; &#125;a.md-print-anchor &#123; white-space: pre !important; border-width: initial !important; border-style: none !important; border-color: initial !important; display: inline-block !important; position: absolute !important; width: 1px !important; right: 0px !important; outline: 0px !important; background: 0px 0px !important; text-decoration: initial !important; text-shadow: initial !important; &#125;.md-inline-math .MathJax_SVG .noError &#123; display: none !important; &#125;.html-for-mac .inline-math-svg .MathJax_SVG &#123; vertical-align: 0.2px; &#125;.md-math-block .MathJax_SVG_Display &#123; text-align: center; margin: 0px; position: relative; text-indent: 0px; max-width: none; max-height: none; min-height: 0px; min-width: 100%; width: auto; overflow-y: hidden; display: block !important; &#125;.MathJax_SVG_Display, .md-inline-math .MathJax_SVG_Display &#123; width: auto; margin: inherit; display: inline-block !important; &#125;.MathJax_SVG .MJX-monospace &#123; font-family: var(--monospace); &#125;.MathJax_SVG .MJX-sans-serif &#123; font-family: sans-serif; &#125;.MathJax_SVG &#123; display: inline; font-style: normal; font-weight: 400; line-height: normal; zoom: 90%; text-indent: 0px; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; overflow-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0px; min-height: 0px; border: 0px; padding: 0px; margin: 0px; &#125;.MathJax_SVG * &#123; transition: none 0s ease 0s; &#125;.MathJax_SVG_Display svg &#123; vertical-align: middle !important; margin-bottom: 0px !important; margin-top: 0px !important; &#125;.os-windows.monocolor-emoji .md-emoji &#123; font-family: &quot;Segoe UI Symbol&quot;, sans-serif; &#125;.md-diagram-panel &gt; svg &#123; max-width: 100%; &#125;[lang&#x3D;&quot;flow&quot;] svg, [lang&#x3D;&quot;mermaid&quot;] svg &#123; max-width: 100%; height: auto; &#125;[lang&#x3D;&quot;mermaid&quot;] .node text &#123; font-size: 1rem; &#125;table tr th &#123; border-bottom: 0px; &#125;video &#123; max-width: 100%; display: block; margin: 0px auto; &#125;iframe &#123; max-width: 100%; width: 100%; border: none; &#125;.highlight td, .highlight tr &#123; border: 0px; &#125;svg[id^&#x3D;&quot;mermaidChart&quot;] &#123; line-height: 1em; &#125;mark &#123; background: rgb(255, 255, 0); color: rgb(0, 0, 0); &#125;.md-html-inline .md-plain, .md-html-inline strong, mark .md-inline-math, mark strong &#123; color: inherit; &#125;mark .md-meta &#123; color: rgb(0, 0, 0); opacity: 0.3 !important; &#125;@media print &#123;  .typora-export h1, .typora-export h2, .typora-export h3, .typora-export h4, .typora-export h5, .typora-export h6 &#123; break-inside: avoid; &#125;  .typora-export h1::after, .typora-export h2::after, .typora-export h3::after, .typora-export h4::after, .typora-export h5::after, .typora-export h6::after &#123; content: &quot;&quot;; display: block; height: 100px; margin-bottom: -100px; &#125;&#125;:root &#123;    --side-bar-bg-color: #fafafa;    --control-text-color: #777;&#125;@include-when-export url(https:&#x2F;&#x2F;fonts.loli.net&#x2F;css?family&#x3D;Open+Sans:400italic,700italic,700,400&amp;subset&#x3D;latin,latin-ext);  html &#123;    font-size: 16px;&#125;body &#123;    font-family: &quot;Open Sans&quot;,&quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif;    color: rgb(51, 51, 51);    line-height: 1.6;&#125;#write &#123;    max-width: 860px;      margin: 0 auto;      padding: 30px;&#125;@media only screen and (min-width: 1400px) &#123;    #write &#123;        max-width: 1024px;    &#125;&#125;@media only screen and (min-width: 1800px) &#123;    #write &#123;        max-width: 1200px;    &#125;&#125;#write &gt; ul:first-child,#write &gt; ol:first-child&#123;    margin-top: 30px;&#125;a &#123;    color: #4183C4;&#125;h1,h2,h3,h4,h5,h6 &#123;    position: relative;    margin-top: 1rem;    margin-bottom: 1rem;    font-weight: bold;    line-height: 1.4;    cursor: text;&#125;h1:hover a.anchor,h2:hover a.anchor,h3:hover a.anchor,h4:hover a.anchor,h5:hover a.anchor,h6:hover a.anchor &#123;    text-decoration: none;&#125;h1 tt,h1 code &#123;    font-size: inherit;&#125;h2 tt,h2 code &#123;    font-size: inherit;&#125;h3 tt,h3 code &#123;    font-size: inherit;&#125;h4 tt,h4 code &#123;    font-size: inherit;&#125;h5 tt,h5 code &#123;    font-size: inherit;&#125;h6 tt,h6 code &#123;    font-size: inherit;&#125;h1 &#123;    font-size: 2.25em;    line-height: 1.2;    border-bottom: 1px solid #eee;&#125;h2 &#123;    font-size: 1.75em;    line-height: 1.225;    border-bottom: 1px solid #eee;&#125;@media print &#123;    .typora-export h1,    .typora-export h2 &#123;        border-bottom: none;        padding-bottom: initial;    &#125;    .typora-export h1::after,    .typora-export h2::after &#123;        border-top: 1px solid #eee;        margin-top: .3em;    &#125;&#125;h3 &#123;    font-size: 1.5em;    line-height: 1.43;&#125;h4 &#123;    font-size: 1.25em;&#125;h5 &#123;    font-size: 1em;&#125;h6 &#123;   font-size: 1em;    color: #777;&#125;p,blockquote,ul,ol,dl,table&#123;    margin: 0.8em 0;&#125;li&gt;ol,li&gt;ul &#123;    margin: 0 0;&#125;hr &#123;    height: 2px;    padding: 0;    margin: 16px 0;    background-color: #e7e7e7;    border: 0 none;    overflow: hidden;    box-sizing: content-box;&#125;li p.first &#123;    display: inline-block;&#125;ul,ol &#123;    padding-left: 30px;&#125;ul:first-child,ol:first-child &#123;    margin-top: 0;&#125;ul:last-child,ol:last-child &#123;    margin-bottom: 0;&#125;blockquote &#123;    border-left: 4px solid #dfe2e5;    padding: 0 15px;    color: #777777;&#125;blockquote blockquote &#123;    padding-right: 0;&#125;table &#123;    padding: 0;    word-break: initial;&#125;table tr &#123;    border-top: 1px solid #dfe2e5;    margin: 0;    padding: 0;&#125;table tr:nth-child(2n),thead &#123;    background-color: #f8f8f8;&#125;table tr th &#123;    font-weight: bold;    border: 1px solid #dfe2e5;    border-bottom: 0;    margin: 0;    padding: 6px 13px;&#125;table tr td &#123;    border: 1px solid #dfe2e5;    margin: 0;    padding: 6px 13px;&#125;table tr th:first-child,table tr td:first-child &#123;    margin-top: 0;&#125;table tr th:last-child,table tr td:last-child &#123;    margin-bottom: 0;&#125;.CodeMirror-lines &#123;    padding-left: 4px;&#125;.code-tooltip &#123;    box-shadow: 0 1px 1px 0 rgba(0,28,36,.3);    border-top: 1px solid #eef2f2;&#125;.md-fences,code,tt &#123;    border: 1px solid #e7eaed;    background-color: #f8f8f8;    border-radius: 3px;    padding: 0;    padding: 2px 4px 0px 4px;    font-size: 0.9em;&#125;code &#123;    background-color: #f3f4f4;    padding: 0 2px 0 2px;&#125;.md-fences &#123;    margin-bottom: 15px;    margin-top: 15px;    padding-top: 8px;    padding-bottom: 6px;&#125;.md-task-list-item &gt; input &#123;  margin-left: -1.3em;&#125;@media print &#123;    html &#123;        font-size: 13px;    &#125;    table,    pre &#123;        page-break-inside: avoid;    &#125;    pre &#123;        word-wrap: break-word;    &#125;&#125;.md-fences &#123;    background-color: #f8f8f8;&#125;#write pre.md-meta-block &#123;    padding: 1rem;    font-size: 85%;    line-height: 1.45;    background-color: #f7f7f7;    border: 0;    border-radius: 3px;    color: #777777;    margin-top: 0 !important;&#125;.mathjax-block&gt;.code-tooltip &#123;    bottom: .375rem;&#125;.md-mathjax-midline &#123;    background: #fafafa;&#125;#write&gt;h3.md-focus:before&#123;    left: -1.5625rem;    top: .375rem;&#125;#write&gt;h4.md-focus:before&#123;    left: -1.5625rem;    top: .285714286rem;&#125;#write&gt;h5.md-focus:before&#123;    left: -1.5625rem;    top: .285714286rem;&#125;#write&gt;h6.md-focus:before&#123;    left: -1.5625rem;    top: .285714286rem;&#125;.md-image&gt;.md-meta &#123;    &#x2F;*border: 1px solid #ddd;*&#x2F;    border-radius: 3px;    padding: 2px 0px 0px 4px;    font-size: 0.9em;    color: inherit;&#125;.md-tag &#123;    color: #a7a7a7;    opacity: 1;&#125;.md-toc &#123;     margin-top:20px;    padding-bottom:20px;&#125;.sidebar-tabs &#123;    border-bottom: none;&#125;#typora-quick-open &#123;    border: 1px solid #ddd;    background-color: #f8f8f8;&#125;#typora-quick-open-item &#123;    background-color: #FAFAFA;    border-color: #FEFEFE #e5e5e5 #e5e5e5 #eee;    border-style: solid;    border-width: 1px;&#125;&#x2F;** focus mode *&#x2F;.on-focus-mode blockquote &#123;    border-left-color: rgba(85, 85, 85, 0.12);&#125;header, .context-menu, .megamenu-content, footer&#123;    font-family: &quot;Segoe UI&quot;, &quot;Arial&quot;, sans-serif;&#125;.file-node-content:hover .file-node-icon,.file-node-content:hover .file-node-open-state&#123;    visibility: visible;&#125;.mac-seamless-mode #typora-sidebar &#123;    background-color: #fafafa;    background-color: var(--side-bar-bg-color);&#125;.md-lang &#123;    color: #b4654d;&#125;.html-for-mac .context-menu &#123;    --item-hover-bg-color: #E6F0FE;&#125;#md-notification .btn &#123;    border: 0;&#125;.dropdown-menu .divider &#123;    border-color: #e5e5e5;&#125;.ty-preferences .window-content &#123;    background-color: #fafafa;&#125;.ty-preferences .nav-group-item.active &#123;    color: white;    background: #999;&#125;&lt;&#x2F;style&gt;&lt;&#x2F;head&gt;&lt;body class&#x3D;&#39;typora-export os-windows&#39;&gt;&lt;div id&#x3D;&#39;write&#39;  class&#x3D;&#39;&#39;&gt;&lt;p&gt;&nbsp;&lt;&#x2F;p&gt;&lt;p&gt;&nbsp;&lt;&#x2F;p&gt;&lt;h2&gt;&lt;a name&#x3D;&quot;肆零肆导航-聚合导航网页使用指南&quot; class&#x3D;&quot;md-header-anchor&quot;&gt;&lt;&#x2F;a&gt;&lt;span&gt;肆零肆导航-聚合导航网页使用指南&lt;&#x2F;span&gt;&lt;&#x2F;h2&gt;&lt;p&gt;&nbsp;&lt;&#x2F;p&gt;&lt;p&gt;&lt;img src&#x3D;&quot;https:&#x2F;&#x2F;images.xmq.plus&#x2F;image-20200923095419036.png&quot; alt&#x3D;&quot;主页&quot;  &#x2F;&gt;&lt;&#x2F;p&gt;&lt;p&gt;&nbsp;&lt;&#x2F;p&gt;&lt;h3&gt;&lt;a name&#x3D;&quot;网页特征&quot; class&#x3D;&quot;md-header-anchor&quot;&gt;&lt;&#x2F;a&gt;&lt;span&gt;网页特征&lt;&#x2F;span&gt;&lt;&#x2F;h3&gt;&lt;ul&gt;&lt;li&gt;&lt;span&gt;简洁舒适，无广告&lt;&#x2F;span&gt;&lt;&#x2F;li&gt;&lt;&#x2F;ul&gt;&lt;ul&gt;&lt;li&gt;&lt;span&gt;聚合搜索，多种搜索引擎自由选择&lt;&#x2F;span&gt;&lt;&#x2F;li&gt;&lt;&#x2F;ul&gt;&lt;ul&gt;&lt;li&gt;&lt;span&gt;夜间模式自由切换，保护你的双眼&lt;&#x2F;span&gt;&lt;&#x2F;li&gt;&lt;&#x2F;ul&gt;&lt;ul&gt;&lt;li&gt;&lt;span&gt;丰富的网页导航，一触即达&lt;&#x2F;span&gt;&lt;&#x2F;li&gt;&lt;&#x2F;ul&gt;&lt;ul&gt;&lt;li&gt;&lt;span&gt;黑科技网站聚合，高效生活&lt;&#x2F;span&gt;&lt;&#x2F;li&gt;&lt;li&gt;&lt;span&gt;细腻丝滑设计，沉浸其中&lt;&#x2F;span&gt;&lt;&#x2F;li&gt;&lt;li&gt;&lt;span&gt;设置搜索快捷方式，即刻搜索&lt;&#x2F;span&gt;&lt;&#x2F;li&gt;&lt;li&gt;&lt;span&gt;简洁强大，是初衷&lt;&#x2F;span&gt;&lt;&#x2F;li&gt;&lt;&#x2F;ul&gt;&lt;p&gt;&nbsp;&lt;&#x2F;p&gt;&lt;h3&gt;&lt;a name&#x3D;&quot;使用技巧&quot; class&#x3D;&quot;md-header-anchor&quot;&gt;&lt;&#x2F;a&gt;&lt;span&gt;使用技巧&lt;&#x2F;span&gt;&lt;&#x2F;h3&gt;&lt;ul&gt;&lt;li&gt;&lt;span&gt;打开网页光标自动锁定搜索栏；无需点击输入框，即可直接输入搜索内容&lt;&#x2F;span&gt;&lt;&#x2F;li&gt;&lt;&#x2F;ul&gt;&lt;ul&gt;&lt;li&gt;&lt;kbd&gt;&lt;span&gt;Enter&lt;&#x2F;span&gt;&lt;&#x2F;kbd&gt;&lt;span&gt;&#x2F;&lt;&#x2F;span&gt;&lt;kbd&gt;&lt;span&gt;Tab&lt;&#x2F;span&gt;&lt;&#x2F;kbd&gt;&lt;span&gt;键自动定位光标到输入框，无需鼠标点击&lt;&#x2F;span&gt;&lt;&#x2F;li&gt;&lt;&#x2F;ul&gt;&lt;p&gt;&lt;img src&#x3D;&quot;https:&#x2F;&#x2F;images.xmq.plus&#x2F;Tab.gif&quot; alt&#x3D;&quot;Tab&quot; style&#x3D;&quot;zoom: 67%;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;&lt;ul&gt;&lt;li&gt;&lt;span&gt;输入搜索内容后&lt;&#x2F;span&gt;&lt;kbd&gt;&lt;span&gt;Enter&lt;&#x2F;span&gt;&lt;&#x2F;kbd&gt;&lt;span&gt;即可搜索&lt;&#x2F;span&gt;&lt;&#x2F;li&gt;&lt;&#x2F;ul&gt;&lt;ul&gt;&lt;li&gt;&lt;kbd&gt;&lt;span&gt;Enter&lt;&#x2F;span&gt;&lt;&#x2F;kbd&gt;&lt;span&gt;&#x2F;点击🖱搜索后自动全选输入内容，方便快速下次编辑搜索内容&lt;&#x2F;span&gt;&lt;&#x2F;li&gt;&lt;&#x2F;ul&gt;&lt;ul&gt;&lt;li&gt;&lt;span&gt;搜索框内按入&lt;&#x2F;span&gt;&lt;kbd&gt;&lt;span&gt;↑&lt;&#x2F;span&gt;&lt;&#x2F;kbd&gt;&lt;span&gt;&#x2F;&lt;&#x2F;span&gt;&lt;kbd&gt;&lt;span&gt;↓&lt;&#x2F;span&gt;&lt;&#x2F;kbd&gt;&lt;span&gt;，快速清除输入框内容&lt;&#x2F;span&gt;&lt;&#x2F;li&gt;&lt;&#x2F;ul&gt;&lt;p&gt;&lt;img src&#x3D;&quot;https:&#x2F;&#x2F;images.xmq.plus&#x2F;clear.gif&quot; alt&#x3D;&quot;clear&quot; style&#x3D;&quot;zoom: 67%;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;&lt;ul&gt;&lt;li&gt;&lt;span&gt;滚轮下滑自动清空已输入内容&lt;&#x2F;span&gt;&lt;&#x2F;li&gt;&lt;&#x2F;ul&gt;&lt;p&gt;&lt;img src&#x3D;&quot;https:&#x2F;&#x2F;images.xmq.plus&#x2F;scroll.gif&quot; alt&#x3D;&quot;scroll&quot; style&#x3D;&quot;zoom:67%;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;&lt;ul&gt;&lt;li&gt;&lt;span&gt;点击&lt;&#x2F;span&gt;&lt;code&gt;回到顶部&lt;&#x2F;code&gt;&lt;span&gt;按钮，无需点击输入框即可直接搜索&lt;&#x2F;span&gt;&lt;&#x2F;li&gt;&lt;&#x2F;ul&gt;&lt;p&gt;&nbsp;&lt;&#x2F;p&gt;&lt;h3&gt;&lt;a name&#x3D;&quot;其他说明&quot; class&#x3D;&quot;md-header-anchor&quot;&gt;&lt;&#x2F;a&gt;&lt;span&gt;其他说明&lt;&#x2F;span&gt;&lt;&#x2F;h3&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;建议&lt;&#x2F;span&gt;&lt;kbd&gt;&lt;span&gt;Ctrl&lt;&#x2F;span&gt;&lt;&#x2F;kbd&gt;&lt;span&gt; +&lt;&#x2F;span&gt;&lt;kbd&gt;&lt;span&gt;D&lt;&#x2F;span&gt;&lt;&#x2F;kbd&gt;&lt;span&gt;收藏网站&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;&lt;&#x2F;li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;为了尽可能保证良好的使用体验，请使用谷歌浏览器，谷歌浏览器下载地址:&lt;&#x2F;span&gt;&lt;a href&#x3D;&#39;https:&#x2F;&#x2F;sumsung.lanzous.com&#x2F;i87Jufckfif&#39;&gt;&lt;span&gt;谷歌浏览器&lt;&#x2F;span&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;&lt;&#x2F;li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;设置默认启动页（主页）：&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;&lt;p&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span&gt;打开谷歌浏览器-设置-启动时-添加新网页-输入框输入：&lt;&#x2F;span&gt;&lt;a href&#x3D;&#39;https:&#x2F;&#x2F;xmq.plus&#x2F;nav&#39;&gt;&lt;span&gt;https:&#x2F;&#x2F;xmq.plus&#x2F;nav&lt;&#x2F;span&gt;&lt;&#x2F;a&gt;&lt;span&gt;-保存确定&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;&lt;&#x2F;li&gt;&lt;&#x2F;ul&gt;&lt;p&gt;&nbsp;&lt;&#x2F;p&gt;&lt;h3&gt;&lt;a name&#x3D;&quot;效果展示&quot; class&#x3D;&quot;md-header-anchor&quot;&gt;&lt;&#x2F;a&gt;&lt;span&gt;效果展示&lt;&#x2F;span&gt;&lt;&#x2F;h3&gt;&lt;p&gt;&lt;img src&#x3D;&quot;https:&#x2F;&#x2F;images.xmq.plus&#x2F;search.gif&quot; alt&#x3D;&quot;search&quot; style&#x3D;&quot;zoom:67%;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;&lt;p&gt;&lt;img src&#x3D;&quot;https:&#x2F;&#x2F;images.xmq.plus&#x2F;change.gif&quot; alt&#x3D;&quot;switch&quot;  &#x2F;&gt;&lt;&#x2F;p&gt;&lt;p&gt;&lt;img src&#x3D;&quot;https:&#x2F;&#x2F;images.xmq.plus&#x2F;image-20200923104326356.png&quot; alt&#x3D;&quot;nav&quot;  &#x2F;&gt;&lt;&#x2F;p&gt;&lt;p&gt;&nbsp;&lt;&#x2F;p&gt;&lt;p&gt;&nbsp;&lt;&#x2F;p&gt;&lt;p&gt;&lt;a href&#x3D;&#39;https:&#x2F;&#x2F;xmq.plus&#x2F;nav&#39;&gt;&lt;span&gt;←回到首页&lt;&#x2F;span&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;&lt;p&gt;&nbsp;&lt;&#x2F;p&gt;&lt;p&gt;&nbsp;&lt;&#x2F;p&gt;&lt;p&gt;&lt;span&gt;copyright © 2020 xmq.plus All rights reserved.  湘ICP备2020018001号&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;&lt;&#x2F;body&gt;&lt;&#x2F;html&gt;</code></pre><ul><li>Typora生成效果</li></ul><p><a href="https://xmq.plus/aboutnav">导航-关于页面</a></p><h3 id="4-建立软件清单页面"><a href="#4-建立软件清单页面" class="headerlink" title="4.建立软件清单页面"></a><a href="https://xmq.plus/posts/2547c616.html#4-%E5%BB%BA%E7%AB%8B%E8%BD%AF%E4%BB%B6%E6%B8%85%E5%8D%95%E9%A1%B5%E9%9D%A2" title="4.建立软件清单页面"></a>4.建立软件清单页面</h3><p>创建新页面<code>hexo new page mac</code>，更改新建<code>index.md</code>文件：</p><p>复制成功</p><pre class="language-none"><code class="language-none">---title: Mac软件date: 2020-08-27 22:31:51type: &quot;mac&quot;layout: &quot;mac&quot;---</code></pre><p>在<code>themes/layout/</code>下新建文件<code>mac.ejs</code>:</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript">&lt;%- partial(&#39;_partial&#x2F;bg-cover&#39;) %&gt;&lt;style&gt;    .friends-container &#123;        margin-top: -100px;        margin-bottom: 30px;    &#125;    .friends-container .tag-title &#123;        margin-bottom: 10px;        color: #3C4858;        font-size: 1.75rem;        font-weight: 400;    &#125;    .frind-ship img &#123;        border-radius: 10%;    &#125;    &#x2F;* 以下是按钮样式 *&#x2F;    .frind-ship &#123;        padding: 10px 20px;    &#125;    .frind-ship .title &#123;        display: flex;        align-items: center;    &#125;    .frind-ship .title div &#123;        color: #fff;        padding-left: 10px;    &#125;    .frind-ship .title img &#123;        width: 100px;        height: 100px;        flex-shrink: 0;    &#125;    .frind-ship .title h1 &#123;        padding-bottom: 5px;        border-bottom: 2px solid #fff;        position: relative;        top:-15px;        left: 3px;    &#125;    .friend-button &#123;        display: flex;        justify-content: center;        margin-bottom: -27px;    &#125;    .friend-button a &#123;        border-radius: 40px;    &#125;    .friend-all .tag-post &#123;        margin-bottom: 30px;    &#125;    .button-caution &#123;        background-color: #FF4351;        border-color: #FF4351;        color: #FFF;    &#125;    .button &#123;        font-weight: 300;        font-size: 16px;        font-family: &quot;Helvetica Neue Light&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Lucida Grande&quot;, sans-serif;        text-decoration: none;        text-align: center;        line-height: 40px;        height: 40px;        padding: 0 40px;        margin: 0;        display: inline-block;        appearance: none;        cursor: pointer;        border: none;        -webkit-box-sizing: border-box;        -moz-box-sizing: border-box;        box-sizing: border-box;        -webkit-transition-property: all;        transition-property: all;        -webkit-transition-duration: .3s;        transition-duration: .3s;    &#125;    .title &#123;        margin-bottom: 0rem !important;    &#125;    .card &#123;        margin: 3rem 0 1rem 0 !important;    &#125;    .button-glow.button-caution &#123;        -webkit-animation-name: glowing-caution;        animation-name: glowing-caution;    &#125;    @-webkit-keyframes glowing-caution &#123;        from &#123;            -webkit-box-shadow: 0 0 0 rgba(255, 67, 81, 0.3);            box-shadow: 0 0 0 rgba(255, 67, 81, 0.3);        &#125;        50% &#123;            -webkit-box-shadow: 0 0 20px rgba(255, 67, 81, 0.8);            box-shadow: 0 0 20px rgba(255, 67, 81, 0.8);        &#125;        to &#123;            -webkit-box-shadow: 0 0 0 rgba(255, 67, 81, 0.3);            box-shadow: 0 0 0 rgba(255, 67, 81, 0.3);        &#125;    &#125;    @keyframes glowing-caution &#123;        from &#123;            -webkit-box-shadow: 0 0 0 rgba(255, 67, 81, 0.3);            box-shadow: 0 0 0 rgba(255, 67, 81, 0.3);        &#125;        50% &#123;            -webkit-box-shadow: 0 0 20px rgba(255, 67, 81, 0.8);            box-shadow: 0 0 20px rgba(255, 67, 81, 0.8);        &#125;        to &#123;            -webkit-box-shadow: 0 0 0 rgba(255, 67, 81, 0.3);            box-shadow: 0 0 0 rgba(255, 67, 81, 0.3);        &#125;    &#125;    .button-caution:hover &#123;        background-color: #ff7680;        border-color: #ff7680;        color: #FFF;        text-decoration: none;    &#125;    .frind-card1 &#123;        background-image: linear-gradient(to right, #4facfe 0%, #00f2fe 100%);    &#125;    .frind-card2 &#123;        background-image: linear-gradient(135deg, #667eea 0%, #764ba2 100%);    &#125;    .frind-card3 &#123;        background-image: linear-gradient(to right, #b8cbb8 0%, #b8cbb8 0%, #b465da 0%, #cf6cc9 33%, #ee609c 66%, #ee609c 100%);    &#125;    .frind-card4 &#123;        background-image: linear-gradient(to right, #6a11cb 0%, #2575fc 100%);    &#125;    .frind-card5 &#123;        background-image: linear-gradient(to top, #c471f5 0%, #fa71cd 100%);    &#125;    .frind-card6 &#123;        background-image: linear-gradient(to top, #48c6ef 0%, #6f86d6 100%);    &#125;    .frind-card7 &#123;        background-image: linear-gradient(to top, #0ba360 0%, #3cba92 100%);    &#125;    .frind-card8 &#123;        background-image: linear-gradient(to top, #0c3483 0%, #a2b6df 100%, #6b8cce 100%, #a2b6df 100%);    &#125;    .frind-card9 &#123;        background-image: linear-gradient(to right, #ff758c 0%, #ff7eb3 100%);    &#125;    .frind-card10 &#123;        background-image: linear-gradient(to top, #f77062 0%, #fe5196 100%);    &#125;    article .card &#123;        overflow: visible !important;    &#125;&lt;&#x2F;style&gt;&lt;main class&#x3D;&quot;content&quot;&gt;    &lt;div class&#x3D;&quot;container friends-container&quot;&gt;        &lt;div class&#x3D;&quot;card&quot;&gt;            &lt;div class&#x3D;&quot;card-content&quot;&gt;                &lt;div class&#x3D;&quot;tag-title center-align&quot;&gt;                    &lt;i class&#x3D;&quot;fab fa-windows&quot;&gt;&lt;&#x2F;i&gt;&nbsp;&nbsp;Mac软件清单                &lt;&#x2F;div&gt;                &lt;article id&#x3D;&quot;friends-link&quot;&gt;                    &lt;% if (site.data &amp;&amp; site.data.mac) &#123; %&gt;                    &lt;% var friends &#x3D; site.data.mac; %&gt;                    &lt;div class&#x3D;&quot;row tags-posts friend-all&quot;&gt;                        &lt;% for (var i &#x3D; 0, len &#x3D; friends.length; i &lt; len; i++) &#123; %&gt;                        &lt;% var friend &#x3D; friends[i]; %&gt;                        &lt;div class&#x3D;&quot;col s12 m6 l4 friend-div&quot; data-aos&#x3D;&quot;zoom-in-up&quot;&gt;                            &lt;div class&#x3D;&quot;card frind-card&lt;%- ((i % 10) +1) %&gt;&quot;&gt;                                &lt;div class&#x3D;&quot;frind-ship&quot;&gt;                                    &lt;div class&#x3D;&quot;title&quot;&gt;                                        &lt;img src&#x3D;&quot;&lt;%- url_for(friend.avatar) %&gt;&quot; alt&#x3D;&quot;img&quot;&gt;                                        &lt;div&gt;                                            &lt;h1 class&#x3D;&quot;friend-name&quot;&gt;&lt;%&#x3D; friend.name %&gt;&lt;&#x2F;h1&gt;                                            &lt;p style&#x3D;&quot;position: relative;top: -35px;&quot;&gt;&lt;%&#x3D; friend.introduction %&gt;&lt;&#x2F;p&gt;                                        &lt;&#x2F;div&gt;                                    &lt;&#x2F;div&gt;                                    &lt;div class&#x3D;&quot;friend-button&quot;&gt;                                        &lt;a href&#x3D;&quot;&lt;%- url_for(friend.url) %&gt;&quot; target&#x3D;&quot;_blank&quot;                                            class&#x3D;&quot;button button-glow button-rounded button-caution&quot;&gt;                                            &lt;%&#x3D; friend.title %&gt;                                        &lt;&#x2F;a&gt;                                    &lt;&#x2F;div&gt;                                &lt;&#x2F;div&gt;                            &lt;&#x2F;div&gt;                        &lt;&#x2F;div&gt;                        &lt;% &#125; %&gt;                    &lt;&#x2F;div&gt;                    &lt;% &#125; %&gt;                &lt;&#x2F;article&gt;            &lt;&#x2F;div&gt;        &lt;&#x2F;div&gt;        &lt;div class&#x3D;&quot;card&quot;&gt;            &lt;div class&#x3D;&quot;card-content&quot;&gt;                &lt;p style&#x3D;&quot;text-align: center;&quot;&gt;软件密码：1234&lt;&#x2F;p&gt;            &lt;&#x2F;div&gt;        &lt;&#x2F;div&gt;    &lt;&#x2F;div&gt;&lt;&#x2F;main&gt;&lt;script&gt;    $(function () &#123;        $(&#39;#friends-link&#39;).masonry(&#123;            itemSelector: &#39;.friend-div&#39;        &#125;);    &#125;);&lt;&#x2F;script&gt;</code></pre><blockquote><p>如需单独设置封面可将顶栏<code>&lt;%- partial(&#39;_partial/bg-cover&#39;) %&gt;</code>替换为相应ejs中的内容，相应修改即可。</p></blockquote><h3 id="5-文章生成永久链接"><a href="#5-文章生成永久链接" class="headerlink" title="5.文章生成永久链接"></a><a href="https://xmq.plus/posts/2547c616.html#5-%E6%96%87%E7%AB%A0%E7%94%9F%E6%88%90%E6%B0%B8%E4%B9%85%E9%93%BE%E6%8E%A5" title="5.文章生成永久链接"></a>5.文章生成永久链接</h3><p>主题默认的文章链接配置是：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml">permalink: :year&#x2F;:month&#x2F;:day&#x2F;:title</code></pre><p>这种生成的链接地址很长，文章版权的链接地址会出现一大串字符编码，一点也不好看。因此需要修改文章生成链接的格式。</p><p>首先再根目录下执行下面的命令：</p><p><a href="https://github.com/rozbo/hexo-abbrlink">hexo-abbrlinkGitHub 地址</a></p><pre class="language-yaml" data-language="yaml"><code class="language-yaml">npm install hexo-abbrlink --save</code></pre><p>然后站点配置文件下添加如下配置：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml">abbrlink:    alg: crc16   #算法： crc16(default) and crc32    rep: hex     #进制： dec(default) and hex: dec #输出进制：十进制和十六进制，默认为10进制。丨dec为十进制，hex为十六进制</code></pre><p>再将站点配置文件的 permalink 的值修改为：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml">permalink: posts&#x2F;:abbrlink.html  # 此处可以自己设置，也可以直接使用 &#x2F;:abbrlink</code></pre><p>生成文章的链接格式就会是如下样例（官方样例）:</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml">crc16 &amp; hexhttps:&#x2F;&#x2F;post.zz173.com&#x2F;posts&#x2F;66c8.htmlcrc16 &amp; dechttps:&#x2F;&#x2F;post.zz173.com&#x2F;posts&#x2F;65535.htmlcrc32 &amp; hexhttps:&#x2F;&#x2F;post.zz173.com&#x2F;posts&#x2F;8ddf18fb.htmlcrc32 &amp; dechttps:&#x2F;&#x2F;post.zz173.com&#x2F;posts&#x2F;1690090958.html</code></pre><p>生成完后，原 md 文件的 Front-matter 内会增加 abbrlink 字段，值为生成的 ID 。这个字段确保了在我们修改了 Front-matter 内的博客标题 title 或创建日期 date 字段之后而不会改变链接地址。</p><h3 id="6-“关于”页面增加简历"><a href="#6-“关于”页面增加简历" class="headerlink" title="6.“关于”页面增加简历"></a><a href="https://xmq.plus/posts/2547c616.html#6-%E2%80%9C%E5%85%B3%E4%BA%8E%E2%80%9D%E9%A1%B5%E9%9D%A2%E5%A2%9E%E5%8A%A0%E7%AE%80%E5%8E%86" title="6.“关于”页面增加简历"></a>6.“关于”页面增加简历</h3><p>修改<code>/themes/matery/layout/about.ejs</code>，找到<code>&lt;div class=&quot;card&quot;&gt;</code>标签，然后找到它对应的<code>&lt;/div&gt;</code>标签，接在后面新增一个<code>card</code>，语句如下：</p><pre class="language-markup" data-language="markup"><code class="language-markup">&lt;div class&#x3D;&quot;card&quot;&gt;    &lt;div class&#x3D;&quot;card-content&quot;&gt;        &lt;div class&#x3D;&quot;card-content article-card-content&quot;&gt;                &lt;div class&#x3D;&quot;title center-align&quot; data-aos&#x3D;&quot;zoom-in-up&quot;&gt;                    &lt;i class&#x3D;&quot;fa fa-address-book&quot;&gt;&lt;&#x2F;i&gt;&nbsp;&nbsp;&lt;%- __(&#39;myCV&#39;) %&gt;                &lt;&#x2F;div&gt;                &lt;div id&#x3D;&quot;articleContent&quot; data-aos&#x3D;&quot;fade-up&quot;&gt;                    &lt;%- page.content %&gt;                &lt;&#x2F;div&gt;        &lt;&#x2F;div&gt;    &lt;&#x2F;div&gt;&lt;&#x2F;div&gt;</code></pre><p>这样就会多出一张<code>card</code>，然后可以在<code>/source/about/index.md</code>下面写上你的简历了，当然这里的位置随你自己设置，你也可以把简历作为第一个<code>card</code>。</p><h3 id="7-压缩代码"><a href="#7-压缩代码" class="headerlink" title="7.压缩代码"></a><a href="https://xmq.plus/posts/2547c616.html#7-%E5%8E%8B%E7%BC%A9%E4%BB%A3%E7%A0%81" title="7.压缩代码"></a>7.压缩代码</h3><p>因为 hexo 生成的 html、css、js 等都有很多的空格或者换行，而空格和换行也是占用字节的，所以需要将空格换行去掉也就是我要进行的 “压缩”。</p><p>有人说空格换行能占多少字节？确实占不了多少，但是一个人访问是这么多字节，那么一百人，一万人呢？加起来这量就不少了吧，这都是流量啊！这也是很多 css&#x2F;js 文件的后缀为.min.js 或.min.css 的原因。虽然我们可能没那么多访问量，但是能减小一点资源文件的大小也是对访问速度有那么一点提升的。</p><p>我们采用 gulp 代码压缩方式。</p><p>使用方法：</p><p>进入站点根目录下依次执行下面的命令：</p><pre class="language-bash" data-language="bash"><code class="language-bash"># 全局安装gulp模块npm install gulp -g# 安装各种小功能模块  执行这步的时候，可能会提示权限的问题，最好以管理员模式执行npm install gulp gulp-htmlclean gulp-htmlmin gulp-minify-css gulp-uglify gulp-imagemin --save# 额外的功能模块npm install gulp-debug gulp-clean-css gulp-changed gulp-if gulp-plumber gulp-babel babel-preset-es2015 del @babel&#x2F;core --save</code></pre><p>在 Hexo 根目录新建文件 gulpfile.js，并复制以下内容到文件中，有中文注释，可以根据自己需求修改。（注意：文件名不能错，一定为 gulpfile.js，否则会出错！）</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript">var gulp &#x3D; require(&quot;gulp&quot;);var debug &#x3D; require(&quot;gulp-debug&quot;);var cleancss &#x3D; require(&quot;gulp-clean-css&quot;); &#x2F;&#x2F;css压缩组件var uglify &#x3D; require(&quot;gulp-uglify&quot;); &#x2F;&#x2F;js压缩组件var htmlmin &#x3D; require(&quot;gulp-htmlmin&quot;); &#x2F;&#x2F;html压缩组件var htmlclean &#x3D; require(&quot;gulp-htmlclean&quot;); &#x2F;&#x2F;html清理组件var imagemin &#x3D; require(&quot;gulp-imagemin&quot;); &#x2F;&#x2F;图片压缩组件var changed &#x3D; require(&quot;gulp-changed&quot;); &#x2F;&#x2F;文件更改校验组件var gulpif &#x3D; require(&quot;gulp-if&quot;); &#x2F;&#x2F;任务 帮助调用组件var plumber &#x3D; require(&quot;gulp-plumber&quot;); &#x2F;&#x2F;容错组件（发生错误不跳出任务，并报出错误内容）var isScriptAll &#x3D; true; &#x2F;&#x2F;是否处理所有文件，(true|处理所有文件)(false|只处理有更改的文件)var isDebug &#x3D; true; &#x2F;&#x2F;是否调试显示 编译通过的文件var gulpBabel &#x3D; require(&quot;gulp-babel&quot;);var es2015Preset &#x3D; require(&quot;babel-preset-es2015&quot;);var del &#x3D; require(&quot;del&quot;);var Hexo &#x3D; require(&quot;hexo&quot;);var hexo &#x3D; new Hexo(process.cwd(), &#123;&#125;); &#x2F;&#x2F; 初始化一个hexo对象&#x2F;&#x2F; 清除public文件夹gulp.task(&quot;clean&quot;, function () &#123;    return del([&quot;public&#x2F;**&#x2F;*&quot;]);&#125;);&#x2F;&#x2F; 下面几个跟hexo有关的操作，主要通过hexo.call()去执行，注意return&#x2F;&#x2F; 创建静态页面 （等同 hexo generate）gulp.task(&quot;generate&quot;, function () &#123;    return hexo.init().then(function () &#123;        return hexo            .call(&quot;generate&quot;, &#123;                watch: false            &#125;)            .then(function () &#123;                return hexo.exit();            &#125;)            .catch(function (err) &#123;                return hexo.exit(err);            &#125;);    &#125;);&#125;);&#x2F;&#x2F; 启动Hexo服务器gulp.task(&quot;server&quot;, function () &#123;    return hexo        .init()        .then(function () &#123;            return hexo.call(&quot;server&quot;, &#123;&#125;);        &#125;)        .catch(function (err) &#123;            console.log(err);        &#125;);&#125;);&#x2F;&#x2F; 部署到服务器gulp.task(&quot;deploy&quot;, function () &#123;    return hexo.init().then(function () &#123;        return hexo            .call(&quot;deploy&quot;, &#123;                watch: false            &#125;)            .then(function () &#123;                return hexo.exit();            &#125;)            .catch(function (err) &#123;                return hexo.exit(err);            &#125;);    &#125;);&#125;);&#x2F;&#x2F; 压缩public目录下的js文件gulp.task(&quot;compressJs&quot;, function () &#123;    return gulp        .src([&quot;.&#x2F;public&#x2F;**&#x2F;*.js&quot;, &quot;!.&#x2F;public&#x2F;libs&#x2F;**&quot;]) &#x2F;&#x2F;排除的js        .pipe(gulpif(!isScriptAll, changed(&quot;.&#x2F;public&quot;)))        .pipe(gulpif(isDebug, debug(&#123; title: &quot;Compress JS:&quot; &#125;)))        .pipe(plumber())        .pipe(            gulpBabel(&#123;                presets: [es2015Preset] &#x2F;&#x2F; es5检查机制            &#125;)        )        .pipe(uglify()) &#x2F;&#x2F;调用压缩组件方法uglify(),对合并的文件进行压缩        .pipe(gulp.dest(&quot;.&#x2F;public&quot;)); &#x2F;&#x2F;输出到目标目录&#125;);&#x2F;&#x2F; 压缩public目录下的css文件gulp.task(&quot;compressCss&quot;, function () &#123;    var option &#x3D; &#123;        rebase: false,        &#x2F;&#x2F;advanced: true, &#x2F;&#x2F;类型：Boolean 默认：true [是否开启高级优化（合并选择器等）]        compatibility: &quot;ie7&quot; &#x2F;&#x2F;保留ie7及以下兼容写法 类型：String 默认：&#39;&#39;or&#39;*&#39; [启用兼容模式； &#39;ie7&#39;：IE7兼容模式，&#39;ie8&#39;：IE8兼容模式，&#39;*&#39;：IE9+兼容模式]        &#x2F;&#x2F;keepBreaks: true, &#x2F;&#x2F;类型：Boolean 默认：false [是否保留换行]        &#x2F;&#x2F;keepSpecialComments: &#39;*&#39; &#x2F;&#x2F;保留所有特殊前缀 当你用autoprefixer生成的浏览器前缀，如果不加这个参数，有可能将会删除你的部分前缀    &#125;;    return gulp        .src([&quot;.&#x2F;public&#x2F;**&#x2F;*.css&quot;, &quot;!.&#x2F;public&#x2F;**&#x2F;*.min.css&quot;]) &#x2F;&#x2F;排除的css        .pipe(gulpif(!isScriptAll, changed(&quot;.&#x2F;public&quot;)))        .pipe(gulpif(isDebug, debug(&#123; title: &quot;Compress CSS:&quot; &#125;)))        .pipe(plumber())        .pipe(cleancss(option))        .pipe(gulp.dest(&quot;.&#x2F;public&quot;));&#125;);&#x2F;&#x2F; 压缩public目录下的html文件gulp.task(&quot;compressHtml&quot;, function () &#123;    var cleanOptions &#x3D; &#123;        protect: &#x2F;&lt;\!--%fooTemplate\b.*?%--&gt;&#x2F;g, &#x2F;&#x2F;忽略处理        unprotect: &#x2F;&lt;script [^&gt;]*\btype&#x3D;&quot;text\&#x2F;x-handlebars-template&quot;[\s\S]+?&lt;\&#x2F;script&gt;&#x2F;gi &#x2F;&#x2F;特殊处理    &#125;;    var minOption &#x3D; &#123;        collapseWhitespace: true, &#x2F;&#x2F;压缩HTML        collapseBooleanAttributes: true, &#x2F;&#x2F;省略布尔属性的值 &lt;input checked&#x3D;&quot;true&quot;&#x2F;&gt; &#x3D;&#x3D;&gt; &lt;input &#x2F;&gt;        removeEmptyAttributes: true, &#x2F;&#x2F;删除所有空格作属性值 &lt;input id&#x3D;&quot;&quot; &#x2F;&gt; &#x3D;&#x3D;&gt; &lt;input &#x2F;&gt;        removeScriptTypeAttributes: true, &#x2F;&#x2F;删除&lt;script&gt;的type&#x3D;&quot;text&#x2F;javascript&quot;        removeStyleLinkTypeAttributes: true, &#x2F;&#x2F;删除&lt;style&gt;和&lt;link&gt;的type&#x3D;&quot;text&#x2F;css&quot;        removeComments: true, &#x2F;&#x2F;清除HTML注释        minifyJS: true, &#x2F;&#x2F;压缩页面JS        minifyCSS: true, &#x2F;&#x2F;压缩页面CSS        minifyURLs: true &#x2F;&#x2F;替换页面URL    &#125;;    return gulp        .src(&quot;.&#x2F;public&#x2F;**&#x2F;*.html&quot;)        .pipe(gulpif(isDebug, debug(&#123; title: &quot;Compress HTML:&quot; &#125;)))        .pipe(plumber())        .pipe(htmlclean(cleanOptions))        .pipe(htmlmin(minOption))        .pipe(gulp.dest(&quot;.&#x2F;public&quot;));&#125;);&#x2F;&#x2F; 压缩 public&#x2F;medias 目录内图片gulp.task(&quot;compressImage&quot;, function () &#123;    var option &#x3D; &#123;        optimizationLevel: 5, &#x2F;&#x2F;类型：Number 默认：3 取值范围：0-7（优化等级）        progressive: true, &#x2F;&#x2F;类型：Boolean 默认：false 无损压缩jpg图片        interlaced: false, &#x2F;&#x2F;类型：Boolean 默认：false 隔行扫描gif进行渲染        multipass: false &#x2F;&#x2F;类型：Boolean 默认：false 多次优化svg直到完全优化    &#125;;    return gulp        .src(&quot;.&#x2F;public&#x2F;medias&#x2F;**&#x2F;*.*&quot;)        .pipe(gulpif(!isScriptAll, changed(&quot;.&#x2F;public&#x2F;medias&quot;)))        .pipe(gulpif(isDebug, debug(&#123; title: &quot;Compress Images:&quot; &#125;)))        .pipe(plumber())        .pipe(imagemin(option))        .pipe(gulp.dest(&quot;.&#x2F;public&quot;));&#125;);&#x2F;&#x2F; 执行顺序： 清除public目录 -&gt; 产生原始博客内容 -&gt; 执行压缩混淆 -&gt; 部署到服务器gulp.task(    &quot;build&quot;,    gulp.series(        &quot;clean&quot;,        &quot;generate&quot;,        &quot;compressHtml&quot;,        &quot;compressCss&quot;,        &quot;compressJs&quot;,        &quot;compressImage&quot;,        gulp.parallel(&quot;deploy&quot;)    ));&#x2F;&#x2F; 默认任务gulp.task(    &quot;default&quot;,    gulp.series(        &quot;clean&quot;,        &quot;generate&quot;,        gulp.parallel(&quot;compressHtml&quot;, &quot;compressCss&quot;, &quot;compressJs&quot;,&quot;compressImage&quot;)    ));&#x2F;&#x2F;Gulp4最大的一个改变就是gulp.task函数现在只支持两个参数，分别是任务名和运行任务的函数</code></pre><p>以后的执行方式有两种：</p><ul><li>直接在 Hexo 根目录执行 gulp 或者 gulp default ，这个命令相当于 hexo cl&amp;&amp;hexo g 并且再把代码和图片压缩。</li><li>在 Hexo 根目录执行 gulp build ，这个命令与第 1 种相比是：在最后又加了个 hexo d ，等于说生成、压缩文件后又帮你自动部署了。</li></ul><blockquote><p>值得注意的是：这个加入了图片压缩，如果不想用图片压缩可以把第 154 行的 “compressImage”, 和第 165 行的 ,”compressImage” 去掉即可</p></blockquote><h2 id="七、常见问题"><a href="#七、常见问题" class="headerlink" title="七、常见问题"></a><a href="https://xmq.plus/posts/2547c616.html#%E4%B8%83%E3%80%81%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98" title="七、常见问题"></a>七、常见问题</h2><h3 id="1-文章代码块乱码"><a href="#1-文章代码块乱码" class="headerlink" title="1.文章代码块乱码"></a><a href="https://xmq.plus/posts/2547c616.html#1-%E6%96%87%E7%AB%A0%E4%BB%A3%E7%A0%81%E5%9D%97%E4%B9%B1%E7%A0%81" title="1.文章代码块乱码"></a>1.文章代码块乱码</h3><p><strong>问题描述：</strong> 一是代码块中的 <code>&#123; &#125;</code> 被转义，二是代码块中的代码可能会被渲染，甚至会影响整个文章页面的布局</p><p><img src="https://images.xmq.plus/image-20200925163012097.png" alt="代码显示异常"></p><p><strong>代码显示异常</strong></p><p><img src="https://images.xmq.plus/image-20200925163102717.png" alt="代码显示异常"></p><p><strong>代码显示异常</strong></p><p><strong>解决办法：</strong>卸载现有新版本，更换<a href="mailto:hexo@4.2.1">hexo@4.2.1</a>版本</p><p><strong>具体步骤：</strong></p><ul><li><p>将版本降为低版本</p><p>先卸载现有版本 npm uninstall hexo-cli -g</p></li><li><p>然后重新安装<code>npm hexo@4.2.1</code></p><pre class="language-bash" data-language="bash"><code class="language-bash">npm install hexo@4.2.1npm install hexo-cli -g</code></pre></li><li><p>重新创建一个文件夹<code>matery</code>，重新<code>hexo init matery</code></p></li><li><p>将所有文件跳过式移动到新文件夹中(千万不要点替换文件)</p></li><li><p>然后再将自己的根目录下的<code>_config.yml</code>替换到新文件夹下根目录位置</p></li><li><p>删除自带主题<code>landscape</code></p></li><li><p>以后不要安装<code>Prism_plugin</code>插件，否则会出现同样的问题</p></li><li><p>卸载插件命令：<code>npm un -S hexo-prism-plugin</code></p></li></ul><h3 id="2-卸载代码高亮插件后代码无法高亮"><a href="#2-卸载代码高亮插件后代码无法高亮" class="headerlink" title="2.卸载代码高亮插件后代码无法高亮"></a><a href="https://xmq.plus/posts/2547c616.html#2-%E5%8D%B8%E8%BD%BD%E4%BB%A3%E7%A0%81%E9%AB%98%E4%BA%AE%E6%8F%92%E4%BB%B6%E5%90%8E%E4%BB%A3%E7%A0%81%E6%97%A0%E6%B3%95%E9%AB%98%E4%BA%AE" title="2.卸载代码高亮插件后代码无法高亮"></a>2.卸载代码高亮插件后代码无法高亮</h3><p><strong>问题描述：</strong>卸载代码高亮插件Prism_plugin后代码无法高亮</p><p><strong>解决办法：</strong>Prism_plugin插件在metary主题中无法正常使用，就换一种方式。</p><p><strong>具体办法：</strong></p><ul><li><p>1.进入prismjs官网：<a href="https://prismjs.com/download.html">https://prismjs.com/download.html</a></p></li><li><p>2.选择主题、语言、其他插件</p></li></ul><p>选择 theme 主题、language 支持的语言（不要选太多，够用就好）、plugin 插件（可以选Line Numbers、Copy to Clipboard Button，其他的看自己需求）；然后点击下载按钮就行了；</p><p><img src="https://images.xmq.plus/image-20200926155658145.png" alt="下载"></p><p><strong>下载</strong></p><ul><li>3.文件放置位置</li></ul><p>step1. 在themes\matery\source\js下新建prism文件夹，用来存放js与css代码。</p><p>step2. 找到此文件hexo-theme-matery\layout_partial\head.ejs打开，在标签之前黏贴以下代码：</p><pre class="language-markup" data-language="markup"><code class="language-markup">&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;&#x2F;js&#x2F;prism&#x2F;prism.css&quot;&gt; </code></pre><blockquote><p>如果不存在可以直接放在layout.ejs文件中</p></blockquote><p>step3. 找到此文件hexo-theme-matery\layout_partial\footer.ejs打开，在最后部分黏贴以下代码：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript">&lt;script src&#x3D;&quot;&#x2F;js&#x2F;prism&#x2F;prism.js&quot; async&gt;&lt;&#x2F;script&gt;</code></pre><p>step4. 记得在hexo的根目录_config.yml下设置enable: false</p><p><code>highlight: enable: false</code></p><p>step5. 重新生成博客文件，重启本地服务。</p><p><code>$ hexo clean hexo generate $ hexo server</code></p><h3 id="3-代码压缩插件压缩后无法显示博客文章"><a href="#3-代码压缩插件压缩后无法显示博客文章" class="headerlink" title="3.代码压缩插件压缩后无法显示博客文章"></a><a href="https://xmq.plus/posts/2547c616.html#3-%E4%BB%A3%E7%A0%81%E5%8E%8B%E7%BC%A9%E6%8F%92%E4%BB%B6%E5%8E%8B%E7%BC%A9%E5%90%8E%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BA%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0" title="3.代码压缩插件压缩后无法显示博客文章"></a>3.代码压缩插件压缩后无法显示博客文章</h3><p><strong>问题描述</strong>：代码压缩脚本gulp生成的文章博客无法显示</p><p><strong>解决办法：</strong>查看网页文章链接是否带有<code>.html</code>后缀，在配置文件中加上即可</p><p><strong>具体步骤：</strong></p><p>根目录下修改配置文件_config.yml：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml">pretty_urls:    trailing_index: true # 是否在永久链接中保留尾部的 index.html，设置为 false 时去除    trailing_html: true # 是否在永久链接中保留尾部的.html, 设置为false时去除(对尾部的index.html无效)</code></pre><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a><a href="https://xmq.plus/posts/2547c616.html#%E5%8F%82%E8%80%83%E6%96%87%E7%AB%A0" title="参考文章"></a>参考文章</h2><ul><li><a href="https://hexo.io/zh-cn/">Hexo官方</a></li><li><a href="https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md">hexo-theme-matery</a></li><li><a href="https://yafine-blog.cn/posts/4ab2.html">Hexo+github 搭建博客 (超级详细版，精细入微)</a></li><li><a href="https://sunhwee.com/posts/6e8839eb.html">Hexo+Github博客搭建完全教程</a></li><li><a href="https://zhangxiaocai.cn/posts/a53a9069.html">matery常见问题解决</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 博客搭建记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> matery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>matery进阶设置</title>
      <link href="/2023/05/21/6.matery%E8%BF%9B%E9%98%B6%E8%AE%BE%E7%BD%AE/"/>
      <url>/2023/05/21/6.matery%E8%BF%9B%E9%98%B6%E8%AE%BE%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="hexo-theme-matery"><a href="#hexo-theme-matery" class="headerlink" title="hexo-theme-matery"></a>hexo-theme-matery</h1><blockquote><p>这是一个采用 <code>Material Design</code> 和响应式设计的 Hexo 博客主题。</p></blockquote><h2 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h2><ul><li>简单漂亮，文章内容美观易读</li><li><a href="https://material.io/">Material Design</a> 设计</li><li>响应式设计，博客在桌面端、平板、手机等设备上均能很好的展现</li><li>首页轮播文章及每天动态切换 <code>Banner</code> 图片</li><li>瀑布流式的博客文章列表（文章无特色图片时会有 <code>24</code> 张漂亮的图片代替）</li><li>时间轴式的归档页</li><li><strong>词云</strong>的标签页和<strong>雷达图</strong>的分类页</li><li>丰富的关于我页面（包括关于我、文章统计图、我的项目、我的技能、相册等）</li><li>可自定义的数据的友情链接页面</li><li>支持文章置顶和文章打赏</li><li>支持 <code>MathJax</code></li><li>支持中文繁简转换</li><li><code>TOC</code> 目录</li><li>可设置复制文章内容时追加版权信息</li><li>可设置阅读文章时做密码验证</li><li><a href="https://gitalk.github.io/">Gitalk</a>、<a href="https://imsun.github.io/gitment/">Gitment</a>、<a href="https://valine.js.org/">Valine</a> 和 <a href="https://disqus.com/">Disqus</a> 评论模块（推荐使用 <code>Gitalk</code>）</li><li>集成了<a href="http://busuanzi.ibruce.info/">不蒜子统计</a>、谷歌分析（<code>Google Analytics</code>）和文章字数统计等功能</li><li>支持在首页的音乐播放和视频播放功能</li><li>支持<code>emoji</code>表情，用<code>markdown emoji</code>语法书写直接生成对应的能<strong>跳跃</strong>的表情。</li><li>支持 <a href="http://www.daovoice.io/">DaoVoice</a>、<a href="https://www.tidio.com/">Tidio</a> 在线聊天功能。</li></ul><h2 id="贡献者"><a href="#贡献者" class="headerlink" title="贡献者"></a>贡献者</h2><p>感谢下面列出的贡献者，没有他们，hexo-theme-matery 不会这么完美。</p><ul><li><a href="https://github.com/HarborZeng">@HarborZeng</a></li><li><a href="https://github.com/shw2018">@shw2018</a></li><li><a href="https://github.com/L1cardo">@L1cardo</a></li><li><a href="https://github.com/Five-great">@Five-great</a></li></ul><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>本主题<strong>推荐你使用 Hexo 5.0.0 及以上的版本</strong>。如果，你已经有一个自己的 <a href="https://hexo.io/zh-cn/">Hexo</a> 博客了，建议你将 Hexo 升级到最新稳定的版本。</p><p>点击 <a href="https://codeload.github.com/blinkfox/hexo-theme-matery/zip/master">这里</a> 下载 <code>master</code> 分支的最新稳定版的代码，解压缩后，将 <code>hexo-theme-matery</code> 的文件夹复制到你 Hexo 的 <code>themes</code> 文件夹中即可。</p><p>当然你也可以在你的 <code>themes</code> 文件夹下使用 <code>git clone</code> 命令来下载:</p><pre class="language-bash" data-language="bash"><code class="language-bash">git clone https:&#x2F;&#x2F;github.com&#x2F;blinkfox&#x2F;hexo-theme-matery.git</code></pre><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="切换主题"><a href="#切换主题" class="headerlink" title="切换主题"></a>切换主题</h3><p>修改 Hexo 根目录下的 <code>_config.yml</code> 的  <code>theme</code> 的值：<code>theme: hexo-theme-matery</code></p><h4 id="config-yml-文件的其它修改建议"><a href="#config-yml-文件的其它修改建议" class="headerlink" title="_config.yml 文件的其它修改建议:"></a><code>_config.yml</code> 文件的其它修改建议:</h4><ul><li>请修改 <code>_config.yml</code> 的 <code>url</code> 的值为你的网站主 <code>URL</code>（如：<code>http://xxx.github.io</code>）。</li><li>建议修改两个 <code>per_page</code> 的分页条数值为 <code>6</code> 的倍数，如：<code>12</code>、<code>18</code> 等，这样文章列表在各个屏幕下都能较好的显示。</li><li>如果你是中文用户，则建议修改 <code>language</code> 的值为 <code>zh-CN</code>。</li></ul><h3 id="新建分类-categories-页"><a href="#新建分类-categories-页" class="headerlink" title="新建分类 categories 页"></a>新建分类 categories 页</h3><p><code>categories</code> 页是用来展示所有分类的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>categories/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class="language-bash" data-language="bash"><code class="language-bash">hexo new page &quot;categories&quot;</code></pre><p>编辑你刚刚新建的页面文件 <code>/source/categories/index.md</code>，至少需要以下内容：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml">---title: categoriesdate: 2018-09-30 17:25:30type: &quot;categories&quot;layout: &quot;categories&quot;---</code></pre><h3 id="新建标签-tags-页"><a href="#新建标签-tags-页" class="headerlink" title="新建标签 tags 页"></a>新建标签 tags 页</h3><p><code>tags</code> 页是用来展示所有标签的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>tags/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class="language-bash" data-language="bash"><code class="language-bash">hexo new page &quot;tags&quot;</code></pre><p>编辑你刚刚新建的页面文件 <code>/source/tags/index.md</code>，至少需要以下内容：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml">---title: tagsdate: 2018-09-30 18:23:38type: &quot;tags&quot;layout: &quot;tags&quot;---</code></pre><h3 id="新建关于我-about-页"><a href="#新建关于我-about-页" class="headerlink" title="新建关于我 about 页"></a>新建关于我 about 页</h3><p><code>about</code> 页是用来展示<strong>关于我和我的博客</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>about/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class="language-bash" data-language="bash"><code class="language-bash">hexo new page &quot;about&quot;</code></pre><p>编辑你刚刚新建的页面文件 <code>/source/about/index.md</code>，至少需要以下内容：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml">---title: aboutdate: 2018-09-30 17:25:30type: &quot;about&quot;layout: &quot;about&quot;---</code></pre><h3 id="新建留言板-contact-页（可选的）"><a href="#新建留言板-contact-页（可选的）" class="headerlink" title="新建留言板 contact 页（可选的）"></a>新建留言板 contact 页（可选的）</h3><p><code>contact</code> 页是用来展示<strong>留言板</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>contact/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class="language-bash" data-language="bash"><code class="language-bash">hexo new page &quot;contact&quot;</code></pre><p>编辑你刚刚新建的页面文件 <code>/source/contact/index.md</code>，至少需要以下内容：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml">---title: contactdate: 2018-09-30 17:25:30type: &quot;contact&quot;layout: &quot;contact&quot;---</code></pre><blockquote><p><strong>注</strong>：本留言板功能依赖于第三方评论系统，请<strong>激活</strong>你的评论系统才有效果。并且在主题的 <code>_config.yml</code> 文件中，第 <code>19</code> 至 <code>21</code> 行的“<strong>菜单</strong>”配置，取消关于留言板的注释即可。</p></blockquote><h3 id="新建友情链接-friends-页（可选的）"><a href="#新建友情链接-friends-页（可选的）" class="headerlink" title="新建友情链接 friends 页（可选的）"></a>新建友情链接 friends 页（可选的）</h3><p><code>friends</code> 页是用来展示<strong>友情链接</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>friends/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class="language-bash" data-language="bash"><code class="language-bash">hexo new page &quot;friends&quot;</code></pre><p>编辑你刚刚新建的页面文件 <code>/source/friends/index.md</code>，至少需要以下内容：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml">---title: friendsdate: 2018-12-12 21:25:30type: &quot;friends&quot;layout: &quot;friends&quot;---</code></pre><p>同时，在你的博客 <code>source</code> 目录下新建 <code>_data</code> 目录，在 <code>_data</code> 目录中新建 <code>friends.json</code> 文件，文件内容如下所示：</p><pre class="language-json" data-language="json"><code class="language-json">[&#123;    &quot;avatar&quot;: &quot;http:&#x2F;&#x2F;image.luokangyuan.com&#x2F;1_qq_27922023.jpg&quot;,    &quot;name&quot;: &quot;码酱&quot;,    &quot;introduction&quot;: &quot;我不是大佬，只是在追寻大佬的脚步&quot;,    &quot;url&quot;: &quot;http:&#x2F;&#x2F;luokangyuan.com&#x2F;&quot;,    &quot;title&quot;: &quot;前去学习&quot;&#125;, &#123;    &quot;avatar&quot;: &quot;http:&#x2F;&#x2F;image.luokangyuan.com&#x2F;4027734.jpeg&quot;,    &quot;name&quot;: &quot;闪烁之狐&quot;,    &quot;introduction&quot;: &quot;编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬&quot;,    &quot;url&quot;: &quot;https:&#x2F;&#x2F;blinkfox.github.io&#x2F;&quot;,    &quot;title&quot;: &quot;前去学习&quot;&#125;, &#123;    &quot;avatar&quot;: &quot;http:&#x2F;&#x2F;image.luokangyuan.com&#x2F;avatar.jpg&quot;,    &quot;name&quot;: &quot;ja_rome&quot;,    &quot;introduction&quot;: &quot;平凡的脚步也可以走出伟大的行程&quot;,    &quot;url&quot;: &quot;https:&#x2F;&#x2F;me.csdn.net&#x2F;jlh912008548&quot;,    &quot;title&quot;: &quot;前去学习&quot;&#125;]</code></pre><h3 id="新建-404-页"><a href="#新建-404-页" class="headerlink" title="新建 404 页"></a>新建 404 页</h3><p>如果在你的博客 <code>source</code> 目录下还没有 <code>404.md</code> 文件，那么你就需要新建一个。编辑你刚刚新建的页面文件 <code>/source/404.md</code>，至少需要以下内容：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml">---title: 404date: 2018-09-30 17:25:30type: &quot;404&quot;layout: &quot;404&quot;description: &quot;Oops～，我崩溃了！找不到你想要的页面 :(&quot;---</code></pre><h3 id="菜单导航配置"><a href="#菜单导航配置" class="headerlink" title="菜单导航配置"></a>菜单导航配置</h3><h4 id="配置基本菜单导航的名称、路径url和图标icon"><a href="#配置基本菜单导航的名称、路径url和图标icon" class="headerlink" title="配置基本菜单导航的名称、路径url和图标icon."></a>配置基本菜单导航的名称、路径url和图标icon.</h4><p>1.菜单导航名称可以是中文也可以是英文(如：<code>Index</code>或<code>主页</code>)<br>2.图标icon 可以在<a href="https://fontawesome.com/icons">Font Awesome</a> 中查找   </p><pre class="language-yaml" data-language="yaml"><code class="language-yaml">menu:  Index:    url: &#x2F;    icon: fas fa-home  Tags:    url: &#x2F;tags    icon: fas fa-tags  Categories:    url: &#x2F;categories    icon: fas fa-bookmark  Archives:    url: &#x2F;archives    icon: fas fa-archive  About:    url: &#x2F;about    icon: fas fa-user-circle  Friends:    url: &#x2F;friends    icon: fas fa-address-book</code></pre><h4 id="二级菜单配置方法"><a href="#二级菜单配置方法" class="headerlink" title="二级菜单配置方法"></a>二级菜单配置方法</h4><p>如果你需要二级菜单则可以在原基本菜单导航的基础上如下操作</p><ol><li>在需要添加二级菜单的一级菜单下添加<code>children</code>关键字(如:<code>About</code>菜单下添加<code>children</code>)     </li><li>在<code>children</code>下创建二级菜单的 名称name,路径url和图标icon.      </li><li>注意每个二级菜单模块前要加 <code>-</code>.     </li><li>注意缩进格式</li></ol><pre class="language-yaml" data-language="yaml"><code class="language-yaml">menu:  Index:    url: &#x2F;    icon: fas fa-home  Tags:    url: &#x2F;tags    icon: fas fa-tags  Categories:    url: &#x2F;categories    icon: fas fa-bookmark  Archives:    url: &#x2F;archives    icon: fas fa-archive  About:    url: &#x2F;about    icon: fas fa-user-circle-o  Friends:    url: &#x2F;friends    icon: fas fa-address-book  Medias:    icon: fas fa-list    children:      - name: Music        url: &#x2F;music        icon: fas fa-music      - name: Movies        url: &#x2F;movies        icon: fas fa-film      - name: Books        url: &#x2F;books        icon: fas fa-book      - name: Galleries        url: &#x2F;galleries        icon: fas fa-image</code></pre><h3 id="代码高亮"><a href="#代码高亮" class="headerlink" title="代码高亮"></a>代码高亮</h3><p>从 Hexo5.0 版本开始自带了 <code>prismjs</code> 代码语法高亮的支持，本主题对此进行了改造支持。</p><p>如果你的博客中曾经安装过 <code>hexo-prism-plugin</code> 的插件，那么你须要执行 <code>npm uninstall hexo-prism-plugin</code> 来卸载掉它，否则生成的代码中会有 <code>&amp;#123;</code> 和 <code>&amp;#125;</code> 的转义字符。</p><p>然后，修改 Hexo 根目录下 <code>_config.yml</code> 文件中 <code>highlight.enable</code> 的值为 <code>false</code>，并将 <code>prismjs.enable</code> 的值设置为 <code>true</code>，主要配置如下：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml">highlight:  enable: false  line_number: true  auto_detect: false  tab_replace: &#39;&#39;  wrap: true  hljs: falseprismjs:  enable: true  preprocess: true  line_number: true  tab_replace: &#39;&#39;</code></pre><p>主题中默认的 <code>prismjs</code> 主题是 <code>Tomorrow Night</code>，如果你想定制自己的主题，可以前往 <a href="https://prismjs.com/download.html">prismjs 下载页面</a> 定制下载自己喜欢的主题 <code>css</code> 文件，然后将此 css 主题文件取名为 <code>prism.css</code>，替换掉 <code>hexo-theme-matery</code> 主题文件夹中的 <code>source/libs/prism/prism.css</code> 文件即可。</p><h3 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h3><p>本主题中还使用到了 <a href="https://github.com/wzpan/hexo-generator-search">hexo-generator-search</a> 的 Hexo 插件来做内容搜索，安装命令如下：</p><pre class="language-bash" data-language="bash"><code class="language-bash">npm install hexo-generator-search --save</code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml">search:  path: search.xml  field: post</code></pre><h3 id="中文链接转拼音（建议安装）"><a href="#中文链接转拼音（建议安装）" class="headerlink" title="中文链接转拼音（建议安装）"></a>中文链接转拼音（建议安装）</h3><p>如果你的文章名称是中文的，那么 Hexo 默认生成的永久链接也会有中文，这样不利于 <code>SEO</code>，且 <code>gitment</code> 评论对中文链接也不支持。我们可以用 <a href="https://github.com/viko16/hexo-permalink-pinyin">hexo-permalink-pinyin</a> Hexo 插件使在生成文章时生成中文拼音的永久链接。</p><p>安装命令如下：</p><pre class="language-bash" data-language="bash"><code class="language-bash">npm i hexo-permalink-pinyin --save</code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml">permalink_pinyin:  enable: true  separator: &#39;-&#39; # default: &#39;-&#39;</code></pre><blockquote><p><strong>注</strong>：除了此插件外，<a href="https://github.com/rozbo/hexo-abbrlink">hexo-abbrlink</a> 插件也可以生成非中文的链接。</p></blockquote><h3 id="文章字数统计插件（建议安装）"><a href="#文章字数统计插件（建议安装）" class="headerlink" title="文章字数统计插件（建议安装）"></a>文章字数统计插件（建议安装）</h3><p>如果你想要在文章中显示文章字数、阅读时长信息，可以安装 <a href="https://github.com/willin/hexo-wordcount">hexo-wordcount</a>插件。</p><p>安装命令如下：</p><pre class="language-bash" data-language="bash"><code class="language-bash">npm i --save hexo-wordcount</code></pre><p>然后只需在本主题下的 <code>_config.yml</code> 文件中，将各个文章字数相关的配置激活即可：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml">postInfo:  date: true  update: false  wordCount: false # 设置文章字数统计为 true.  totalCount: false # 设置站点文章总字数统计为 true.  min2read: false # 阅读时长.  readCount: false # 阅读次数.</code></pre><h3 id="添加emoji表情支持（可选的）"><a href="#添加emoji表情支持（可选的）" class="headerlink" title="添加emoji表情支持（可选的）"></a>添加emoji表情支持（可选的）</h3><p>本主题新增了对<code>emoji</code>表情的支持，使用到了 <a href="https://npm.taobao.org/package/hexo-filter-github-emojis">hexo-filter-github-emojis</a> 的 Hexo 插件来支持 <code>emoji</code>表情的生成，把对应的<code>markdown emoji</code>语法（<code>::</code>,例如：<code>:smile:</code>）转变成会跳跃的<code>emoji</code>表情，安装命令如下：</p><pre class="language-bash" data-language="bash"><code class="language-bash">npm install hexo-filter-github-emojis --save</code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml">githubEmojis:  enable: true  className: github-emoji  inject: true  styles:  customEmojis:</code></pre><p>执行 <code>hexo clean &amp;&amp; hexo g</code> 重新生成博客文件，然后就可以在文章中对应位置看到你用<code>emoji</code>语法写的表情了。</p><h3 id="添加-RSS-订阅支持（可选的）"><a href="#添加-RSS-订阅支持（可选的）" class="headerlink" title="添加 RSS 订阅支持（可选的）"></a>添加 RSS 订阅支持（可选的）</h3><p>本主题中还使用到了 <a href="https://github.com/hexojs/hexo-generator-feed">hexo-generator-feed</a> 的 Hexo 插件来做 <code>RSS</code>，安装命令如下：</p><pre class="language-bash" data-language="bash"><code class="language-bash">npm install hexo-generator-feed --save</code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml">feed:  type: atom  path: atom.xml  limit: 20  hub:  content:  content_limit: 140  content_limit_delim: &#39; &#39;  order_by: -date</code></pre><p>执行 <code>hexo clean &amp;&amp; hexo g</code> 重新生成博客文件，然后在 <code>public</code> 文件夹中即可看到 <code>atom.xml</code> 文件，说明你已经安装成功了。</p><h3 id="添加-DaoVoice-在线聊天功能（可选的）"><a href="#添加-DaoVoice-在线聊天功能（可选的）" class="headerlink" title="添加 DaoVoice 在线聊天功能（可选的）"></a>添加 <a href="http://www.daovoice.io/">DaoVoice</a> 在线聊天功能（可选的）</h3><p>前往 <a href="http://www.daovoice.io/">DaoVoice</a> 官网注册并且获取 <code>app_id</code>，并将 <code>app_id</code> 填入主题的 <code>_config.yml</code> 文件中。</p><h3 id="添加-Tidio-在线聊天功能（可选的）"><a href="#添加-Tidio-在线聊天功能（可选的）" class="headerlink" title="添加 Tidio 在线聊天功能（可选的）"></a>添加 <a href="https://www.tidio.com/">Tidio</a> 在线聊天功能（可选的）</h3><p>前往 <a href="https://www.tidio.com/">Tidio</a> 官网注册并且获取 <code>Public Key</code>，并将 <code>Public Key</code> 填入主题的 <code>_config.yml</code> 文件中。</p><h3 id="修改页脚"><a href="#修改页脚" class="headerlink" title="修改页脚"></a>修改页脚</h3><p>页脚信息可能需要做定制化修改，而且它不便于做成配置信息，所以可能需要你自己去再修改和加工。修改的地方在主题文件的 <code>/layout/_partial/footer.ejs</code> 文件中，包括站点、使用的主题、访问量等。</p><h3 id="添加中文繁简转换"><a href="#添加中文繁简转换" class="headerlink" title="添加中文繁简转换"></a>添加中文繁简转换</h3><p>在主题的 <code>_config.yml</code> 文件中，开启 translate 为 enable。</p><blockquote><p>开启中文繁简转换如下修改。默认不开启。<br>实例演示： <a href="https://blog.17lai.site/">繁简转换</a> 底下 footer 栏</p></blockquote><pre class="language-yaml" data-language="yaml"><code class="language-yaml">translate:  enable: true</code></pre><h3 id="修改社交链接"><a href="#修改社交链接" class="headerlink" title="修改社交链接"></a>修改社交链接</h3><p>在主题的 <code>_config.yml</code> 文件中，默认支持 <code>QQ</code>、<code>GitHub</code> 和邮箱等的配置，你可以在主题文件的 <code>/layout/_partial/social-link.ejs</code> 文件中，新增、修改你需要的社交链接地址，增加链接可参考如下代码：</p><pre class="language-markup" data-language="markup"><code class="language-markup">&lt;% if (theme.socialLink.github) &#123; %&gt;    &lt;a href&#x3D;&quot;&lt;%&#x3D; theme.socialLink.github %&gt;&quot; class&#x3D;&quot;tooltipped&quot; target&#x3D;&quot;_blank&quot; data-tooltip&#x3D;&quot;访问我的GitHub&quot; data-position&#x3D;&quot;top&quot; data-delay&#x3D;&quot;50&quot;&gt;        &lt;i class&#x3D;&quot;fab fa-github&quot;&gt;&lt;&#x2F;i&gt;    &lt;&#x2F;a&gt;&lt;% &#125; %&gt;</code></pre><p>其中，社交图标（如：<code>fa-github</code>）你可以在 <a href="https://fontawesome.com/icons">Font Awesome</a> 中搜索找到。以下是常用社交图标的标识，供你参考：</p><ul><li>Facebook: <code>fab fa-facebook</code></li><li>Twitter: <code>fab fa-twitter</code></li><li>Google-plus: <code>fab fa-google-plus</code></li><li>Linkedin: <code>fab fa-linkedin</code></li><li>Tumblr: <code>fab fa-tumblr</code></li><li>Medium: <code>fab fa-medium</code></li><li>Slack: <code>fab fa-slack</code></li><li>Sina Weibo: <code>fab fa-weibo</code></li><li>Wechat: <code>fab fa-weixin</code></li><li>QQ: <code>fab fa-qq</code></li><li>Zhihu: <code>fab fa-zhihu</code></li></ul><blockquote><p><strong>注意</strong>: 本主题中使用的 <code>Font Awesome</code> 版本为 <code>5.11.0</code>。</p></blockquote><h3 id="修改打赏的二维码图片"><a href="#修改打赏的二维码图片" class="headerlink" title="修改打赏的二维码图片"></a>修改打赏的二维码图片</h3><p>在主题文件的 <code>source/medias/reward</code> 文件中，你可以替换成你的的微信和支付宝的打赏二维码图片。</p><h3 id="配置音乐播放器（可选的）"><a href="#配置音乐播放器（可选的）" class="headerlink" title="配置音乐播放器（可选的）"></a>配置音乐播放器（可选的）</h3><p>要支持音乐播放，在主题的 <code>_config.yml</code> 配置文件中激活music配置即可：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"># 是否在首页显示音乐music:  enable: true  title:         # 非吸底模式有效    enable: true    show: 听听音乐  server: netease   # require music platform: netease, tencent, kugou, xiami, baidu  type: playlist    # require song, playlist, album, search, artist  id: 503838841     # require song id &#x2F; playlist id &#x2F; album id &#x2F; search keyword  fixed: false      # 开启吸底模式  autoplay: false   # 是否自动播放  theme: &#39;#42b983&#39;  loop: &#39;all&#39;       # 音频循环播放, 可选值: &#39;all&#39;, &#39;one&#39;, &#39;none&#39;  order: &#39;random&#39;   # 音频循环顺序, 可选值: &#39;list&#39;, &#39;random&#39;  preload: &#39;auto&#39;   # 预加载，可选值: &#39;none&#39;, &#39;metadata&#39;, &#39;auto&#39;  volume: 0.7       # 默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效  listFolded: true  # 列表默认折叠</code></pre><blockquote><p><code>server</code>可选<code>netease</code>（网易云音乐），<code>tencent</code>（QQ音乐），<code>kugou</code>（酷狗音乐），<code>xiami</code>（虾米音乐），</p><p><code>baidu</code>（百度音乐）。</p><p><code>type</code>可选<code>song</code>（歌曲），<code>playlist</code>（歌单），<code>album</code>（专辑），<code>search</code>（搜索关键字），<code>artist</code>（歌手）</p><p><code>id</code>获取方法示例: 浏览器打开网易云音乐，点击我喜欢的音乐歌单，浏览器地址栏后面会有一串数字，<code>playlist</code>的<code>id</code></p><p>即为这串数字。</p></blockquote><h3 id="添加note"><a href="#添加note" class="headerlink" title="添加note"></a>添加note</h3><blockquote><p><a href="https://blog.17lai.site/posts/cf0f47fd/#tag-note">演示</a></p></blockquote><h4 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h4><pre class="language-none"><code class="language-none">&#123;% note [class] [no-icon] [summary] %&#125;Any content (support inline tags too).&#123;% endnote %&#125;</code></pre><ul><li><code>[class]</code> : <em>Optional parameter.</em> Supported values: default | primary | success | info | warning | danger.</li><li><code>[no-icon]</code> : <em>Optional parameter.</em> Disable icon in note.</li><li><code>[summary]</code> : <em>Optional parameter.</em> Optional summary of the note.</li></ul><p>All parameters are optional.</p><h4 id="example"><a href="#example" class="headerlink" title="example"></a>example</h4><pre class="language-none"><code class="language-none">&#123;% note %&#125;#### Header(without define class style)&#123;% endnote %&#125;</code></pre><h3 id="添加button"><a href="#添加button" class="headerlink" title="添加button"></a>添加button</h3><blockquote><p><a href="https://blog.17lai.site/posts/cf0f47fd/#tag-button">演示</a></p></blockquote><h4 id="Usage-1"><a href="#Usage-1" class="headerlink" title="Usage"></a>Usage</h4><pre class="language-none"><code class="language-none">&#123;% button url, text, icon [class], [title] %&#125;</code></pre><p>or</p><pre class="language-none"><code class="language-none">&#123;% btn url, text, icon [class], [title] %&#125;</code></pre><ul><li><code>url</code> : Absolute or relative path to URL.</li><li><code>text</code> : Button text. Required if no icon specified.</li><li><code>icon</code> : Font Awesome icon name. Required if no text specified.</li><li><code>[class]</code> : <em>Optional parameter.</em> Font Awesome class(es): <code>fa-fw</code> | <code>fa-lg</code> | <code>fa-2x</code> | <code>fa-3x</code> | <code>fa-4x</code> | <code>fa-5x</code></li><li><code>[title]</code> : <em>Optional parameter.</em> Tooltip at mouseover.</li></ul><h4 id="Examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h4><pre class="language-none"><code class="language-none">&#123;% button #, Text %&#125;</code></pre><h2 id="文章-Front-matter-介绍"><a href="#文章-Front-matter-介绍" class="headerlink" title="文章 Front-matter 介绍"></a>文章 Front-matter 介绍</h2><h3 id="Front-matter-选项详解"><a href="#Front-matter-选项详解" class="headerlink" title="Front-matter 选项详解"></a>Front-matter 选项详解</h3><p><code>Front-matter</code> 选项中的所有内容均为<strong>非必填</strong>的。但我仍然建议至少填写 <code>title</code> 和 <code>date</code> 的值。</p><table><thead><tr><th>配置选项</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>title</td><td><code>Markdown</code> 的文件标题</td><td>文章标题，强烈建议填写此选项</td></tr><tr><td>date</td><td>文件创建时的日期时间</td><td>发布时间，强烈建议填写此选项，且最好保证全局唯一</td></tr><tr><td>author</td><td>根 <code>_config.yml</code> 中的 <code>author</code></td><td>文章作者</td></tr><tr><td>img</td><td><code>featureImages</code> 中的某个值</td><td>文章特征图，推荐使用图床(腾讯云、七牛云、又拍云等)来做图片的路径.如: <code>http://xxx.com/xxx.jpg</code></td></tr><tr><td>top</td><td><code>true</code></td><td>推荐文章（文章是否置顶），如果 <code>top</code> 值为 <code>true</code>，则会作为首页推荐文章</td></tr><tr><td>hide</td><td><code>false</code></td><td>隐藏文章，如果<code>hide</code>值为<code>true</code>，则文章不会在首页显示</td></tr><tr><td>cover</td><td><code>false</code></td><td><code>v1.0.2</code>版本新增，表示该文章是否需要加入到首页轮播封面中</td></tr><tr><td>coverImg</td><td>无</td><td><code>v1.0.2</code>版本新增，表示该文章在首页轮播封面需要显示的图片路径，如果没有，则默认使用文章的特色图片</td></tr><tr><td>password</td><td>无</td><td>文章阅读密码，如果要对文章设置阅读验证密码的话，就可以设置 <code>password</code> 的值，该值必须是用 <code>SHA256</code> 加密后的密码，防止被他人识破。前提是在主题的 <code>config.yml</code> 中激活了 <code>verifyPassword</code> 选项</td></tr><tr><td>toc</td><td><code>true</code></td><td>是否开启 TOC，可以针对某篇文章单独关闭 TOC 的功能。前提是在主题的 <code>config.yml</code> 中激活了 <code>toc</code> 选项</td></tr><tr><td>mathjax</td><td><code>false</code></td><td>是否开启数学公式支持 ，本文章是否开启 <code>mathjax</code>，且需要在主题的 <code>_config.yml</code> 文件中也需要开启才行</td></tr><tr><td>summary</td><td>无</td><td>文章摘要，自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要</td></tr><tr><td>categories</td><td>无</td><td>文章分类，本主题的分类表示宏观上大的分类，只建议一篇文章一个分类</td></tr><tr><td>tags</td><td>无</td><td>文章标签，一篇文章可以多个标签</td></tr><tr><td>keywords</td><td>文章标题</td><td>文章关键字，SEO 时需要</td></tr><tr><td>reprintPolicy</td><td>cc_by</td><td>文章转载规则， 可以是 cc_by, cc_by_nd, cc_by_sa, cc_by_nc, cc_by_nc_nd, cc_by_nc_sa, cc0, noreprint 或 pay 中的一个</td></tr></tbody></table><blockquote><p><strong>注意</strong>:</p><ol><li>如果 <code>img</code> 属性不填写的话，文章特色图会根据文章标题的 <code>hashcode</code> 的值取余，然后选取主题中对应的特色图片，从而达到让所有文章的特色图<strong>各有特色</strong>。</li><li><code>date</code> 的值尽量保证每篇文章是唯一的，因为本主题中 <code>Gitalk</code> 和 <code>Gitment</code> 识别 <code>id</code> 是通过 <code>date</code> 的值来作为唯一标识的。</li><li>如果要对文章设置阅读验证密码的功能，不仅要在 Front-matter 中设置采用了 SHA256 加密的 password 的值，还需要在主题的 <code>_config.yml</code> 中激活了配置。有些在线的 SHA256 加密的地址，可供你使用：<a href="http://tool.oschina.net/encrypt?type=2">开源中国在线工具</a>、<a href="http://encode.chahuo.com/">chahuo</a>、<a href="http://tool.chinaz.com/tools/hash.aspx">站长工具</a>。</li><li>您可以在文章md文件的 front-matter 中指定 reprintPolicy 来给单个文章配置转载规则</li></ol></blockquote><p>以下为文章的 <code>Front-matter</code> 示例。</p><h3 id="最简示例"><a href="#最简示例" class="headerlink" title="最简示例"></a>最简示例</h3><pre class="language-yaml" data-language="yaml"><code class="language-yaml">---title: typora-vue-theme主题介绍date: 2018-09-07 09:25:00---</code></pre><h3 id="最全示例"><a href="#最全示例" class="headerlink" title="最全示例"></a>最全示例</h3><pre class="language-yaml" data-language="yaml"><code class="language-yaml">---title: typora-vue-theme主题介绍date: 2018-09-07 09:25:00author: 赵奇img: &#x2F;source&#x2F;images&#x2F;xxx.jpgtop: truehide: falsecover: truecoverImg: &#x2F;images&#x2F;1.jpgpassword: 8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92toc: falsemathjax: falsesummary: 这是你自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要categories: Markdowntags:  - Typora  - Markdown---</code></pre><h2 id="效果截图"><a href="#效果截图" class="headerlink" title="效果截图"></a>效果截图</h2><p><img src="http://static.blinkfox.com/matery-20181202-1.png" alt="首页"></p><p><img src="http://static.blinkfox.com/matery-20181202-2.png" alt="首页推荐文章"></p><p><img src="http://static.blinkfox.com/matery-20181202-3.png" alt="首页文章列表"></p><p><img src="http://static.blinkfox.com/matery-20181202-7.png" alt="首页文章列表"></p><p><img src="http://static.blinkfox.com/matery-20181202-8.png" alt="首页文章列表"></p><h2 id="自定制修改"><a href="#自定制修改" class="headerlink" title="自定制修改"></a>自定制修改</h2><p>在本主题的 <code>_config.yml</code> 中可以修改部分自定义信息，有以下几个部分：</p><ul><li>菜单</li><li>我的梦想</li><li>首页的音乐播放器和视频播放器配置</li><li>是否显示推荐文章名称和按钮配置</li><li><code>favicon</code> 和 <code>Logo</code></li><li>个人信息</li><li>TOC 目录</li><li>文章打赏信息</li><li>复制文章内容时追加版权信息</li><li>MathJax</li><li>文章字数统计、阅读时长</li><li>点击页面的’爱心’效果</li><li>我的项目</li><li>我的技能</li><li>我的相册</li><li><code>Gitalk</code>、<code>Gitment</code>、<code>Valine</code> 和 <code>disqus</code> 评论配置</li><li><a href="http://busuanzi.ibruce.info/">不蒜子统计</a>和谷歌分析（<code>Google Analytics</code>）</li><li>默认特色图的集合。当文章没有设置特色图时，本主题会根据文章标题的 <code>hashcode</code> 值取余，来选择展示对应的特色图</li></ul><p><strong>我认为个人博客应该都有自己的风格和特色</strong>。如果本主题中的诸多功能和主题色彩你不满意，可以在主题中自定义修改，很多更自由的功能和细节点的修改难以在主题的 <code>_config.yml</code> 中完成，需要修改源代码才来完成。以下列出了可能对你有用的地方：</p><h3 id="修改主题颜色"><a href="#修改主题颜色" class="headerlink" title="修改主题颜色"></a>修改主题颜色</h3><p>在主题文件的 <code>/source/css/matery.css</code> 文件中，搜索 <code>.bg-color</code> 来修改背景颜色：</p><pre class="language-css" data-language="css"><code class="language-css">&#x2F;* 整体背景颜色，包括导航、移动端的导航、页尾、标签页等的背景颜色. *&#x2F;.bg-color &#123;    background-image: linear-gradient(to right, #4cbf30 0%, #0f9d58 100%);&#125;@-webkit-keyframes rainbow &#123;   &#x2F;* 动态切换背景颜色. *&#x2F;&#125;@keyframes rainbow &#123;    &#x2F;* 动态切换背景颜色. *&#x2F;&#125;</code></pre><h3 id="修改-banner-图和文章特色图"><a href="#修改-banner-图和文章特色图" class="headerlink" title="修改 banner 图和文章特色图"></a>修改 banner 图和文章特色图</h3><p>你可以直接在 <code>/source/medias/banner</code> 文件夹中更换你喜欢的 <code>banner</code> 图片，主题代码中是每天动态切换一张，只需 <code>7</code> 张即可。如果你会 <code>JavaScript</code> 代码，可以修改成你自己喜欢切换逻辑，如：随机切换等，<code>banner</code> 切换的代码位置在 <code>/layout/_partial/bg-cover-content.ejs</code> 文件的 <code>&lt;script&gt;&lt;/script&gt;</code> 代码中：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript">$(&#39;.bg-cover&#39;).css(&#39;background-image&#39;, &#39;url(&#x2F;medias&#x2F;banner&#x2F;&#39; + new Date().getDay() + &#39;.jpg)&#39;);</code></pre><p>在 <code>/source/medias/featureimages</code> 文件夹中默认有 24 张特色图片，你可以再增加或者减少，并需要在 <code>_config.yml</code> 做同步修改。</p><h2 id="版本变更记录"><a href="#版本变更记录" class="headerlink" title="版本变更记录"></a>版本变更记录</h2><p>参见 <a href="https://github.com/blinkfox/hexo-theme-matery/blob/master/CHANGELOG.md">CHANGELOG.md</a></p><h2 id="更多部署方式"><a href="#更多部署方式" class="headerlink" title="更多部署方式"></a>更多部署方式</h2><blockquote><p>Jsdelivr 已经被封了，这两个可以加速访问快一点</p></blockquote><h3 id="vercel-部署"><a href="#vercel-部署" class="headerlink" title="vercel 部署"></a><a href="https://blog.17lai.site/posts/5311b619/#vercel-%E9%83%A8%E7%BD%B2">vercel 部署</a></h3><h3 id="cloudflare-Pages-部署"><a href="#cloudflare-Pages-部署" class="headerlink" title="cloudflare Pages 部署"></a><a href="https://blog.17lai.site/posts/5311b619/#cloudflare-Pages-%E9%83%A8%E7%BD%B2">cloudflare Pages 部署</a></h3>]]></content>
      
      
      <categories>
          
          <category> 博客搭建记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> matery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>机器学习-2</title>
      <link href="/2023/05/21/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-2%20-%20ol/"/>
      <url>/2023/05/21/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-2%20-%20ol/</url>
      
        <content type="html"><![CDATA[<h1 id="回顾"><a href="#回顾" class="headerlink" title="回顾"></a>回顾</h1><h2 id="为什么标红位置可以合并"><a href="#为什么标红位置可以合并" class="headerlink" title="为什么标红位置可以合并"></a>为什么标红位置可以合并</h2><p><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-2-1.png"><br>最后求得的其实是一个数， 有A^T&#x3D;A</p><h2 id="为什么无解（逆不存在处理方式）"><a href="#为什么无解（逆不存在处理方式）" class="headerlink" title="为什么无解（逆不存在处理方式）"></a>为什么无解（逆不存在处理方式）</h2><ul><li>逆可能不存在<br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-2-30.png"></li></ul><h3 id="逆不存在问题如何解决"><a href="#逆不存在问题如何解决" class="headerlink" title="逆不存在问题如何解决"></a>逆不存在问题如何解决</h3><p><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-2-2.png"><br>加一个人为构造项，解决行列式等于0（逆不存在）的问题</p><h1 id="符号和数据的概念"><a href="#符号和数据的概念" class="headerlink" title="符号和数据的概念"></a>符号和数据的概念</h1><h2 id="连加和连乘（略）"><a href="#连加和连乘（略）" class="headerlink" title="连加和连乘（略）"></a>连加和连乘（略）</h2><h2 id="其他常用符号"><a href="#其他常用符号" class="headerlink" title="其他常用符号"></a>其他常用符号</h2><p><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-2-3.png"></p><ul><li>范数【1（曼哈顿距离）、2、无穷（取最大值）】</li><li><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/Pasted%20image%2020230703170706.png"><br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-2-12.png"></li></ul><h2 id="向量、矩阵、张量"><a href="#向量、矩阵、张量" class="headerlink" title="向量、矩阵、张量"></a>向量、矩阵、张量</h2><p><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-2-4.png"></p><ul><li>第一维是表示有几层</li><li>彩色图像的张量，R，G，B（3个通道）分别为一个2维矩阵，叠加在一起形成一个3维张量</li><li>np.zeros和torch.tensor（数组与张量）的区别——库不一样（代码层面不同，数学意义相同）<br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-2-6.png"></li></ul><h2 id="精确率与召回率"><a href="#精确率与召回率" class="headerlink" title="精确率与召回率"></a>精确率与召回率</h2><p><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-2-7.png"></p><p><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-2-8.png"></p><ul><li>错杀比例和漏网比例<br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-2-9.png"></li><li>F1综合了两个指标<br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-2-10.png"></li><li>准确率与召回率的负相关关系<br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-2-11.png"></li><li>补充，ROC曲线，AUC面积</li></ul><h1 id="证明逻辑回归是线性分类器（线性分类器和非线性分类器）"><a href="#证明逻辑回归是线性分类器（线性分类器和非线性分类器）" class="headerlink" title="证明逻辑回归是线性分类器（线性分类器和非线性分类器）"></a>证明逻辑回归是线性分类器（线性分类器和非线性分类器）</h1><h2 id="基础内容（什么是逻辑回归）"><a href="#基础内容（什么是逻辑回归）" class="headerlink" title="基础内容（什么是逻辑回归）"></a>基础内容（什么是逻辑回归）</h2><p><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-2-13.png"></p><h2 id="为什么逻辑回归是线性分类器"><a href="#为什么逻辑回归是线性分类器" class="headerlink" title="为什么逻辑回归是线性分类器"></a>为什么逻辑回归是线性分类器</h2><ul><li>对于分界线上的点有以下内容（决策边界是线性表达的）<br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-2-14.png"></li><li>什么叫线性分类器——决策边界是线性表达的，是直线、平面或超平面</li><li>当一个问题可以用线性分类器也可以用非线性分类器时，&#x3D;&#x3D;效果也差不多&#x3D;&#x3D;，线性分类器计算效率很高，所以在大规模应用时可以优先选择线性分类器<ul><li>线性分类器——拟合效果差、计算效率高</li><li>逻辑回归为什么是线性分类器</li></ul></li></ul><h2 id="判定语句区别（内存存储问题）"><a href="#判定语句区别（内存存储问题）" class="headerlink" title="判定语句区别（内存存储问题）"></a>判定语句区别（内存存储问题）</h2><pre><code> &quot;= =&quot;用于检查两个表达式的值是否相等，它会比较两个表达式的值，如果值相等，则返回True，否则返回False。 而is运算符则用于比较两个对象是否完全相同(即比较它们在内存中的地址)，如果两个表达式引用的是同一个对象，则返回True， 否则返回布尔值和空字False。因此，在Python中，对于简单的数据类型比如整数、符串等常用类型，通常使用&quot;is”来进行比较更加高效。 所以，在if语句中，使用&quot;= =&quot;比较值是否相等的话，相当于比较两个变量所代表的值是否相等。而使用”is”比较的是两个变量所引用的对象是否相同</code></pre><p><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-2-15.png"></p><ul><li>最终权重趋于无穷<br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-2-16.png"></li></ul><h1 id="梯度下降"><a href="#梯度下降" class="headerlink" title="梯度下降"></a>梯度下降</h1><ul><li>为什么是负梯度下降——向最小方向移动<br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-2-17.png"></li></ul><h2 id="随机梯度下降法"><a href="#随机梯度下降法" class="headerlink" title="随机梯度下降法"></a>随机梯度下降法</h2><p><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-2-18.png"></p><ul><li>o(1),改变样本（随机梯度下降）</li><li>o(n),要遍历所有样本（原始梯度下降）</li><li>正则，防止过拟合（只影响权重，对偏执没有影响）<br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-2-19.png"></li></ul><h2 id="小批量梯度下降法（分批次计算）"><a href="#小批量梯度下降法（分批次计算）" class="headerlink" title="小批量梯度下降法（分批次计算）"></a>小批量梯度下降法（分批次计算）</h2><p><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-2-20.png"></p><ul><li>小批量也要引入随机概念，每次计算后要把总体打乱一次（shuffle），形成小批量+随机的计算模式</li></ul><h1 id="最大似然估计与最大后验估计"><a href="#最大似然估计与最大后验估计" class="headerlink" title="最大似然估计与最大后验估计"></a>最大似然估计与最大后验估计</h1><h2 id="什么是最大似然估计（MLE）"><a href="#什么是最大似然估计（MLE）" class="headerlink" title="什么是最大似然估计（MLE）"></a>什么是最大似然估计（MLE）</h2><ul><li>由已知观测条件与观测样本推断在什么整体分布类型以及总体参数下，这些样本出现的概率最大<br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-2-21.png"></li><li>什么是参数——决定模型特性的数值</li></ul><h2 id="最大后验估计（MAP）"><a href="#最大后验估计（MAP）" class="headerlink" title="最大后验估计（MAP）"></a>最大后验估计（MAP）</h2><ul><li>引入先验概率<br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-2-22.png"><br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-2-23.png"><br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-2-24.png"></li><li>区别：引入先验概率</li><li>联系：最大似然估计是基础</li></ul><h2 id="先验概率"><a href="#先验概率" class="headerlink" title="先验概率"></a>先验概率</h2><p><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-2-25.png"></p><ul><li>统计学上是如何判断斯分布与拉普拉斯分布的？</li><li>服从高斯分布使用L2正则化<br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-2-26.png"><br>服从拉普拉斯分布使用L1正则化<br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-2-27.png"></li></ul><h1 id="K折交叉验证"><a href="#K折交叉验证" class="headerlink" title="K折交叉验证"></a>K折交叉验证</h1><ul><li>多次划分训练与验证集</li><li>为了确定超参数 lamda<br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-2-28.png"></li></ul><h1 id="留一法交叉验证（数据少）"><a href="#留一法交叉验证（数据少）" class="headerlink" title="留一法交叉验证（数据少）"></a>留一法交叉验证（数据少）</h1><p><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-2-29.png"></p><h1 id="补充内容"><a href="#补充内容" class="headerlink" title="补充内容"></a>补充内容</h1><p><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-2-31.png"><br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-2-32.png"><br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-2-33.png"></p>]]></content>
      
      
      <categories>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
            <tag> 线性回归 </tag>
            
            <tag> 罗辑回归 </tag>
            
            <tag> 正则化 </tag>
            
            <tag> 范数 </tag>
            
            <tag> 张量 </tag>
            
            <tag> 梯度下降 </tag>
            
            <tag> 最大似然估计 </tag>
            
            <tag> 最大后验概率 </tag>
            
            <tag> MLE </tag>
            
            <tag> MAP </tag>
            
            <tag> 交叉验证 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建腾讯云图床</title>
      <link href="/2023/05/20/4.%E6%90%AD%E5%BB%BA%E5%9B%BE%E5%BA%8A/"/>
      <url>/2023/05/20/4.%E6%90%AD%E5%BB%BA%E5%9B%BE%E5%BA%8A/</url>
      
        <content type="html"><![CDATA[<h1 id="创建腾讯云账号"><a href="#创建腾讯云账号" class="headerlink" title="创建腾讯云账号"></a>创建腾讯云账号</h1><ul><li>访问<a href="https://eryinote.com/go?_=b40bb5185daHR0cHM6Ly91cmwuY24vZGE0S1V6ek0=">腾讯云官网</a>进行注册</li><li>访问<a href="https://eryinote.com/go?_=fb37322f65aHR0cHM6Ly9jb25zb2xlLmNsb3VkLnRlbmNlbnQuY29tL2Nvcw==">COS（对象存储）页面</a>申请开通COS，开通后会获得 50G 的免费存储额度，有效期为 180 天</li><li>在存储桶列表中创建存储桶</li><li>填写相应个人资料，&#x3D;&#x3D;访问权限&#x3D;&#x3D;设为&#x3D;&#x3D;公有读私有写&#x3D;&#x3D;，并开启默认告警</li><li>在高级可选配制中可以自行选择开启版本控制与多AZ特性</li><li>在所创建存储桶中的文件夹列表中点击创建文件，记住文件名与所属地域</li><li>进入<a href="https://console.cloud.tencent.com/cam/capi">密钥管理界面</a>-   点击 新建秘钥，然后复制并<strong>谨慎保存</strong> <code>APPID</code>、 <code>SecretID</code> 以及 <code>SecretKey</code>。注意这些秘钥一定不能泄露</li></ul><h1 id="配置PicGo"><a href="#配置PicGo" class="headerlink" title="配置PicGo"></a>配置PicGo</h1><ul><li>访问 PicGo 的 Github 项目地址并安装PicGo客户端：<a href="https://eryinote.com/go?_=31614169aaaHR0cHM6Ly9naXRodWIuY29tL01vbHVuZXJmaW5uL1BpY0dvL3JlbGVhc2Vz">Releases · Molunerfinn&#x2F;PicGo (github.com)</a></li><li>配置PicGo中的腾讯云COS设置<br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/%E6%90%AD%E5%BB%BA%E5%9B%BE%E5%BA%8A-1.png"></li><li>将默认图床切换至腾讯云图床，然后将图片拖到上传框中，测试是否可以上传，如果提示上传成功，就说明所有配置都成功了</li></ul><h1 id="使用PicGo"><a href="#使用PicGo" class="headerlink" title="使用PicGo"></a>使用PicGo</h1><ul><li>在 PicGo 的默认设置中，图片上传成功后，会自动复制这张图片的链接到你的剪贴板中</li><li>如果你是要搭配 Markdown 笔记软件进行使用，你可以将「链接格式」切换到「Markdown」这一栏中</li><li>然后就可以直接到 Markdown 笔记软件中进行粘贴了</li><li>如果你用的是 Obsidian，则需要下载 <code>Image auto upload Plugin</code> 这个插件，也能实现插入图片自动上传图床的效果<br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/%E6%90%AD%E5%BB%BA%E5%9B%BE%E5%BA%8A-2.png"></li><li>在Obsidian中插件设置详见插件说明文档，保证插件设置端口与picgo-sever设置端口相同<br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/%E6%90%AD%E5%BB%BA%E5%9B%BE%E5%BA%8A-3.png"></li><li>此外可设置下载图片快捷键，方便本地备份与上传<br><img src="https://aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com/blogpic/%E6%90%AD%E5%BB%BA%E5%9B%BE%E5%BA%8A-4.png"></li></ul><hr><p>参考博客：<br><a href="https://eryinote.com/post/105">https://eryinote.com/post/105</a></p>]]></content>
      
      
      <categories>
          
          <category> 博客搭建记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图床 </tag>
            
            <tag> PicGo </tag>
            
            <tag> Obsidian </tag>
            
            <tag> markdown </tag>
            
            <tag> 腾讯云 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>页面设置</title>
      <link href="/2023/05/19/5.home-page-configuration/"/>
      <url>/2023/05/19/5.home-page-configuration/</url>
      
        <content type="html"><![CDATA[<h1 id="导航栏设置"><a href="#导航栏设置" class="headerlink" title="导航栏设置"></a>导航栏设置</h1><ul><li>修改主配置文件中的<code>_config.butterfly.yml_</code>如下所示<pre class="language-none"><code class="language-none">nav:    logo: # image    display_title: true    fixed: false # fixed navigation bar</code></pre><table><thead><tr><th align="center">参数</th><th align="left">解释</th></tr></thead><tbody><tr><td align="center">logo</td><td align="left">网站的logo，支持图片，直接填入图片链接</td></tr><tr><td align="center">display_title</td><td align="left">是否显示网站标题， true or false</td></tr><tr><td align="center">fixed</td><td align="left">是否固定状态栏， true or false</td></tr></tbody></table></li></ul><h1 id="菜单-目录"><a href="#菜单-目录" class="headerlink" title="菜单&#x2F;目录"></a>菜单&#x2F;目录</h1><ul><li>修改主配置文件中的<code>_config.butterfly.yml_</code>如下所示<pre class="language-none"><code class="language-none">  主页: &#x2F; || fas fa-home    博文 || fa fa-graduation-cap:      分类: &#x2F;categories&#x2F; || fa fa-archive      标签: &#x2F;tags&#x2F; || fa fa-tags      归档: &#x2F;archives&#x2F; || fa fa-folder-open  #  生活 || fas fa-list:#    分享: &#x2F;shuoshuo&#x2F; || fa fa-comments-o  #    相册: &#x2F;photos&#x2F; || fa fa-camera-retro  #    音乐: &#x2F;music&#x2F; || fa fa-music  #    影视: &#x2F;movies&#x2F; || fas fa-video    友链: &#x2F;links&#x2F; || fa fa-link  #  留言板: &#x2F;comment&#x2F; || fa fa-paper-plane  #  留言板: &#x2F;messageboard&#x2F; || fa fa-paper-plane    关于笔者: &#x2F;about&#x2F; || fas fa-heart</code></pre></li><li>以上所有的导航栏中的栏目一定都要使用<code>hexo new page 项目名</code>在根目录新建文件夹</li></ul><h1 id="标签页"><a href="#标签页" class="headerlink" title="标签页"></a>标签页</h1><ul><li>前往根目录，使用gitbash，输入以下命令<pre class="language-none"><code class="language-none">hexo new page tags</code></pre><ul><li>找到<code>source/tags/index.md</code>这个文件，并修改这个文件，添加<code>type: &quot;tags&quot;</code>：<pre class="language-none"><code class="language-none">--- title: 标签  date: 2023-05-19 19:35:40  type: tags  orderby: random   order: 1---</code></pre><table><thead><tr><th align="center">参数</th><th align="left">解释</th></tr></thead><tbody><tr><td align="center">type</td><td align="left">【必须】页面类型，必须为tag</td></tr><tr><td align="center">orderby</td><td align="left">【可选】排序方式：random&#x2F;name&#x2F;length</td></tr><tr><td align="center">order</td><td align="left">【可选】排序次序： 1, asc for ascending; -1, desc for descending</td></tr></tbody></table></li></ul></li><li>使用以下命令依次按需求添加自己所需页面，应与<code>菜单\目录</code>中内容相对应，使用命令会自动生成<code>index</code>文件，可以批量新建page后再逐一修改<code>index</code>文件<pre class="language-none"><code class="language-none">hexo new page categorieshexo new page link</code></pre></li><li>在根目录<code>source</code>中创建<code>_data</code>文件夹，在其中创建一个<code>link.yml</code>文件，写入以下内容，其中<code>class_name</code> 和 <code>class_desc</code> 支持 html 格式书写，如不需要，也可以留空。<pre class="language-none"><code class="language-none">- class_name: 链接  class_desc: 那些人，那些事  link_list:    - name: GitHub      link: https:&#x2F;&#x2F;github.com&#x2F;      avatar: https:&#x2F;&#x2F;aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com&#x2F;blogpic&#x2F;20230520173243.png      descr: 开源代码托管平台    - name: Hexo      link: https:&#x2F;&#x2F;hexo.io&#x2F;zh-tw&#x2F;      avatar: https:&#x2F;&#x2F;d33wubrfki0l68.cloudfront.net&#x2F;6657ba50e702d84afb32fe846bed54fba1a77add&#x2F;827ae&#x2F;logo.svg      descr: 快速、简单且強大的博客框架- class_name: 网站  class_desc: 值得推荐的网站  link_list:    - name: BiliBili      link: www.bilibili.com      avatar: https:&#x2F;&#x2F;aucnm0202-1318327891.cos.ap-shanghai.myqcloud.com&#x2F;blogpic&#x2F;20230520173745.png      descr: 中国最大学习网站    - name: Youtube      link: https:&#x2F;&#x2F;www.youtube.com&#x2F;      avatar: https:&#x2F;&#x2F;i.loli.net&#x2F;2020&#x2F;05&#x2F;14&#x2F;9ZkGg8v3azHJfM1.png      descr: 视频网站    - name: Weibo      link: https:&#x2F;&#x2F;www.weibo.com&#x2F;      avatar: https:&#x2F;&#x2F;i.loli.net&#x2F;2020&#x2F;05&#x2F;14&#x2F;TLJBum386vcnI1P.png      descr: 中国最大社交分享平台    - name: Twitter      link: https:&#x2F;&#x2F;twitter.com&#x2F;      avatar: https:&#x2F;&#x2F;i.loli.net&#x2F;2020&#x2F;05&#x2F;14&#x2F;5VyHPQqR6LWF39a.png      descr: 社交分享平台</code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> 博客搭建记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 导航栏 </tag>
            
            <tag> 参数 </tag>
            
            <tag> 解释 </tag>
            
            <tag> 菜单 </tag>
            
            <tag> 页面 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客主题设置</title>
      <link href="/2023/05/19/2.%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E8%AE%BE%E7%BD%AE/"/>
      <url>/2023/05/19/2.%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E8%AE%BE%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h1><ul><li>在根目录[^01]用gitbash窗口运行以下命令，安装butterfly<pre class="language-none"><code class="language-none">git clone -b master https:&#x2F;&#x2F;github.com&#x2F;jerryc127&#x2F;hexo-theme-butterfly.git themes&#x2F;butterfly</code></pre></li><li>安装成功验证：此时<code>根目录/theme</code>文件夹下应当有<code>butterfly</code>文件夹</li></ul><h1 id="选用主题"><a href="#选用主题" class="headerlink" title="选用主题"></a>选用主题</h1><ul><li>修改根目录下的<code>config.yml</code>，把主题改为butterfly,如下所示<pre class="language-none"><code class="language-none"># Extensions  ## Plugins: https:&#x2F;&#x2F;hexo.io&#x2F;plugins&#x2F;  ## Themes: https:&#x2F;&#x2F;hexo.io&#x2F;themes&#x2F;  theme: butterfly</code></pre></li></ul><h1 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h1><ul><li><p>安装pug以及stylus的渲染器</p><pre class="language-none"><code class="language-none">npm install hexo-renderer-pug hexo-renderer-stylus --save</code></pre></li><li><p>为了减少升级主题后带来的不便，请使用以下方法（建议，可以不做）。</p><ul><li><p>在hexo的根目录创建一个文件<code>_config.butterfly.yml</code>，并把主题目录的<code>_config.yml</code>内容复制到<code>_config.butterfly.yml</code>去。(注意:复制的是主题的<code>_config.yml</code>，而不是hexo的<code>_config.yml</code>)</p></li><li><p>注意：不要把主题目录的<code>_config.yml</code>删掉</p></li><li><p>注意：以后只需要在<code>_config.butterfly.yml</code>进行配置就行。</p></li><li><p>如果使用了<code>_config.butterfly.yml</code>，配置主题的<code>_config.yml</code>将不会有效果。</p></li><li><p>Hexo会自动合并主题中的<code>_config.yml</code>和<code>_config.butterfly.yml</code>里的配置，如果存在同名配置，会使用<code>_config.butterfly.yml</code>的配置，其优先度较高。</p></li></ul></li></ul><h1 id="部署本地搜索功能"><a href="#部署本地搜索功能" class="headerlink" title="部署本地搜索功能"></a>部署本地搜索功能</h1><ul><li>使用以下指令，安装<code>hexo-generator-search</code>[^02]搜索插件<pre class="language-none"><code class="language-none">npm install hexo-generator-search --save</code></pre></li><li>修改主题配置文件 <code>_config.butterfly.yml</code>（按GitHub中的说明进行配置即可）<pre class="language-none"><code class="language-none">local_search:    enable: true    path: search.xml    field: post    content: true    template: .&#x2F;search.xml</code></pre></li></ul><hr><p>[^01]:在my firs blog中创建的文件夹，即MyBlog文件夹<br>[^02]:<a href="https://github.com/wzpan/hexo-generator-search">https://github.com/wzpan/hexo-generator-search</a><br>参考网址：<br><a href="https://butterfly.js.org/posts/21cfbf15/">https://butterfly.js.org/posts/21cfbf15/</a><br><a href="https://blog.csdn.net/mjh1667002013/article/details/129290903?spm=1001.2014.3001.5506">https://blog.csdn.net/mjh1667002013/article/details/129290903?spm=1001.2014.3001.5506</a></p>]]></content>
      
      
      <categories>
          
          <category> 博客搭建记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 主题 </tag>
            
            <tag> 本地 </tag>
            
            <tag> 搜索 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>上传新博客内容</title>
      <link href="/2023/05/19/3.%E4%B8%8A%E4%BC%A0%E6%96%B0%E5%8D%9A%E5%AE%A2%E5%86%85%E5%AE%B9/"/>
      <url>/2023/05/19/3.%E4%B8%8A%E4%BC%A0%E6%96%B0%E5%8D%9A%E5%AE%A2%E5%86%85%E5%AE%B9/</url>
      
        <content type="html"><![CDATA[<h1 id="上传内容"><a href="#上传内容" class="headerlink" title="上传内容"></a>上传内容</h1><ol><li>安装扩展<ul><li><code>npm i hexo-deployer-git</code></li></ul></li><li>输入<code>hexo new post &quot;我的第一篇博客&quot;</code>创建一篇文章</li><li>然后打开<code>D:\Hexo\source\_posts</code>的目录，可以发现下面多了一个文件夹和一个<code>.md</code>文件，一个用来存放你的图片等数据，另一个就是你的文章文件</li><li>编写完markdown文件后，根目录下输入<code>hexo g</code>生成静态网页，然后输入<code>hexo s</code>可以本地预览效果，最后输入<code>hexo d</code>上传到<code>github</code>上。这时打开你的<code>github.io</code>主页就能看到发布的文章啦。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 博客搭建记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> deploy </tag>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客部署配置</title>
      <link href="/2023/05/19/1.%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE/"/>
      <url>/2023/05/19/1.%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h1><h2 id="node-js"><a href="#node-js" class="headerlink" title="node.js"></a>node.js</h2><ul><li>下载地址: <a href="https://nodejs.org/en/">https://nodejs.org/en/</a></li><li>安装验证：在CMD中运行以下命令，返回相应版本号即为安装成功<ul><li><code>node -v</code></li><li><code>npm -v</code></li></ul></li><li>配制全局安装的模块路径和缓存路径（可选<a href="%E8%87%AA%E5%8A%A8%E5%AE%89%E8%A3%85%E6%88%90%E5%8A%9F%EF%BC%8C%E5%BA%94%E5%BD%93%E8%87%AA%E5%8A%A8%E5%AE%8C%E6%88%90%E5%8F%AF%E9%80%89%E6%AD%A5%E9%AA%A4">^01</a>）<ol><li>在nodejs根目录,创建<code>node_global</code>，<code>node_cache</code>文件夹</li><li>以管理员打开CMD运行以下命令<ul><li><code>npm config set prefix &quot;E:\develop\nodejs\node_global&quot;</code></li><li><code>npm config set cache &quot;E:\develop\nodejs\node_cache&quot;</code></li></ul></li></ol></li><li>配制全局环境变量<code>NODE_HOME</code>至nodejs文件（可选）<ul><li>配制<code>%NODE_HOME%\node_cache</code>与<code>%NODE_HOME%\node_global</code>变量</li></ul></li><li>使用<code>npm install express -g</code>测试（可选）</li></ul><h2 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h2><h3 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h3><ul><li>下载地址：<a href="https://git-scm.com/downloads">https://git-scm.com/downloads</a></li><li>安装教程：<a href="https://www.cnblogs.com/xueweisuoyong/p/11914045.html">https://www.cnblogs.com/xueweisuoyong/p/11914045.html</a></li></ul><h3 id="配置连接github"><a href="#配置连接github" class="headerlink" title="配置连接github"></a>配置连接github</h3><ul><li>需要github账号</li><li>在github创建名为<code>用户名.github.io</code>的new repository</li><li>在本地，新建文件夹如&#x3D;&#x3D;MyBlog&#x3D;&#x3D;，并在MyBlog中右键点选&#x3D;&#x3D;gitbash here&#x3D;&#x3D;,输入以下命令<pre class="language-none"><code class="language-none">git config --global user.name &quot;yourname&quot;git config --global user.email &quot;youremail&quot;</code></pre></li><li>可以使用以下命令验证<pre class="language-none"><code class="language-none">git config user.namegit config user.email</code></pre></li><li>生成SSH Keys，一直回车即可<pre class="language-none"><code class="language-none">ssh-keygen -t rsa -C &quot;youremail&quot;</code></pre></li><li>找到<code>.shh</code>文件夹(.ssh文件通常在系统用户文件中)，将公钥（id_rsa.pub中的内容）填写进github账户中</li><li>或使用以下命令查询SSH（可选）<pre class="language-none"><code class="language-none">cat ~&#x2F;.ssh&#x2F;id_rsa.pub</code></pre></li><li>使用<code>ssh -T git@github.com</code>以验证是否成功<br><strong>详细SSH设置请参考<a href="https://blog.csdn.net/qq_36667170/article/details/79094257">Git教程 SSH keys配置</a></strong></li></ul><h2 id="hexo"><a href="#hexo" class="headerlink" title="hexo"></a>hexo</h2><ol><li>在MyBlog文件中右键点选&#x3D;&#x3D;gitbash here&#x3D;&#x3D;</li><li>在gitbash中运行以下命令<ul><li><code>npm install -g hexo-cli</code></li><li><code>hexo -v</code>（验证安装成功）</li><li><code>hexo init</code></li><li><code>hexo g</code>(等同于<code>hexo generate</code>生成静态页面)</li><li><code>hexo s</code>(等同于<code>hexo server</code>生成本地hexo页面)</li></ul></li><li>运行完成后，指定文件夹<code>Hexo</code>目录下有：<ul><li><code>node_modules:</code> 依赖包</li><li><code>public：</code>存放生成的页面</li><li><code>scaffolds：</code>生成文章的一些模板</li><li><code>source：</code>用来存放你的文章</li><li><code>themes：</code>主题**</li><li><code>_config.yml:</code> 博客的配置文件**</li></ul></li><li>按<code>ctrl+c</code>关闭本地服务器。</li></ol><h1 id="将hexo，即MyBlock文件部署到github"><a href="#将hexo，即MyBlock文件部署到github" class="headerlink" title="将hexo，即MyBlock文件部署到github"></a>将hexo，即MyBlock文件部署到github</h1><ol><li>如下修改MyBlock文件夹中<code>_config.yml</code>文件<pre class="language-none"><code class="language-none">deploy:  type: git  repository: https:&#x2F;&#x2F;github.com&#x2F;用户名&#x2F;用户名.github.io.git  branch: main</code></pre></li><li>安装deploy-git<pre class="language-none"><code class="language-none">npm install hexo-deployer-git --save</code></pre></li><li>然后依次运行以下命令<ul><li><code>hexo clean</code></li><li><code>hexo generate</code></li><li><code>hexo deploy</code></li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> 博客搭建记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> node.js </tag>
            
            <tag> Git </tag>
            
            <tag> GitHub </tag>
            
            <tag> 环境配置 </tag>
            
            <tag> SSH </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
